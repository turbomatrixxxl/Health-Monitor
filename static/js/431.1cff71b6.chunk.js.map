{"version":3,"file":"static/js/431.1cff71b6.chunk.js","mappings":"8RACA,SAAgB,QAAU,0BAA0B,iBAAmB,mCAAmC,YAAc,8BAA8B,oBAAsB,sCAAsC,oBAAsB,sCAAsC,wBAA0B,0CAA0C,SAAW,2BAA2B,KAAO,uBAAuB,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,uBAAuB,YAAc,8BAA8B,WAAa,6BAA6B,SAAW,4B,aCwBrlB,MAAMA,EAAc,CAClBC,OAAQ,qBACRC,OAAQ,qBAGK,SAASC,IAAY,IAADC,EACjC,MAAOC,EAA0BC,IAC/BC,EAAAA,EAAAA,IAAU,GACNC,GAAWC,EAAAA,EAAAA,WAEX,OAAEC,IAAWC,EAAAA,EAAAA,KAGbC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAc,CAAEC,MAAOlB,EAAYC,UAGpDkB,EAAAA,EAAAA,WAAU,KACJd,EACFe,SAASC,KAAKC,UAAUC,IAAIC,EAAOC,UAEnCL,SAASC,KAAKC,UAAUI,OAAOF,EAAOC,UAGxC,MAAME,EAAmBC,IACL,WAAdA,EAAMC,KAAkBvB,KAK9B,OAFAc,SAASU,iBAAiB,UAAWH,GAE9B,KACLP,SAASC,KAAKC,UAAUI,OAAOF,EAAOC,UACtCL,SAASW,oBAAoB,UAAWJ,KAEzC,CAACtB,EAA0BC,IAc9B,GAA0B,UAAtBM,EAASoB,SACX,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,qBAOtB,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAWb,EAAOc,QAAQC,SAAA,CAChClC,IACC4B,EAAAA,EAAAA,KAAA,OACEO,IAAKhC,EACL6B,UAAWb,EAAOiB,aAClBC,QA1BqBd,IACvBA,EAAMe,SAAWf,EAAMgB,eACzBtC,KAwBiCiC,UAE7BN,EAAAA,EAAAA,KAAA,OAAKI,UAAWb,EAAOqB,aAAaN,UAClCH,EAAAA,EAAAA,MAACU,EAAAA,EAAK,CACJC,YAAavB,EAAOuB,YACpBC,iBAAkB1C,EAClB2C,eAAgB5C,EAAyBkC,SAAA,CAExCvB,IACCoB,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAO0B,iBAAiBX,SAAA,EACtCH,EAAAA,EAAAA,MAAA,UAAQC,UAAWb,EAAO2B,YAAYZ,SAAA,EACpCN,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAACf,UAAWb,EAAO6B,uBACxBpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,QAEZrB,EAAAA,EAAAA,KAAA,OAAKI,UAAWb,EAAO+B,oBAAoBhB,UACzCN,EAAAA,EAAAA,KAAA,UACES,QAASpC,EACT+B,UAAWb,EAAOgC,uBAAuBjB,UAEzCN,EAAAA,EAAAA,KAAA,OACEwB,MAAM,6BACNC,MAAM,KACNC,OAAO,IACPC,QAAQ,WACRC,KAAK,OAAMtB,UAEXN,EAAAA,EAAAA,KAAA,QACE6B,EAAE,wCACFC,OAAO,QACPC,YAAY,gBAOxB5B,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAOyC,wBAAwB1B,SAAA,EAC7CN,EAAAA,EAAAA,KAAA,UACEI,UAAWb,EAAO0C,WAClBC,GAAG,aACHzB,QAASpC,EAA+BiC,UAExCN,EAAAA,EAAAA,KAACmC,EAAAA,IAAG,CAACC,KAAK,YAEV3D,GAAUM,IAAYiB,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,IAC9B5D,GACC0B,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAAhC,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,8CACJH,EAAAA,EAAAA,MAAA,KAAGC,UAAWb,EAAOgD,SAASjC,SAAA,EACrB,OAAN7B,QAAM,IAANA,OAAM,EAANA,EAAQ+D,iCAAkC,OAC3CxC,EAAAA,EAAAA,KAAA,QAAAM,SAAM,aAERN,EAAAA,EAAAA,KAAA,OAAKI,UAAWb,EAAOkD,QACvBzC,EAAAA,EAAAA,KAAA,KAAGI,UAAWb,EAAOmD,OAAOpC,SAAC,8BAC7BN,EAAAA,EAAAA,KAAA,MAAII,UAAWb,EAAOoD,KAAKrC,UAClB,OAAN7B,QAAM,IAANA,GAAY,QAANN,EAANM,EAAQmE,YAAI,IAAAzE,OAAN,EAANA,EAAc0E,QAAS,EACtBpE,EAAOmE,KAAKE,IAAKC,IACf/C,EAAAA,EAAAA,KAAA,MAAAM,SAAoByC,EAAKC,OAAhBD,EAAKE,OAGhBjD,EAAAA,EAAAA,KAAA,KAAAM,SAAG,uBAGPN,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAAC9C,UAAWb,EAAO4D,KAAMjD,GAAG,SAAQI,UACvCN,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACLC,YAAaA,KACXhF,IACAQ,EAASyE,EAAAA,KAEXC,KAAK,SACLC,QAAQ,UAASlD,SAClB,8BAMLN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,8CAMZ,KAEHN,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACJ,YA/FhB,WACEhF,GACF,EA6F8CqF,SAxGxBC,IACpB9E,GAAS+E,EAAAA,EAAAA,IAAqBD,QAwG5B3D,EAAAA,EAAAA,KAAC6D,EAAAA,GAAM,MAGb,C,gDCjLA,SAAgB,KAAO,yBAAyB,MAAQ,2B,yECAxD,SAAgB,KAAO,6BAA6B,aAAe,qCAAqC,aAAe,qCAAqC,cAAgB,sCAAsC,mBAAqB,2CAA2C,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,WAAa,mCAAmC,aAAe,qCAAqC,KAAO,8B,aCengB,MAAMC,EAAmB,CACvB,CAAEC,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,MACrB,CAAED,MAAO,IAAKC,MAAO,MAGR,SAASC,EAAcC,GAA6B,IAADC,EAAA,IAA3B,SAAET,EAAQ,YAAEL,GAAaa,EAC9D,MAAM,SAAEP,EAAW,CAAC,EAAC,UAAES,EAAS,SAAEvF,IAAaH,EAAAA,EAAAA,MAEzC,WAAE2F,EAAU,KAAEC,IAASC,EAAAA,EAAAA,KAEvBC,EAAiB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAM5C,OACnB+C,EAAc,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,IAChBC,EAAiB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,OACnBC,EAAyB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,cAC3BC,EAAoB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,WAGtB,gBACJC,EAAkB,CAAC,EAAC,eACpBC,EAAc,gBACdC,IACEC,EAAAA,EAAAA,MAMJlG,EAAAA,EAAAA,WAAU,KACR,MAAMmG,EAAgB,CACpB3D,OAAQ2C,EAAaG,EAAa,GAClCE,IAAKL,EAAaI,EAAU,GAC5Ba,cAAejB,EAAaM,EAAa,GACzCG,cAAeT,EAAaQ,EAAqB,GACjDU,gBAAiBlB,EAAaU,EAAgB,IAG1CS,EAASnB,EAAac,EAAkBtG,EACxC4G,EAAYpB,EAAaqB,EAAAA,GAAqBC,EAAAA,GAEpDC,OAAOC,QAAQR,GAAeS,QAAQC,IAAmB,IAAjBnG,EAAKmE,GAAMgC,EAC5C1B,GAAeV,EAAS/D,IAC3B4F,EAAOC,EAAU,CAAEO,KAAMpG,EAAKmE,WAE5BM,IAAeY,EAAgBrF,IACjC4F,EAAOC,EAAU,CAAEO,KAAMpG,EAAKmE,cAGjC,CACDlF,EACAsG,EACAxB,EACAsB,EACAZ,EACAG,EACAC,EACAE,EACAE,EACAE,IAMF,MAAMkB,EAAUL,OAAOM,OAAO7B,EAAaY,EAAkBtB,GAAUwC,MACpEC,GAAuC,MAAxB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,WAAWC,SAGzBC,EAAgBC,IACpB,MAAM,KAAER,EAAI,MAAEjC,GAAUyC,EAAE9F,OACzB2D,EAEGc,GAAgBO,EAAAA,EAAAA,IAAmB,CAAEM,OAAMjC,WAD3ClF,GAAS8G,EAAAA,EAAAA,IAAY,CAAEK,OAAMjC,YAkB7BrC,EAAU2C,EAA+BY,EAAgBvD,OAAlCiC,EAASjC,OAChCgD,EAAOL,EAA4BY,EAAgBP,IAA/Bf,EAASe,IAC7BY,EAAiBjB,EAEnBY,EAAgBK,cADhB3B,EAAS2B,cAEPR,EAAiBT,EAEnBY,EAAgBH,cADhBnB,EAASmB,cAEPS,EAAmBlB,EAEN,OAAfY,QAAe,IAAfA,OAAe,EAAfA,EAAiBM,gBADT,OAAR5B,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,gBAERkB,EAAWpC,EAAyBa,EAAZd,EAQ9B,OACEjE,EAAAA,EAAAA,MAAA,QAAMuD,SA5Bc8C,IACpBA,EAAEE,iBAEET,GACFvC,EAFmBW,EAAaY,EAAkBtB,IA0BtBvD,UAAWb,EAAOoH,KAAKrG,SAAA,EACnDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAOqH,aAAatG,SAAA,EAElCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAOsH,aAAavG,SAAA,EAClCN,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CACJvD,KAAK,SACLwD,YAAY,UACZf,KAAK,SACLjC,MAAOrC,GAAU,GACjB6E,aAAcA,EACdS,UAAQ,KAGVhH,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CACJvD,KAAK,SACLwD,YAAY,OACZf,KAAK,MACLjC,MAAOW,GAAO,GACd6B,aAAcA,EACdS,UAAQ,KAGVhH,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CACJvD,KAAK,SACLwD,YAAY,kBACZf,KAAK,gBACLjC,MAAOuB,GAAiB,GACxBiB,aAAcA,EACdS,UAAQ,QAKZ7G,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAO0H,cAAc3G,SAAA,EACnCN,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CACJvD,KAAK,SACLwD,YAAY,kBACZf,KAAK,gBACLjC,MAAOe,GAAiB,GACxByB,aAAcA,EACdS,UAAQ,KAGV7G,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAO2H,mBAAmB5G,SAAA,EACxCN,EAAAA,EAAAA,KAAA,SAAOI,UAAWb,EAAOyE,SAGzBhE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CACJvD,KAAK,OACLwD,YAAY,cACZf,KAAK,YACLjC,OAGG,QAFDI,EAAAL,EAAiBqD,KACdC,GAAQA,EAAIrD,QAAUsD,OAAO9B,WAC/B,IAAApB,OAAA,EAFDA,EAEGH,QAAS,GAEduC,aAAcA,EACdS,UAAQ,EACRM,UAAQ,KAIVtH,EAAAA,EAAAA,KAAA,OAAKI,UAAWb,EAAOgI,WAAWjH,SAC/BwD,EAAiBhB,IAAK0E,IACrBrH,EAAAA,EAAAA,MAACsH,EAAAA,SAAc,CAAAnH,SAAA,EACbN,EAAAA,EAAAA,KAAA,SACEuD,KAAK,QACLrB,GAAE,aAAAwF,OAAeF,EAAOzD,OACxBiC,KAAK,YACLjC,MAAOyD,EAAOzD,MACd4D,QAASN,OAAO9B,KAAqBiC,EAAOzD,MAC5C6D,SAAUA,KAAMC,OAzGP9D,EAyGyByD,EAAOzD,WAxGxDM,EAEGc,GAAgBO,EAAAA,EAAAA,IAAmB,CAAEM,KAAM,kBAAmBjC,WAD9DlF,GAAS8G,EAAAA,EAAAA,IAAY,CAAEK,KAAM,kBAAmBjC,YAF3BA,OA0GT3D,UAAWb,EAAOuI,cAEpB9H,EAAAA,EAAAA,KAAA,SACE+H,QAAO,aAAAL,OAAeF,EAAOzD,OAC7B3D,UAAWb,EAAOyI,WAAW1H,SAE5BkH,EAAOxD,UAdSwD,EAAOzD,oBAuBtC/D,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACLC,YAAaA,EACbE,KAAK,SACLC,QAAQ,UACRyE,UAAWhC,GAAWQ,EAAQnG,SAE7BmG,EAAU,aAAe,0BAIlC,CCzNe,SAAShD,EAAUS,GAA6B,IAA5B,SAAER,EAAQ,YAAEL,GAAaa,EAC1D,OACE/D,EAAAA,EAAAA,MAAA,OAAKC,UAAWb,EAAO2I,KAAK5H,SAAA,EAC1BN,EAAAA,EAAAA,KAAA,MAAII,UAAWb,EAAOyD,MAAM1C,SAAC,mDAI7BN,EAAAA,EAAAA,KAACiE,EAAc,CAACZ,YAAaA,EAAaK,SAAUA,MAG1D,C,wDCfA,SAAgB,eAAiB,8BAA8B,MAAQ,qBAAqB,YAAc,2BAA2B,UAAY,0B,aCKlI,SAASoD,EAAK5C,GAazB,IAb0B,KAC5BX,EAAI,YACJwD,EAAW,SACXC,EAAQ,QACRxD,EAAU,GAAE,UACZpD,EAAS,KACT4F,EAAI,aACJO,EAAY,MACZ9E,EAAK,MACLsC,EAAK,YACLoE,EAAW,aACXC,EAAY,WACZC,GACDnE,EACC,OACElE,EAAAA,EAAAA,KAAA,OAAKsI,MAAO,CAAE7G,MAAOA,GAAS,QAAUrB,UAAWb,EAAOgJ,eAAejI,UACvEN,EAAAA,EAAAA,KAAA,SACEoI,aAAcA,GAAgB,MAC9BE,MAAO,CAAEH,YAAaA,GAAe,OACrCP,SAAUrB,EACVP,KAAMA,GAAQ,GACd5F,WAAWoI,EAAAA,EAAAA,GACTjJ,EAAOkJ,MACPrI,EACY,WAAZoD,EAAuBjE,EAAOmJ,YAAcnJ,EAAOkJ,OAErDlF,KAAMA,GAAQ,OACdwD,YAAaA,GAAe,GAC5BC,SAAUA,IAAY,EACtBjD,MAAOA,GAAS,GAChB4E,OAAQN,KAIhB,C,gDCrCA,MAGaO,GAAiBC,E,QAAAA,IAC5B,CAJmCC,GAAUA,EAAMC,uBAKlDA,IAAqB,CACpBrH,OAAQqH,EAAsBrH,OAC9BgD,IAAKqE,EAAsBrE,IAC3BY,cAAeyD,EAAsBzD,cACrCR,cAAeiE,EAAsBjE,cACrCS,gBAAiBwD,EAAsBxD,mBAI9ByD,EAAgBF,GAAUA,EAAMC,sBAAsBtK,OACtDwK,EAAiBH,GAAUA,EAAMC,sBAAsBtC,QACvDyC,EAAeJ,GAAUA,EAAMC,sBAAsBI,MACrDC,EAAkBN,GAAUA,EAAMC,sBAAsBM,SACxDC,EAAiBR,GAAUA,EAAMC,sBAAsBQ,QCXvD7K,EAAYA,KACvB,MAAMG,GAAWC,EAAAA,EAAAA,MAQjB,MAAO,CACL6E,UARe6F,EAAAA,EAAAA,IAAYZ,GAS3BxE,WARgBoF,EAAAA,EAAAA,IAAYP,GAS5BQ,aARkBD,EAAAA,EAAAA,IAAYN,GAS9BzK,QARa+K,EAAAA,EAAAA,IAAYR,GASzBK,UAReG,EAAAA,EAAAA,IAAYJ,GAS3BG,SARcC,EAAAA,EAAAA,IAAYF,GAS1BzK,Y","sources":["webpack://health/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","webpack://health/./src/components/Calculator/Calculator.module.css?7770","webpack://health/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","components/Calculator/Calculator.jsx","webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"HomePage_section__bINJC\",\"mobileHeaderCont\":\"HomePage_mobileHeaderCont__qjAb4\",\"modalHeader\":\"HomePage_modalHeader__hFCaA\",\"logoHeaderContainer\":\"HomePage_logoHeaderContainer__FJGuO\",\"mobileSubHeaderCont\":\"HomePage_mobileSubHeaderCont__fhrjH\",\"modalLogoutActionCenter\":\"HomePage_modalLogoutActionCenter__PZ-Up\",\"calories\":\"HomePage_calories__bU7nD\",\"line\":\"HomePage_line__e9H7+\",\"notEat\":\"HomePage_notEat__fKc2L\",\"list\":\"HomePage_list__99c8-\",\"link\":\"HomePage_link__-d+Of\",\"closeButton\":\"HomePage_closeButton__FJsvk\",\"closeModal\":\"HomePage_closeModal__7xn8T\",\"noScroll\":\"HomePage_noScroll__LbbLm\"};","import React, { useEffect, useRef } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Outlet, Navigate, Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport Calculator from \"../../components/Calculator/Calculator\";\nimport { fetchCalculationData } from \"../../redux/public/operationsPublic\";\nimport Modal from \"../../components/commonComponents/Modal/Modal\";\n\nimport useToggle from \"../../hooks/useToggle\";\nimport Logo from \"../../components/Logo/Logo\";\nimport AuthLinks from \"../../components/AuthLinks/AuthLinks\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport Button from \"../../components/commonComponents/Button\";\nimport { HiX } from \"react-icons/hi\";\n\nimport Loader from \"../../components/commonComponents/Loader\";\n\nimport { resetForm } from \"../../redux/public/publicCalculatorSlice\";\n\nimport styles from \"./HomePage.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n};\n\nexport default function HomePage() {\n  const [isCalculatorModalVisible, toggleIsCalculatorModalVisible] =\n    useToggle(false);\n  const modalRef = useRef();\n\n  const { result } = usePublic();\n  // console.log(result?.recommendedDailyCaloriesIntake);\n\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\n  // const isTablet = useMediaQuery({ query: breakpoints.tablet });\n\n  useEffect(() => {\n    if (isCalculatorModalVisible) {\n      document.body.classList.add(styles.noScroll);\n    } else {\n      document.body.classList.remove(styles.noScroll);\n    }\n\n    const handleEscapeKey = (event) => {\n      if (event.key === \"Escape\") toggleIsCalculatorModalVisible();\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n\n    return () => {\n      document.body.classList.remove(styles.noScroll);\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [isCalculatorModalVisible, toggleIsCalculatorModalVisible]);\n\n  const closeOnClickOutside = (event) => {\n    if (event.target !== event.currentTarget) {\n      toggleIsCalculatorModalVisible();\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = (formData) => {\n    dispatch(fetchCalculationData(formData));\n  };\n\n  // Redirect to CalculatorPage if `/home` is accessed\n  if (location.pathname === \"/home\") {\n    return <Navigate to=\"/home/calculator\" />;\n  }\n\n  function handleOpenModal() {\n    toggleIsCalculatorModalVisible();\n  }\n\n  return (\n    <section className={styles.section}>\n      {isCalculatorModalVisible && (\n        <div\n          ref={modalRef}\n          className={styles.modalOverlay}\n          onClick={closeOnClickOutside}\n        >\n          <div className={styles.modalContent}>\n            <Modal\n              closeButton={styles.closeButton}\n              handleModalClose={toggleIsCalculatorModalVisible}\n              isModalVisible={isCalculatorModalVisible}\n            >\n              {isMobile && (\n                <div className={styles.mobileHeaderCont}>\n                  <header className={styles.modalHeader}>\n                    <Logo className={styles.logoHeaderContainer} />\n                    <AuthLinks />\n                  </header>\n                  <div className={styles.mobileSubHeaderCont}>\n                    <button\n                      onClick={toggleIsCalculatorModalVisible}\n                      className={styles.mobileHeaderExitButton}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"15\"\n                        height=\"9\"\n                        viewBox=\"0 0 15 9\"\n                        fill=\"none\"\n                      >\n                        <path\n                          d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\"\n                          stroke=\"black\"\n                          strokeWidth=\"2\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              )}\n              <div className={styles.modalLogoutActionCenter}>\n                <button\n                  className={styles.closeModal}\n                  id=\"closeModal\"\n                  onClick={toggleIsCalculatorModalVisible}\n                >\n                  <HiX size=\"16px\" />\n                </button>\n                {!result && isMobile && <Loader />}\n                {result ? (\n                  <>\n                    <h2>Your recommended daily calorie intake is</h2>\n                    <p className={styles.calories}>\n                      {result?.recommendedDailyCaloriesIntake || \"N/A\"}\n                      <span>kcal</span>\n                    </p>\n                    <div className={styles.line}></div>\n                    <p className={styles.notEat}>Foods you should not eat</p>\n                    <ol className={styles.list}>\n                      {result?.data?.length > 0 ? (\n                        result.data.map((item) => (\n                          <li key={item._id}>{item.title}</li>\n                        ))\n                      ) : (\n                        <p>No foods listed</p>\n                      )}\n                    </ol>\n                    <Link className={styles.link} to=\"/login\">\n                      <Button\n                        handleClick={() => {\n                          toggleIsCalculatorModalVisible();\n                          dispatch(resetForm);\n                        }}\n                        type=\"button\"\n                        variant=\"colored\"\n                      >\n                        Start losing weight\n                      </Button>\n                    </Link>\n                  </>\n                ) : (\n                  <p>Loading your recommendations...</p>\n                )}\n              </div>\n            </Modal>\n          </div>\n        </div>\n      )}{\" \"}\n      {/* Pass handleSubmit as the onSubmit prop */}\n      <Calculator handleClick={handleOpenModal} onSubmit={handleSubmit} />\n      <Outlet />\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__hof16\",\"title\":\"Calculator_title__0VU03\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__vXQGd\",\"formMainCont\":\"WeightLossForm_formMainCont__iwbqv\",\"formLeftCont\":\"WeightLossForm_formLeftCont__NE+NA\",\"formRightCont\":\"WeightLossForm_formRightCont__FzY75\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__Ooi9f\",\"label\":\"WeightLossForm_label__OkR4d\",\"radioGroup\":\"WeightLossForm_radioGroup__ixH+l\",\"radioInput\":\"WeightLossForm_radioInput__qHjLL\",\"radioLabel\":\"WeightLossForm_radioLabel__FW6g2\",\"errorMessage\":\"WeightLossForm_errorMessage__pIDNO\",\"link\":\"WeightLossForm_link__1VjI+\"};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport { setPrivateFormData } from \"../../redux/private/privateSlice\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./WeightLossForm.module.css\";\n\nconst bloodTypeOptions = [\n  { value: \"1\", label: \"A\" },\n  { value: \"2\", label: \"B\" },\n  { value: \"3\", label: \"AB\" },\n  { value: \"4\", label: \"O\" },\n];\n\nexport default function WeightLossForm({ onSubmit, handleClick }) {\n  const { formData = {}, isLoading, dispatch } = usePublic();\n\n  const { isLoggedIn, user } = useAuth();\n\n  const userHeight = user?.height;\n  const userAge = user?.age;\n  const userWeight = user?.weight;\n  const userDesiredWeightt = user?.desiredWeight;\n  const userBloodType = user?.bloodType;\n  // console.log(userBloodType);\n\n  const {\n    privateFormData = {},\n    privateLoading,\n    privateDispatch,\n  } = usePrivate();\n  // console.log(isLoggedIn);\n  // console.log(privateLoading);\n  // console.log(privateFormData);\n\n  // Initialize form state with default values\n  useEffect(() => {\n    const defaultValues = {\n      height: isLoggedIn ? userHeight : \"\",\n      age: isLoggedIn ? userAge : \"\",\n      currentWeight: isLoggedIn ? userWeight : \"\",\n      desiredWeight: isLoggedIn ? userDesiredWeightt : \"\",\n      bloodGroupIndex: isLoggedIn ? userBloodType : \"\",\n    };\n\n    const setter = isLoggedIn ? privateDispatch : dispatch;\n    const setAction = isLoggedIn ? setPrivateFormData : setFormData;\n\n    Object.entries(defaultValues).forEach(([key, value]) => {\n      if (!isLoggedIn && !formData[key]) {\n        setter(setAction({ name: key, value }));\n      }\n      if (isLoggedIn && !privateFormData[key]) {\n        setter(setAction({ name: key, value }));\n      }\n    });\n  }, [\n    dispatch,\n    privateDispatch,\n    formData,\n    privateFormData,\n    isLoggedIn,\n    userHeight,\n    userAge,\n    userWeight,\n    userDesiredWeightt,\n    userBloodType,\n  ]);\n\n  // console.log(formData);\n\n  // Check if all form fields are valid\n  const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\n    (field) => field?.toString().trim() !== \"\"\n  );\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    !isLoggedIn\n      ? dispatch(setFormData({ name, value }))\n      : privateDispatch(setPrivateFormData({ name, value }));\n  };\n\n  const handleRadioChange = (value) => {\n    !isLoggedIn\n      ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\n      : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const dataToSubmit = isLoggedIn ? privateFormData : formData;\n    if (isValid) {\n      onSubmit(dataToSubmit);\n    }\n  };\n\n  const height = !isLoggedIn ? formData.height : privateFormData.height;\n  const age = !isLoggedIn ? formData.age : privateFormData.age;\n  const currentWeight = !isLoggedIn\n    ? formData.currentWeight\n    : privateFormData.currentWeight;\n  const desiredWeight = !isLoggedIn\n    ? formData.desiredWeight\n    : privateFormData.desiredWeight;\n  const bloodGroupIndex = !isLoggedIn\n    ? formData?.bloodGroupIndex\n    : privateFormData?.bloodGroupIndex;\n  const loading = !isLoggedIn ? isLoading : privateLoading;\n\n  // console.log(\n  //   \"privateFormData?.bloodGroupIndex\",\n  //   privateFormData?.bloodGroupIndex\n  // );\n  // console.log(\"bloodGroupIndex\", bloodGroupIndex);\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.formMainCont}>\n        {/* Left Section */}\n        <div className={styles.formLeftCont}>\n          <Input\n            type=\"number\"\n            placeholder=\"Height*\"\n            name=\"height\"\n            value={height || \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <Input\n            type=\"number\"\n            placeholder=\"Age*\"\n            name=\"age\"\n            value={age || \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <Input\n            type=\"number\"\n            placeholder=\"Current weight*\"\n            name=\"currentWeight\"\n            value={currentWeight || \"\"}\n            handleChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Right Section */}\n        <div className={styles.formRightCont}>\n          <Input\n            type=\"number\"\n            placeholder=\"Desired weight*\"\n            name=\"desiredWeight\"\n            value={desiredWeight || \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <div className={styles.bloodTypeContainer}>\n            <label className={styles.label}></label>\n\n            {/* Read-Only Input */}\n            <Input\n              type=\"text\"\n              placeholder=\"Blood type*\"\n              name=\"bloodType\"\n              value={\n                bloodTypeOptions.find(\n                  (opt) => opt.value === String(bloodGroupIndex)\n                )?.label || \"\"\n              }\n              handleChange={handleChange}\n              required\n              readOnly\n            />\n\n            {/* Radio Buttons */}\n            <div className={styles.radioGroup}>\n              {bloodTypeOptions.map((option) => (\n                <React.Fragment key={option.value}>\n                  <input\n                    type=\"radio\"\n                    id={`bloodType-${option.value}`}\n                    name=\"bloodType\"\n                    value={option.value}\n                    checked={String(bloodGroupIndex) === option.value}\n                    onChange={() => handleRadioChange(option.value)}\n                    className={styles.radioInput}\n                  />\n                  <label\n                    htmlFor={`bloodType-${option.value}`}\n                    className={styles.radioLabel}\n                  >\n                    {option.label}\n                  </label>\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Button\n        handleClick={handleClick}\n        type=\"submit\"\n        variant=\"colored\"\n        disabled={!isValid || loading}\n      >\n        {loading ? \"Loading...\" : \"Start losing weight\"}\n      </Button>\n    </form>\n  );\n}\n\nWeightLossForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  handleClick: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Calculator.module.css\";\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\n\nexport default function Calculator({ onSubmit, handleClick }) {\n  return (\n    <div className={styles.cont}>\n      <h2 className={styles.title}>\n        Calculate your daily calorie intake right now\n      </h2>\n\n      <WeightLossForm handleClick={handleClick} onSubmit={onSubmit} />\n    </div>\n  );\n}\n\nCalculator.propTypes = {\n  onSubmit: PropTypes.func.isRequired, // Ensure onSubmit is provided as a prop\n  handleClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n  [selectPublicCalculatorState],\n  (publicCalculatorSlice) => ({\n    height: publicCalculatorSlice.height,\n    age: publicCalculatorSlice.age,\n    currentWeight: publicCalculatorSlice.currentWeight,\n    desiredWeight: publicCalculatorSlice.desiredWeight,\n    bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n  })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectFormData,\n  selectLoading,\n  selectResult,\n  selectProducts,\n  selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n  const dispatch = useDispatch(); // Add dispatch for triggering actions\n  const formData = useSelector(selectFormData);\n  const isLoading = useSelector(selectLoading);\n  const errorPublic = useSelector(selectError);\n  const result = useSelector(selectResult);\n  const products = useSelector(selectProducts);\n  const product = useSelector(selectProduct);\n\n  return {\n    formData,\n    isLoading,\n    errorPublic,\n    result,\n    products,\n    product,\n    dispatch, // Include dispatch in the returned object\n  };\n};\n"],"names":["breakpoints","mobile","tablet","HomePage","_result$data","isCalculatorModalVisible","toggleIsCalculatorModalVisible","useToggle","modalRef","useRef","result","usePublic","location","useLocation","dispatch","useDispatch","isMobile","useMediaQuery","query","useEffect","document","body","classList","add","styles","noScroll","remove","handleEscapeKey","event","key","addEventListener","removeEventListener","pathname","_jsx","Navigate","to","_jsxs","className","section","children","ref","modalOverlay","onClick","target","currentTarget","modalContent","Modal","closeButton","handleModalClose","isModalVisible","mobileHeaderCont","modalHeader","Logo","logoHeaderContainer","AuthLinks","mobileSubHeaderCont","mobileHeaderExitButton","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","modalLogoutActionCenter","closeModal","id","HiX","size","Loader","_Fragment","calories","recommendedDailyCaloriesIntake","line","notEat","list","data","length","map","item","title","_id","Link","link","Button","handleClick","resetForm","type","variant","Calculator","onSubmit","formData","fetchCalculationData","Outlet","bloodTypeOptions","value","label","WeightLossForm","_ref","_bloodTypeOptions$fin","isLoading","isLoggedIn","user","useAuth","userHeight","userAge","age","userWeight","weight","userDesiredWeightt","desiredWeight","userBloodType","bloodType","privateFormData","privateLoading","privateDispatch","usePrivate","defaultValues","currentWeight","bloodGroupIndex","setter","setAction","setPrivateFormData","setFormData","Object","entries","forEach","_ref2","name","isValid","values","every","field","toString","trim","handleChange","e","loading","preventDefault","form","formMainCont","formLeftCont","Input","placeholder","required","formRightCont","bloodTypeContainer","find","opt","String","readOnly","radioGroup","option","React","concat","checked","onChange","handleRadioChange","radioInput","htmlFor","radioLabel","disabled","cont","paddingLeft","autoComplete","handleBlur","style","inputContainer","clsx","input","inputCenter","onBlur","selectFormData","createSelector","state","publicCalculatorSlice","selectResult","selectLoading","selectError","error","selectProducts","products","selectProduct","product","useSelector","errorPublic"],"sourceRoot":""}