{"version":3,"file":"static/js/330.d922b670.chunk.js","mappings":"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","sources":["webpack://health-monitor/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx","Utils/getFormattedDate.js","webpack://health-monitor/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","webpack://health-monitor/./src/components/Calculator/Calculator.module.css?7770","components/Calculator/Calculator.jsx","webpack://health-monitor/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","webpack://health-monitor/./src/pages/CalculatorPage/CalculatorPage.module.css?9a12","pages/CalculatorPage/CalculatorPage.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__bSZ00\",\"statisticCont\":\"LoginStatistics_statisticCont__W4sUJ\",\"resultsToday\":\"LoginStatistics_resultsToday__5XOvn\",\"statisticList\":\"LoginStatistics_statisticList__-K1dG\",\"statisticListItem\":\"LoginStatistics_statisticListItem__jwFY5\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__5hv5z\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__AujTB\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__xTGyK\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__H-Mel\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__2+pc3\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__yyZZY\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__0vXlq\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport UpdateUser from \"../UpdateUser\";\nimport UserLogout from \"../UserLogout/UserLogout\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport styles from \"./LoginStatistics.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nfunction LoginStatistics({ day }) {\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n  const { user } = useAuth();\n  const { dailyCalorieSummary } = usePrivate();\n\n  const [userUpdateShown, setUserUpdateShown] = useState(false);\n\n  // Validate the format dd-mm-yyyy\n  const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\n  if (!isValidDate) {\n    console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\n  }\n\n  const handleUpdateUser = () => {\n    setUserUpdateShown(true);\n    console.log(\"click !!!\");\n  };\n\n  return (\n    <div className={styles.resultsCont}>\n      {userUpdateShown && (\n        <UpdateUser theme={\"light\"} onClose={() => setUserUpdateShown(false)} />\n      )}\n      {isDesktop && <UserLogout handleUpdateUserClick={handleUpdateUser} />}\n      <div className={styles.statisticSuperCont}>\n        <div className={styles.statisticCont}>\n          <p className={styles.resultsToday}>Summary for {day}</p>\n          <ul className={styles.statisticList}>\n            <li key=\"left\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Left</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.remainingCalories !== 0\n                  ? dailyCalorieSummary.remainingCalories\n                  : \"000\"}{\" \"}\n                kcal\n              </span>\n            </li>\n            <li key=\"consumed\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Consumed</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.totalCaloriesConsumed > 0\n                  ? dailyCalorieSummary.totalCaloriesConsumed\n                  : \"000\"}{\" \"}\n                kcal\n              </span>\n            </li>\n            <li key=\"daily\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Daily rate</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.dailyCalorieIntake > 0\n                  ? dailyCalorieSummary.dailyCalorieIntake\n                  : \"000\"}{\" \"}\n                kcal\n              </span>{\" \"}\n            </li>\n            <li key=\"normal\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>n% of normal</span>\n              <span\n                style={{ marginBottom: \"4px\" }}\n                className={styles.statisticListItemSpan}\n              >\n                {dailyCalorieSummary?.percentageCaloriesConsumed > 0\n                  ? dailyCalorieSummary.percentageCaloriesConsumed\n                  : \"0\"}{\" \"}\n                %\n              </span>{\" \"}\n            </li>\n          </ul>\n        </div>\n        <div className={styles.notRecommendedCont}>\n          <p className={styles.notRecommendedTitle}>Food not recommended</p>\n          {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n            <ul className={styles.notRecommendedList}>\n              {user.dietaryInfo.restrictedAliments.map((aliment) => (\n                <li\n                  key={aliment?._id}\n                  className={styles.notRecommendedListItem}\n                >\n                  {aliment.title}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className={styles.notRecommendedEmpty}>\n              Your diet will be displayed here\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLoginStatistics.propTypes = {\n  day: PropTypes.string.isRequired,\n};\n\nexport default LoginStatistics;\n","export default function getFormattedDate() {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Add leading zero if needed\n  const day = String(today.getDate()).padStart(2, \"0\"); // Add leading zero if needed\n  return `${year}-${month}-${day}`; // Return in YYYY-MM-DD format\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__vXQGd\",\"formMainCont\":\"WeightLossForm_formMainCont__iwbqv\",\"formLeftCont\":\"WeightLossForm_formLeftCont__NE+NA\",\"formRightCont\":\"WeightLossForm_formRightCont__FzY75\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__Ooi9f\",\"label\":\"WeightLossForm_label__OkR4d\",\"radioGroup\":\"WeightLossForm_radioGroup__ixH+l\",\"radioInput\":\"WeightLossForm_radioInput__qHjLL\",\"radioLabel\":\"WeightLossForm_radioLabel__FW6g2\",\"errorMessage\":\"WeightLossForm_errorMessage__pIDNO\",\"link\":\"WeightLossForm_link__1VjI+\"};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport { setPrivateFormData } from \"../../redux/private/privateSlice\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./WeightLossForm.module.css\";\n\nconst bloodTypeOptions = [\n  { value: \"1\", label: \"A\" },\n  { value: \"2\", label: \"B\" },\n  { value: \"3\", label: \"AB\" },\n  { value: \"4\", label: \"O\" },\n];\n\nexport default function WeightLossForm({ onSubmit }) {\n  const { formData = {}, isLoading, dispatch } = usePublic();\n\n  const { isLoggedIn, user } = useAuth();\n\n  const userHeight = user?.height;\n  const userAge = user?.age;\n  const userWeight = user?.weight;\n  const userDesiredWeightt = user?.desiredWeight;\n  const userBloodType = user?.bloodType;\n  // console.log(userBloodType);\n\n  const {\n    privateFormData = {},\n    privateLoading,\n    privateDispatch,\n  } = usePrivate();\n  // console.log(isLoggedIn);\n  // console.log(privateLoading);\n  // console.log(privateFormData);\n\n  // Initialize form state with default values\n  useEffect(() => {\n    const defaultValues = {\n      height: isLoggedIn ? userHeight : \"\",\n      age: isLoggedIn ? userAge : \"\",\n      currentWeight: isLoggedIn ? userWeight : \"\",\n      desiredWeight: isLoggedIn ? userDesiredWeightt : \"\",\n      bloodGroupIndex: isLoggedIn ? userBloodType : \"\",\n    };\n\n    const setter = isLoggedIn ? privateDispatch : dispatch;\n    const setAction = isLoggedIn ? setPrivateFormData : setFormData;\n\n    Object.entries(defaultValues).forEach(([key, value]) => {\n      if (!isLoggedIn && !formData[key]) {\n        setter(setAction({ name: key, value }));\n      }\n      if (isLoggedIn && !privateFormData[key]) {\n        setter(setAction({ name: key, value }));\n      }\n    });\n  }, [\n    dispatch,\n    privateDispatch,\n    formData,\n    privateFormData,\n    isLoggedIn,\n    userHeight,\n    userAge,\n    userWeight,\n    userDesiredWeightt,\n    userBloodType,\n  ]);\n\n  // console.log(formData);\n\n  // Check if all form fields are valid\n  const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\n    (field) => field?.toString().trim() !== \"\"\n  );\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    !isLoggedIn\n      ? dispatch(setFormData({ name, value }))\n      : privateDispatch(setPrivateFormData({ name, value }));\n  };\n\n  const handleRadioChange = (value) => {\n    !isLoggedIn\n      ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\n      : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const dataToSubmit = isLoggedIn ? privateFormData : formData;\n    if (isValid) {\n      onSubmit(dataToSubmit);\n    }\n  };\n\n  const height = !isLoggedIn ? formData.height : privateFormData.height;\n  const age = !isLoggedIn ? formData.age : privateFormData.age;\n  const currentWeight = !isLoggedIn\n    ? formData.currentWeight\n    : privateFormData.currentWeight;\n  const desiredWeight = !isLoggedIn\n    ? formData.desiredWeight\n    : privateFormData.desiredWeight;\n  const bloodGroupIndex = !isLoggedIn\n    ? formData?.bloodGroupIndex\n    : privateFormData?.bloodGroupIndex;\n  const loading = !isLoggedIn ? isLoading : privateLoading;\n\n  // console.log(\"height\", height);\n  // console.log(\"age\", age);\n  // console.log(\"currentWeight\", currentWeight);\n  // console.log(\"desiredWeight\", desiredWeight);\n  // console.log(\"bloodGroupIndex\", bloodGroupIndex);\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.formMainCont}>\n        {/* Left Section */}\n        <div className={styles.formLeftCont}>\n          <Input\n            type=\"number\"\n            placeholder=\"Height* /cm\"\n            name=\"height\"\n            id\n            value={height ? (height > 0 ? height : \"\") : \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <Input\n            type=\"number\"\n            placeholder=\"Age* /years\"\n            name=\"age\"\n            value={age ? (age > 0 ? age : \"\") : \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <Input\n            type=\"number\"\n            placeholder=\"Current weight* /kg\"\n            name=\"currentWeight\"\n            value={\n              currentWeight ? (currentWeight > 0 ? currentWeight : \"\") : \"\"\n            }\n            handleChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Right Section */}\n        <div className={styles.formRightCont}>\n          <Input\n            type=\"number\"\n            placeholder=\"Desired weight* /kg\"\n            name=\"desiredWeight\"\n            value={\n              desiredWeight ? (desiredWeight > 0 ? desiredWeight : \"\") : \"\"\n            }\n            handleChange={handleChange}\n            required\n          />\n\n          <div className={styles.bloodTypeContainer}>\n            <label className={styles.label}></label>\n\n            {/* Read-Only Input */}\n            <Input\n              type=\"text\"\n              placeholder=\"Blood type*\"\n              name=\"bloodType\"\n              value={\n                bloodTypeOptions.find(\n                  (opt) => opt.value === String(bloodGroupIndex)\n                )?.label || \"\"\n              }\n              handleChange={handleChange}\n              required\n              readOnly\n            />\n\n            {/* Radio Buttons */}\n            <div className={styles.radioGroup}>\n              {bloodTypeOptions.map((option) => (\n                <React.Fragment key={option.value}>\n                  <input\n                    type=\"radio\"\n                    id={`bloodType-${option.value}`}\n                    name=\"bloodType\"\n                    value={option.value}\n                    checked={String(bloodGroupIndex) === option.value}\n                    onChange={() => handleRadioChange(option.value)}\n                    className={styles.radioInput}\n                  />\n                  <label\n                    htmlFor={`bloodType-${option.value}`}\n                    className={styles.radioLabel}\n                  >\n                    {option.label}\n                  </label>\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Button type=\"submit\" variant=\"colored\" disabled={!isValid || loading}>\n        {loading\n          ? \"Loading...\"\n          : isLoggedIn\n          ? \"Submit Info\"\n          : \"Start losing weight\"}\n      </Button>\n    </form>\n  );\n}\n\nWeightLossForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__hof16\",\"title\":\"Calculator_title__0VU03\",\"warn\":\"Calculator_warn__LYu-V\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\n\nimport styles from \"./Calculator.module.css\";\n\nexport default function Calculator({ onSubmit }) {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <div className={styles.cont}>\n      <h2 className={styles.title}>\n        {isLoggedIn\n          ? \"First, enter your personal data to unlock full functionality and calculate your daily calorie needs.\"\n          : \"Calculate your daily calorie intake right now\"}\n      </h2>\n      <p className={styles.warn}>\n        Please fill <b>All</b> fields*\n      </p>\n\n      <WeightLossForm onSubmit={onSubmit} />\n    </div>\n  );\n}\n\nCalculator.propTypes = {\n  onSubmit: PropTypes.func.isRequired, // Ensure onSubmit is provided as a prop\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  min = 0,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        min={min}\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  min: PropTypes.number,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CalculatorPage_section__Wyr9N\",\"calculatorCont\":\"CalculatorPage_calculatorCont__mxIJs\",\"closeButton\":\"CalculatorPage_closeButton__gkXjp\",\"closeModal\":\"CalculatorPage_closeModal__9BVgj\",\"mobileHeaderCont\":\"CalculatorPage_mobileHeaderCont__1K5QU\",\"modalHeader\":\"CalculatorPage_modalHeader__EVgZC\",\"logoHeaderContainer\":\"CalculatorPage_logoHeaderContainer__VMVF2\",\"mobileSubHeaderCont\":\"CalculatorPage_mobileSubHeaderCont__qWkXE\",\"modalLogoutActionCenter\":\"CalculatorPage_modalLogoutActionCenter__lf0CC\",\"empty\":\"CalculatorPage_empty__ssdg8\",\"calories\":\"CalculatorPage_calories__NccG+\",\"line\":\"CalculatorPage_line__8UJ2T\",\"notEat\":\"CalculatorPage_notEat__or5nO\",\"list\":\"CalculatorPage_list__ojU7J\",\"link\":\"CalculatorPage_link__8Wl2r\",\"leftCont\":\"CalculatorPage_leftCont__dplUt\"};","// import React, { useEffect, useRef } from \"react\";\n// import { useMediaQuery } from \"react-responsive\";\n\n// import { Link, Navigate, useLocation, useNavigate } from \"react-router-dom\";\n// import Calculator from \"../../components/Calculator/Calculator\";\n// import { useDispatch } from \"react-redux\";\n\n// import {\n//   fetchPrivateCalculationData,\n//   fetchConsumedProductsForSpecificDay,\n// } from \"../../redux/private/operationsPrivate\";\n// import { resetPrivateForm } from \"../../redux/private/privateSlice\";\n// import { usePrivate } from \"../../hooks/usePrivate\";\n\n// import { useAuth } from \"../../hooks/useAuth\";\n// import { logOut } from \"../../redux/auth/operationsAuth\";\n\n// import useToggle from \"../../hooks/useToggle\";\n\n// import NavLinks from \"../../components/NavLinks/NavLinks\";\n\n// import getFormattedDate from \"../../Utils/getFormattedDate\";\n\n// import Logo from \"../../components/Logo/Logo\";\n// import LoginStatistics from \"../../components/LoginStatistics/LoginStatistics\";\n// import Button from \"../../components/commonComponents/Button\";\n// import Modal from \"../../components/commonComponents/Modal/Modal\";\n// import Loader from \"../../components/commonComponents/Loader\";\n\n// import { HiX } from \"react-icons/hi\";\n\n// import styles from \"./CalculatorPage.module.css\";\n\n// const breakpoints = {\n//   mobile: \"(max-width: 767px)\",\n//   tablet: \"(min-width:768px)\",\n//   desktop: \"(min-width:1024px)\",\n// };\n\n// export default function CalculatorPage() {\n//   const location = useLocation();\n//   const dispatch = useDispatch();\n\n//   const [isCalculatorModalVisible, toggleIsCalculatorModalVisible] =\n//     useToggle(false);\n//   const modalRef = useRef();\n\n//   const { isLoggedIn } = useAuth();\n//   const { error, privateDispatch, user } = usePrivate();\n\n//   // console.log(\"user :\", user);\n\n//   const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n//   const thisDispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const today = getFormattedDate();\n\n//   useEffect(() => {\n//     if (isCalculatorModalVisible) {\n//       document.body.classList.add(styles.noScroll);\n//     } else {\n//       document.body.classList.remove(styles.noScroll);\n//     }\n\n//     const handleEscapeKey = (event) => {\n//       if (event.key === \"Escape\") toggleIsCalculatorModalVisible();\n//     };\n\n//     document.addEventListener(\"keydown\", handleEscapeKey);\n\n//     return () => {\n//       document.body.classList.remove(styles.noScroll);\n//       document.removeEventListener(\"keydown\", handleEscapeKey);\n//     };\n//   }, [isCalculatorModalVisible, toggleIsCalculatorModalVisible]);\n\n//   const closeOnClickOutside = (event) => {\n//     if (event.target !== event.currentTarget) {\n//       toggleIsCalculatorModalVisible();\n//     }\n//   };\n\n//   useEffect(() => {\n//     const today = getFormattedDate(); // Ensure the correct format YYYY-MM-DD\n//     // console.log(\"Fetching data for date:\", today);\n\n//     privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n//   }, [privateDispatch]);\n\n//   useEffect(() => {\n//     if (error === \"Not authorized\") {\n//       const timeout = setTimeout(() => {\n//         thisDispatch(logOut());\n//         navigate(\"/login\");\n//       }, 5000);\n\n//       return () => clearTimeout(timeout); // Cleanup timeout\n//     }\n//   }, [error, isLoggedIn, thisDispatch, navigate]);\n\n//   const handleClick = () => {\n//     privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n//   };\n\n//   // console.log(getFormattedDate());\n\n//   // Function to handle form submission\n//   const handleSubmit = (formData) => {\n//     privateDispatch(fetchPrivateCalculationData(formData));\n//   };\n\n//   function formatToDisplayDate(date) {\n//     const [year, month, day] = date.split(\"-\");\n//     return `${day}.${month}.${year}`;\n//   }\n\n//   function handleProductsForSelectedDate(date) {\n//     setTimeout(() => {\n//       privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n//     }, 1000); // Delay of 1000ms\n//   }\n\n//   const isMobile = useMediaQuery({ query: breakpoints.mobile });\n\n//   // Redirect to CalculatorPage if `/home` is accessed\n//   if (location.pathname === \"/home\") {\n//     return <Navigate to=\"/home/calculator\" />;\n//   }\n\n//   return (\n//     <section className={styles.section}>\n//       {isCalculatorModalVisible && (\n//         <div\n//           ref={modalRef}\n//           className={styles.modalOverlay}\n//           onClick={closeOnClickOutside}\n//         >\n//           <div className={styles.modalContent}>\n//             <Modal\n//               closeButton={styles.closeButton}\n//               handleModalClose={toggleIsCalculatorModalVisible}\n//               isModalVisible={isCalculatorModalVisible}\n//             >\n//               {isMobile && (\n//                 <div className={styles.mobileHeaderCont}>\n//                   <header className={styles.modalHeader}>\n//                     <Logo className={styles.logoHeaderContainer} />\n//                   </header>\n//                   <div className={styles.mobileSubHeaderCont}>\n//                     <button\n//                       onClick={toggleIsCalculatorModalVisible}\n//                       className={styles.mobileHeaderExitButton}\n//                     >\n//                       <svg\n//                         xmlns=\"http://www.w3.org/2000/svg\"\n//                         width=\"15\"\n//                         height=\"9\"\n//                         viewBox=\"0 0 15 9\"\n//                         fill=\"none\"\n//                       >\n//                         <path\n//                           d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\"\n//                           stroke=\"black\"\n//                           strokeWidth=\"2\"\n//                         />\n//                       </svg>\n//                     </button>\n//                   </div>\n//                 </div>\n//               )}\n//               <div className={styles.modalLogoutActionCenter}>\n//                 <button\n//                   className={styles.closeModal}\n//                   id=\"closeModal\"\n//                   onClick={toggleIsCalculatorModalVisible}\n//                 >\n//                   <HiX size=\"16px\" />\n//                 </button>\n//                 {!user && isMobile && <Loader />}\n//                 {user ? (\n//                   <>\n//                     <h2>Your recommended daily calorie intake is</h2>\n//                     <p className={styles.calories}>\n//                       {user?.dietaryInfo?.dailyCalorieIntake || \"N/A\"}\n//                       <span>kcal</span>\n//                     </p>\n//                     <div className={styles.line}></div>\n//                     <p className={styles.notEat}>Foods you should not eat</p>\n//                     <ol className={styles.list}>\n//                       {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n//                         user?.dietaryInfo?.restrictedAliments?.map((item) => (\n//                           <li key={item._id}>{item.title}</li>\n//                         ))\n//                       ) : (\n//                         <p className={styles.empty}>No foods listed</p>\n//                       )}\n//                     </ol>\n//                     <Link className={styles.link} to=\"/\">\n//                       <Button\n//                         handleClick={() => {\n//                           toggleIsCalculatorModalVisible();\n//                           dispatch(resetPrivateForm);\n//                         }}\n//                         type=\"button\"\n//                         variant=\"colored\"\n//                       >\n//                         Start losing weight\n//                       </Button>\n//                     </Link>\n//                   </>\n//                 ) : (\n//                   <p className={styles.empty}>\n//                     Loading your recommendations...\n//                   </p>\n//                 )}\n//               </div>\n//             </Modal>\n//           </div>\n//         </div>\n//       )}\n//       {error || !isLoggedIn ? (\n//         <div className={styles.errorMessage}>\n//           {error === \"Not authorized\" ? (\n//             <div className={styles.errorMessage}>\n//               <p>\n//                 For reasons of personal data security Your authorisation has\n//                 expired ! We will shortly redirect You to your login page. If\n//                 you want to continue Please Login again ! Thank You for\n//                 understanding !\n//               </p>\n//             </div>\n//           ) : error ? (\n//             error\n//           ) : (\n//             <div className={styles.errorMessage}>\n//               <p>\n//                 Please Login or Register to access the calculator and start your\n//                 App\n//               </p>\n//               <Button\n//                 onClick={() => navigate(\"/login\")}\n//                 type=\"submit\"\n//                 variant=\"colored\"\n//               >\n//                 Login\n//               </Button>\n//             </div>\n//           )}\n//         </div>\n//       ) : (\n//         <>\n//           <div className={styles.calculatorCont}>\n//             {isDesktop && (\n//               <div className={styles.leftCont}>\n//                 <Logo />\n//                 <NavLinks />\n//               </div>\n//             )}\n//             <Calculator\n//               onSubmit={(formData) => {\n//                 handleSubmit(formData);\n//                 handleProductsForSelectedDate(today);\n//                 handleClick();\n//                 toggleIsCalculatorModalVisible();\n//               }}\n//             />\n//           </div>\n//           <LoginStatistics day={formatToDisplayDate(today)} />\n//         </>\n//       )}\n//     </section>\n//   );\n// }\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Link } from \"react-router-dom\";\nimport Calculator from \"../../components/Calculator/Calculator\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  fetchPrivateCalculationData,\n  fetchConsumedProductsForSpecificDay,\n} from \"../../redux/private/operationsPrivate\";\nimport { resetPrivateForm } from \"../../redux/private/privateSlice\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\n// import { useAuth } from \"../../hooks/useAuth\";\n// import { logOut } from \"../../redux/auth/operationsAuth\";\n\nimport useToggle from \"../../hooks/useToggle\";\n\nimport NavLinks from \"../../components/NavLinks/NavLinks\";\n\nimport getFormattedDate from \"../../Utils/getFormattedDate\";\n\nimport Logo from \"../../components/Logo/Logo\";\nimport LoginStatistics from \"../../components/LoginStatistics/LoginStatistics\";\nimport Button from \"../../components/commonComponents/Button\";\nimport Modal from \"../../components/commonComponents/Modal/Modal\";\nimport Loader from \"../../components/commonComponents/Loader\";\n\nimport { HiX } from \"react-icons/hi\";\n\nimport styles from \"./CalculatorPage.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nexport default function CalculatorPage() {\n  // const location = useLocation();\n  const dispatch = useDispatch();\n\n  const [isCalculatorModalVisible, toggleIsCalculatorModalVisible] =\n    useToggle(false);\n  const modalRef = useRef();\n\n  // const { isLoggedIn } = useAuth();\n  const { privateDispatch, user } = usePrivate();\n\n  // console.log(\"user :\", user);\n\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n  // const navigate = useNavigate();\n\n  const today = getFormattedDate();\n\n  useEffect(() => {\n    if (isCalculatorModalVisible) {\n      document.body.classList.add(styles.noScroll);\n    } else {\n      document.body.classList.remove(styles.noScroll);\n    }\n\n    const handleEscapeKey = (event) => {\n      if (event.key === \"Escape\") toggleIsCalculatorModalVisible();\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n\n    return () => {\n      document.body.classList.remove(styles.noScroll);\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [isCalculatorModalVisible, toggleIsCalculatorModalVisible]);\n\n  const closeOnClickOutside = (event) => {\n    if (event.target !== event.currentTarget) {\n      toggleIsCalculatorModalVisible();\n    }\n  };\n\n  useEffect(() => {\n    const today = getFormattedDate(); // Ensure the correct format YYYY-MM-DD\n    // console.log(\"Fetching data for date:\", today);\n\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n  }, [privateDispatch]);\n\n  // useEffect(() => {\n  //   if (error === \"Not authorized\") {\n  //     const timeout = setTimeout(() => {\n  //       dispatch(logOut());\n  //       navigate(\"/login\");\n  //     }, 5000);\n\n  //     return () => clearTimeout(timeout); // Cleanup timeout\n  //   }\n  // }, [error, isLoggedIn, dispatch, navigate]);\n\n  const handleClick = () => {\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n  };\n\n  // console.log(getFormattedDate());\n\n  // Function to handle form submission\n  const handleSubmit = (formData) => {\n    privateDispatch(fetchPrivateCalculationData(formData));\n  };\n\n  function formatToDisplayDate(date) {\n    const [year, month, day] = date.split(\"-\");\n    return `${day}.${month}.${year}`;\n  }\n\n  function handleProductsForSelectedDate(date) {\n    setTimeout(() => {\n      privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n    }, 1000); // Delay of 1000ms\n  }\n\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\n\n  // // Redirect to CalculatorPage if `/home` is accessed\n  // if (location.pathname === \"/home\") {\n  //   return <Navigate to=\"/home/calculator\" />;\n  // }\n\n  return (\n    <section className={styles.section}>\n      {isCalculatorModalVisible && (\n        <div\n          ref={modalRef}\n          className={styles.modalOverlay}\n          onClick={closeOnClickOutside}\n        >\n          <div className={styles.modalContent}>\n            <Modal\n              closeButton={styles.closeButton}\n              handleModalClose={toggleIsCalculatorModalVisible}\n              isModalVisible={isCalculatorModalVisible}\n            >\n              {isMobile && (\n                <div className={styles.mobileHeaderCont}>\n                  <header className={styles.modalHeader}>\n                    <Logo className={styles.logoHeaderContainer} />\n                  </header>\n                  <div className={styles.mobileSubHeaderCont}>\n                    <button\n                      onClick={toggleIsCalculatorModalVisible}\n                      className={styles.mobileHeaderExitButton}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"15\"\n                        height=\"9\"\n                        viewBox=\"0 0 15 9\"\n                        fill=\"none\"\n                      >\n                        <path\n                          d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\"\n                          stroke=\"black\"\n                          strokeWidth=\"2\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              )}\n              <div className={styles.modalLogoutActionCenter}>\n                <button\n                  className={styles.closeModal}\n                  id=\"closeModal\"\n                  onClick={toggleIsCalculatorModalVisible}\n                >\n                  <HiX size=\"16px\" />\n                </button>\n                {!user && isMobile && <Loader />}\n                {user ? (\n                  <>\n                    <h2>Your recommended daily calorie intake is</h2>\n                    <p className={styles.calories}>\n                      {user?.dietaryInfo?.dailyCalorieIntake || \"N/A\"}\n                      <span>kcal</span>\n                    </p>\n                    <div className={styles.line}></div>\n                    <p className={styles.notEat}>Foods you should not eat</p>\n                    <ol className={styles.list}>\n                      {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n                        user?.dietaryInfo?.restrictedAliments?.map((item) => (\n                          <li key={item._id}>{item.title}</li>\n                        ))\n                      ) : (\n                        <p className={styles.empty}>No foods listed</p>\n                      )}\n                    </ol>\n                    <Link className={styles.link} to=\"/\">\n                      <Button\n                        handleClick={() => {\n                          toggleIsCalculatorModalVisible();\n                          dispatch(resetPrivateForm);\n                        }}\n                        type=\"button\"\n                        variant=\"colored\"\n                      >\n                        Start losing weight\n                      </Button>\n                    </Link>\n                  </>\n                ) : (\n                  <p className={styles.empty}>\n                    Loading your recommendations...\n                  </p>\n                )}\n              </div>\n            </Modal>\n          </div>\n        </div>\n      )}\n\n      <div className={styles.calculatorCont}>\n        {isDesktop && (\n          <div className={styles.leftCont}>\n            <Logo />\n            <NavLinks />\n          </div>\n        )}\n        <Calculator\n          onSubmit={(formData) => {\n            handleSubmit(formData);\n            handleProductsForSelectedDate(today);\n            handleClick();\n            toggleIsCalculatorModalVisible();\n          }}\n        />\n      </div>\n      <LoginStatistics day={formatToDisplayDate(today)} />\n    </section>\n  );\n}\n","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n  [selectPublicCalculatorState],\n  (publicCalculatorSlice) => ({\n    height: publicCalculatorSlice.height,\n    age: publicCalculatorSlice.age,\n    currentWeight: publicCalculatorSlice.currentWeight,\n    desiredWeight: publicCalculatorSlice.desiredWeight,\n    bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n  })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectFormData,\n  selectLoading,\n  selectResult,\n  selectProducts,\n  selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n  const dispatch = useDispatch(); // Add dispatch for triggering actions\n  const formData = useSelector(selectFormData);\n  const isLoading = useSelector(selectLoading);\n  const errorPublic = useSelector(selectError);\n  const result = useSelector(selectResult);\n  const products = useSelector(selectProducts);\n  const product = useSelector(selectProduct);\n\n  return {\n    formData,\n    isLoading,\n    errorPublic,\n    result,\n    products,\n    product,\n    dispatch, // Include dispatch in the returned object\n  };\n};\n"],"names":["breakpoints","_ref","_user$dietaryInfo","_user$dietaryInfo$res","day","isDesktop","useMediaQuery","query","user","useAuth","dailyCalorieSummary","usePrivate","userUpdateShown","setUserUpdateShown","useState","test","console","error","concat","_jsxs","className","styles","children","_jsx","UpdateUser","theme","onClose","UserLogout","handleUpdateUserClick","handleUpdateUser","log","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","style","marginBottom","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","length","map","aliment","title","_id","getFormattedDate","today","Date","year","getFullYear","month","String","getMonth","padStart","getDate","bloodTypeOptions","value","label","WeightLossForm","_bloodTypeOptions$fin","onSubmit","formData","isLoading","dispatch","usePublic","isLoggedIn","userHeight","height","userAge","age","userWeight","weight","userDesiredWeightt","desiredWeight","userBloodType","bloodType","privateFormData","privateLoading","privateDispatch","useEffect","defaultValues","currentWeight","bloodGroupIndex","setter","setAction","setPrivateFormData","setFormData","Object","entries","forEach","_ref2","key","name","isValid","values","every","field","toString","trim","handleChange","e","target","loading","preventDefault","form","formMainCont","formLeftCont","Input","type","placeholder","id","required","formRightCont","bloodTypeContainer","find","opt","readOnly","radioGroup","option","React","checked","onChange","handleRadioChange","radioInput","htmlFor","radioLabel","Button","variant","disabled","Calculator","cont","warn","width","paddingLeft","autoComplete","handleBlur","min","inputContainer","clsx","input","inputCenter","onBlur","mobile","tablet","desktop","CalculatorPage","_user$dietaryInfo2","_user$dietaryInfo2$re","_user$dietaryInfo3","_user$dietaryInfo3$re","useDispatch","isCalculatorModalVisible","toggleIsCalculatorModalVisible","useToggle","modalRef","useRef","document","body","classList","add","noScroll","remove","handleEscapeKey","event","addEventListener","removeEventListener","fetchConsumedProductsForSpecificDay","date","isMobile","section","ref","modalOverlay","onClick","currentTarget","modalContent","Modal","closeButton","handleModalClose","isModalVisible","mobileHeaderCont","modalHeader","Logo","logoHeaderContainer","mobileSubHeaderCont","mobileHeaderExitButton","xmlns","viewBox","fill","d","stroke","strokeWidth","modalLogoutActionCenter","closeModal","HiX","size","Loader","_Fragment","calories","line","notEat","list","item","empty","Link","link","to","handleClick","resetPrivateForm","calculatorCont","leftCont","NavLinks","fetchPrivateCalculationData","handleSubmit","setTimeout","LoginStatistics","split","formatToDisplayDate","selectFormData","createSelector","state","publicCalculatorSlice","selectResult","result","selectLoading","selectError","selectProducts","products","selectProduct","product","useSelector","errorPublic"],"sourceRoot":""}