{"version":3,"file":"static/js/330.56194b36.chunk.js","mappings":"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","sources":["webpack://health-monitor/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx","webpack://health-monitor/./src/components/Calculator/Calculator.module.css?7770","webpack://health-monitor/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","components/Calculator/Calculator.jsx","webpack://health-monitor/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","webpack://health-monitor/./src/pages/CalculatorPage/CalculatorPage.module.css?9a12","pages/CalculatorPage/CalculatorPage.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__bSZ00\",\"statisticCont\":\"LoginStatistics_statisticCont__W4sUJ\",\"resultsToday\":\"LoginStatistics_resultsToday__5XOvn\",\"statisticList\":\"LoginStatistics_statisticList__-K1dG\",\"statisticListItem\":\"LoginStatistics_statisticListItem__jwFY5\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__5hv5z\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__AujTB\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__xTGyK\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__H-Mel\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__2+pc3\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__yyZZY\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__0vXlq\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport UserLogout from \"../UserLogout/UserLogout\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport styles from \"./LoginStatistics.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nfunction LoginStatistics({ day }) {\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n  const { user } = useAuth();\n  const { dailyCalorieSummary } = usePrivate();\n\n  // Validate the format dd-mm-yyyy\n  const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\n  if (!isValidDate) {\n    console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\n  }\n\n  return (\n    <div className={styles.resultsCont}>\n      {isDesktop && <UserLogout />}\n      <div className={styles.statisticSuperCont}>\n        <div className={styles.statisticCont}>\n          <p className={styles.resultsToday}>Summary for {day}</p>\n          <ul className={styles.statisticList}>\n            <li key=\"left\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Left</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.remainingCalories !== 0\n                  ? dailyCalorieSummary.remainingCalories\n                  : \"000\"}{\" \"}\n                kcal\n              </span>\n            </li>\n            <li key=\"consumed\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Consumed</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.totalCaloriesConsumed > 0\n                  ? dailyCalorieSummary.totalCaloriesConsumed\n                  : \"000\"}{\" \"}\n                kcal\n              </span>\n            </li>\n            <li key=\"daily\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Daily rate</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.dailyCalorieIntake > 0\n                  ? dailyCalorieSummary.dailyCalorieIntake\n                  : \"000\"}{\" \"}\n                kcal\n              </span>{\" \"}\n            </li>\n            <li key=\"normal\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>n% of normal</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.percentageCaloriesConsumed > 0\n                  ? dailyCalorieSummary.percentageCaloriesConsumed\n                  : \"0\"}{\" \"}\n                %\n              </span>{\" \"}\n            </li>\n          </ul>\n        </div>\n        <div className={styles.notRecommendedCont}>\n          <p className={styles.notRecommendedTitle}>Food not recommended</p>\n          {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n            <ul className={styles.notRecommendedList}>\n              {user.dietaryInfo.restrictedAliments.map((aliment) => (\n                <li\n                  key={aliment?._id}\n                  className={styles.notRecommendedListItem}\n                >\n                  {aliment.title}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className={styles.notRecommendedEmpty}>\n              Your diet will be displayed here\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLoginStatistics.propTypes = {\n  day: PropTypes.string.isRequired,\n};\n\nexport default LoginStatistics;\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__hof16\",\"title\":\"Calculator_title__0VU03\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__vXQGd\",\"formMainCont\":\"WeightLossForm_formMainCont__iwbqv\",\"formLeftCont\":\"WeightLossForm_formLeftCont__NE+NA\",\"formRightCont\":\"WeightLossForm_formRightCont__FzY75\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__Ooi9f\",\"label\":\"WeightLossForm_label__OkR4d\",\"radioGroup\":\"WeightLossForm_radioGroup__ixH+l\",\"radioInput\":\"WeightLossForm_radioInput__qHjLL\",\"radioLabel\":\"WeightLossForm_radioLabel__FW6g2\",\"errorMessage\":\"WeightLossForm_errorMessage__pIDNO\",\"link\":\"WeightLossForm_link__1VjI+\"};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport { setPrivateFormData } from \"../../redux/private/privateSlice\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./WeightLossForm.module.css\";\n\nconst bloodTypeOptions = [\n  { value: \"1\", label: \"A\" },\n  { value: \"2\", label: \"B\" },\n  { value: \"3\", label: \"AB\" },\n  { value: \"4\", label: \"O\" },\n];\n\nexport default function WeightLossForm({ onSubmit, handleClick }) {\n  const { formData = {}, isLoading, dispatch } = usePublic();\n\n  const { isLoggedIn, user } = useAuth();\n\n  const userHeight = user?.height;\n  const userAge = user?.age;\n  const userWeight = user?.weight;\n  const userDesiredWeightt = user?.desiredWeight;\n  const userBloodType = user?.bloodType;\n  // console.log(userBloodType);\n\n  const {\n    privateFormData = {},\n    privateLoading,\n    privateDispatch,\n  } = usePrivate();\n  // console.log(isLoggedIn);\n  // console.log(privateLoading);\n  // console.log(privateFormData);\n\n  // Initialize form state with default values\n  useEffect(() => {\n    const defaultValues = {\n      height: isLoggedIn ? userHeight : \"\",\n      age: isLoggedIn ? userAge : \"\",\n      currentWeight: isLoggedIn ? userWeight : \"\",\n      desiredWeight: isLoggedIn ? userDesiredWeightt : \"\",\n      bloodGroupIndex: isLoggedIn ? userBloodType : \"\",\n    };\n\n    const setter = isLoggedIn ? privateDispatch : dispatch;\n    const setAction = isLoggedIn ? setPrivateFormData : setFormData;\n\n    Object.entries(defaultValues).forEach(([key, value]) => {\n      if (!isLoggedIn && !formData[key]) {\n        setter(setAction({ name: key, value }));\n      }\n      if (isLoggedIn && !privateFormData[key]) {\n        setter(setAction({ name: key, value }));\n      }\n    });\n  }, [\n    dispatch,\n    privateDispatch,\n    formData,\n    privateFormData,\n    isLoggedIn,\n    userHeight,\n    userAge,\n    userWeight,\n    userDesiredWeightt,\n    userBloodType,\n  ]);\n\n  // console.log(formData);\n\n  // Check if all form fields are valid\n  const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\n    (field) => field?.toString().trim() !== \"\"\n  );\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    !isLoggedIn\n      ? dispatch(setFormData({ name, value }))\n      : privateDispatch(setPrivateFormData({ name, value }));\n  };\n\n  const handleRadioChange = (value) => {\n    !isLoggedIn\n      ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\n      : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const dataToSubmit = isLoggedIn ? privateFormData : formData;\n    if (isValid) {\n      onSubmit(dataToSubmit);\n    }\n  };\n\n  const height = !isLoggedIn ? formData.height : privateFormData.height;\n  const age = !isLoggedIn ? formData.age : privateFormData.age;\n  const currentWeight = !isLoggedIn\n    ? formData.currentWeight\n    : privateFormData.currentWeight;\n  const desiredWeight = !isLoggedIn\n    ? formData.desiredWeight\n    : privateFormData.desiredWeight;\n  const bloodGroupIndex = !isLoggedIn\n    ? formData?.bloodGroupIndex\n    : privateFormData?.bloodGroupIndex;\n  const loading = !isLoggedIn ? isLoading : privateLoading;\n\n  // console.log(\n  //   \"privateFormData?.bloodGroupIndex\",\n  //   privateFormData?.bloodGroupIndex\n  // );\n  // console.log(\"bloodGroupIndex\", bloodGroupIndex);\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.formMainCont}>\n        {/* Left Section */}\n        <div className={styles.formLeftCont}>\n          <Input\n            type=\"number\"\n            placeholder=\"Height*\"\n            name=\"height\"\n            value={height || \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <Input\n            type=\"number\"\n            placeholder=\"Age*\"\n            name=\"age\"\n            value={age || \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <Input\n            type=\"number\"\n            placeholder=\"Current weight*\"\n            name=\"currentWeight\"\n            value={currentWeight || \"\"}\n            handleChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Right Section */}\n        <div className={styles.formRightCont}>\n          <Input\n            type=\"number\"\n            placeholder=\"Desired weight*\"\n            name=\"desiredWeight\"\n            value={desiredWeight || \"\"}\n            handleChange={handleChange}\n            required\n          />\n\n          <div className={styles.bloodTypeContainer}>\n            <label className={styles.label}></label>\n\n            {/* Read-Only Input */}\n            <Input\n              type=\"text\"\n              placeholder=\"Blood type*\"\n              name=\"bloodType\"\n              value={\n                bloodTypeOptions.find(\n                  (opt) => opt.value === String(bloodGroupIndex)\n                )?.label || \"\"\n              }\n              handleChange={handleChange}\n              required\n              readOnly\n            />\n\n            {/* Radio Buttons */}\n            <div className={styles.radioGroup}>\n              {bloodTypeOptions.map((option) => (\n                <React.Fragment key={option.value}>\n                  <input\n                    type=\"radio\"\n                    id={`bloodType-${option.value}`}\n                    name=\"bloodType\"\n                    value={option.value}\n                    checked={String(bloodGroupIndex) === option.value}\n                    onChange={() => handleRadioChange(option.value)}\n                    className={styles.radioInput}\n                  />\n                  <label\n                    htmlFor={`bloodType-${option.value}`}\n                    className={styles.radioLabel}\n                  >\n                    {option.label}\n                  </label>\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Button\n        handleClick={handleClick}\n        type=\"submit\"\n        variant=\"colored\"\n        disabled={!isValid || loading}\n      >\n        {loading ? \"Loading...\" : \"Start losing weight\"}\n      </Button>\n    </form>\n  );\n}\n\nWeightLossForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  handleClick: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Calculator.module.css\";\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\n\nexport default function Calculator({ onSubmit, handleClick }) {\n  return (\n    <div className={styles.cont}>\n      <h2 className={styles.title}>\n        Calculate your daily calorie intake right now\n      </h2>\n\n      <WeightLossForm handleClick={handleClick} onSubmit={onSubmit} />\n    </div>\n  );\n}\n\nCalculator.propTypes = {\n  onSubmit: PropTypes.func.isRequired, // Ensure onSubmit is provided as a prop\n  handleClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CalculatorPage_section__Wyr9N\",\"calculatorCont\":\"CalculatorPage_calculatorCont__mxIJs\",\"errorMessage\":\"CalculatorPage_errorMessage__Ym1qk\",\"leftCont\":\"CalculatorPage_leftCont__dplUt\"};","import React, { useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Calculator from \"../../components/Calculator/Calculator\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  fetchPrivateCalculationData,\n  fetchConsumedProductsForSpecificDay,\n} from \"../../redux/private/operationsPrivate\";\n\nimport Logo from \"../../components/Logo/Logo\";\nimport NavLinks from \"../../components/NavLinks/NavLinks\";\n\nimport LoginStatistics from \"../../components/LoginStatistics/LoginStatistics\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport { logOut } from \"../../redux/auth/operationsAuth\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./CalculatorPage.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nexport default function CalculatorPage() {\n  useLocation();\n\n  const { isLoggedIn } = useAuth();\n  const { error, privateDispatch } = usePrivate();\n\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n  const thisDispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const today = getFormattedDate();\n\n  useEffect(() => {\n    const today = getFormattedDate(); // Ensure the correct format YYYY-MM-DD\n    // console.log(\"Fetching data for date:\", today);\n\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n  }, [privateDispatch]);\n\n  useEffect(() => {\n    if (error === \"Not authorized\") {\n      const timeout = setTimeout(() => {\n        thisDispatch(logOut());\n        navigate(\"/login\");\n      }, 5000);\n\n      return () => clearTimeout(timeout); // Cleanup timeout\n    }\n  }, [error, isLoggedIn, thisDispatch, navigate]);\n\n  function getFormattedDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Add leading zero if needed\n    const day = String(today.getDate()).padStart(2, \"0\"); // Add leading zero if needed\n    return `${year}-${month}-${day}`; // Return in YYYY-MM-DD format\n  }\n\n  const handleClick = () => {\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n    // dispatch(refreshUser())\n  };\n\n  // console.log(getFormattedDate());\n\n  // Function to handle form submission\n  const handleSubmit = (formData) => {\n    privateDispatch(fetchPrivateCalculationData(formData));\n  };\n\n  function formatToDisplayDate(date) {\n    const [year, month, day] = date.split(\"-\");\n    return `${day}.${month}.${year}`;\n  }\n\n  function handleProductsForSelectedDate(date) {\n    setTimeout(() => {\n      privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n    }, 1000); // Delay of 500ms\n  }\n\n  return (\n    <section className={styles.section}>\n      {(error || !isLoggedIn) && (\n        <div className={styles.errorMessage}>\n          {error === \"Not authorized\" ? (\n            <div className={styles.errorMessage}>\n              <p>\n                For reasons of personal data security Your authorisation has\n                expired ! We will shortly redirect You to your login page. If\n                you want to continue Please Login again ! Thank You for\n                understanding !\n              </p>\n            </div>\n          ) : (\n            error\n          )}\n        </div>\n      )}\n\n      <div className={styles.calculatorCont}>\n        {isDesktop && (\n          <div className={styles.leftCont}>\n            <Logo />\n            <NavLinks />\n          </div>\n        )}\n        <Calculator\n          handleClick={() => {\n            handleClick();\n            handleSubmit();\n            handleProductsForSelectedDate(today);\n          }}\n          onSubmit={handleSubmit}\n        />\n      </div>\n      <LoginStatistics day={formatToDisplayDate(today)} />\n    </section>\n  );\n}\n","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n  [selectPublicCalculatorState],\n  (publicCalculatorSlice) => ({\n    height: publicCalculatorSlice.height,\n    age: publicCalculatorSlice.age,\n    currentWeight: publicCalculatorSlice.currentWeight,\n    desiredWeight: publicCalculatorSlice.desiredWeight,\n    bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n  })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectFormData,\n  selectLoading,\n  selectResult,\n  selectProducts,\n  selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n  const dispatch = useDispatch(); // Add dispatch for triggering actions\n  const formData = useSelector(selectFormData);\n  const isLoading = useSelector(selectLoading);\n  const errorPublic = useSelector(selectError);\n  const result = useSelector(selectResult);\n  const products = useSelector(selectProducts);\n  const product = useSelector(selectProduct);\n\n  return {\n    formData,\n    isLoading,\n    errorPublic,\n    result,\n    products,\n    product,\n    dispatch, // Include dispatch in the returned object\n  };\n};\n"],"names":["breakpoints","_ref","_user$dietaryInfo","_user$dietaryInfo$res","day","isDesktop","useMediaQuery","query","user","useAuth","dailyCalorieSummary","usePrivate","test","console","error","concat","_jsxs","className","styles","children","_jsx","UserLogout","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","length","map","aliment","title","_id","bloodTypeOptions","value","label","WeightLossForm","_bloodTypeOptions$fin","onSubmit","handleClick","formData","isLoading","dispatch","usePublic","isLoggedIn","userHeight","height","userAge","age","userWeight","weight","userDesiredWeightt","desiredWeight","userBloodType","bloodType","privateFormData","privateLoading","privateDispatch","useEffect","defaultValues","currentWeight","bloodGroupIndex","setter","setAction","setPrivateFormData","setFormData","Object","entries","forEach","_ref2","key","name","isValid","values","every","field","toString","trim","handleChange","e","target","loading","preventDefault","form","formMainCont","formLeftCont","Input","type","placeholder","required","formRightCont","bloodTypeContainer","find","opt","String","readOnly","radioGroup","option","React","id","checked","onChange","handleRadioChange","radioInput","htmlFor","radioLabel","Button","variant","disabled","Calculator","cont","width","paddingLeft","autoComplete","handleBlur","style","inputContainer","clsx","input","inputCenter","onBlur","mobile","tablet","desktop","CalculatorPage","useLocation","thisDispatch","useDispatch","navigate","useNavigate","today","getFormattedDate","Date","year","getFullYear","month","getMonth","padStart","getDate","fetchConsumedProductsForSpecificDay","date","timeout","setTimeout","logOut","clearTimeout","handleSubmit","fetchPrivateCalculationData","section","errorMessage","calculatorCont","leftCont","Logo","NavLinks","LoginStatistics","split","formatToDisplayDate","selectFormData","createSelector","state","publicCalculatorSlice","selectResult","result","selectLoading","selectError","selectProducts","products","selectProduct","product","useSelector","errorPublic"],"sourceRoot":""}