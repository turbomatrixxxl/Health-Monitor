{"version":3,"file":"static/js/521.e1856302.chunk.js","mappings":"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","sources":["webpack://health-monitor/./src/components/AlertForm/AlertForm.module.css?d0cc","components/AlertForm/AlertForm.jsx","webpack://health-monitor/./src/pages/AlertsPage/AlertsPage.module.css?ad2e","pages/AlertsPage/AlertsPage.jsx","pages/AlertsPage/index.js","Utils/createEventFromReminder.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formModalCont\":\"AlertForm_formModalCont__n1AHS\",\"form\":\"AlertForm_form__WOPSZ\",\"close\":\"AlertForm_close__6XhrF\",\"inputGroup\":\"AlertForm_inputGroup__C-9ve\",\"weekly\":\"AlertForm_weekly__FbPlI\",\"checkboxLabel\":\"AlertForm_checkboxLabel__V4eiP\",\"smallBtn\":\"AlertForm_smallBtn__YJ5YK\",\"buttonGroup\":\"AlertForm_buttonGroup__C9g8J\",\"saveBtn\":\"AlertForm_saveBtn__nemPP\",\"cancelBtn\":\"AlertForm_cancelBtn__+GW3d\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./AlertForm.module.css\";\n\nconst daysOfWeek = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"];\n\nconst now = new Date();\nconst today = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(\n  2,\n  \"0\"\n)}-${String(now.getDate()).padStart(2, \"0\")}`;\n\nexport default function AlertForm({\n  onClose,\n  handleSubmit,\n  data,\n  handleSet,\n  editId,\n}) {\n  const modalRef = useRef();\n\n  const [filterDate, setFilterDate] = useState(today);\n\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n\n    const addCloseEvent = (event) => {\n      if (event.key === \"Escape\") onClose();\n    };\n    document.addEventListener(\"keydown\", addCloseEvent);\n\n    return () => {\n      document.body.style.overflow = \"auto\";\n      document.removeEventListener(\"keydown\", addCloseEvent);\n    };\n  });\n\n  const closeOnClickOutside = (event) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  const [freqType, setFreqType] = useState(\n    data.frequency === \"daily\"\n      ? \"daily\"\n      : data.frequency.includes(\"monthly\")\n      ? \"monthly\"\n      : data.frequency.match(/^\\d{4}-\\d{2}-\\d{2}$/)\n      ? \"date\"\n      : \"weekly\"\n  );\n\n  const handleWeeklyChange = (day) => {\n    let selected = data.frequency === \"daily\" ? [] : data.frequency.split(\",\");\n    selected.includes(day)\n      ? (selected = selected.filter((d) => d !== day))\n      : selected.push(day);\n    if (selected.length === 7) {\n      handleSet(\"frequency\", \"daily\");\n      setFreqType(\"daily\");\n    } else handleSet(\"frequency\", selected.join(\",\"));\n  };\n\n  const handleMonthlyChange = (day) => handleSet(\"frequency\", `${day} monthly`);\n  const handleDateChange = (dateStr) => handleSet(\"frequency\", dateStr);\n\n  const alertCondition = data.type === \"alert\";\n\n  return (\n    <div\n      ref={modalRef}\n      onClick={closeOnClickOutside}\n      className={styles.formModalCont}\n    >\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button className={styles.close} onClick={onClose} type=\"button\">\n          x\n        </button>\n        {alertCondition && (\n          <div className={styles.inputGroup}>\n            <label>Reminder Text</label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter reminder\"\n              value={data.text}\n              onChange={(e) => handleSet(\"text\", e.target.value)}\n              required\n            />\n          </div>\n        )}\n        <div className={styles.inputGroup}>\n          <label>Time</label>\n          <input\n            type=\"time\"\n            value={data.time}\n            onChange={(e) => handleSet(\"time\", e.target.value)}\n            required\n          />\n        </div>\n        {alertCondition && (\n          <>\n            <div className={styles.inputGroup}>\n              <label>Frequency</label>\n              <select\n                value={freqType}\n                onChange={(e) => {\n                  setFreqType(e.target.value);\n                  if (e.target.value === \"daily\")\n                    handleSet(\"frequency\", \"daily\");\n                }}\n              >\n                <option value=\"daily\">Daily</option>\n                <option value=\"weekly\">Weekly (choose days)</option>\n                <option value=\"monthly\">Monthly (choose day)</option>\n                <option value=\"date\">Specific Date</option>\n              </select>\n            </div>\n            {freqType === \"weekly\" && (\n              <div className={styles.weekly}>\n                {daysOfWeek.map((day) => (\n                  <label key={day} className={styles.checkboxLabel}>\n                    <input\n                      type=\"checkbox\"\n                      checked={\n                        data.frequency === \"daily\" ||\n                        data.frequency.split(\",\").includes(day)\n                      }\n                      onChange={() => handleWeeklyChange(day)}\n                    />\n                    {day}\n                  </label>\n                ))}\n                <button\n                  type=\"button\"\n                  className={styles.smallBtn}\n                  onClick={() => {\n                    handleSet(\"frequency\", \"daily\");\n                    setFreqType(\"daily\");\n                  }}\n                >\n                  All\n                </button>\n              </div>\n            )}\n            {freqType === \"monthly\" && (\n              <div className={styles.inputGroup}>\n                <label>Day of Month</label>\n                <input\n                  type=\"number\"\n                  min={1}\n                  max={31}\n                  step={1}\n                  value={parseInt(data.frequency) || 1}\n                  onChange={(e) => handleMonthlyChange(e.target.value)}\n                />\n              </div>\n            )}\n            {freqType === \"date\" && (\n              <div className={styles.inputGroup}>\n                <label>Specific Date</label>\n                <input\n                  style={{ color: \"blue\", fontWeight: \"bold\" }}\n                  type=\"date\"\n                  min={today}\n                  value={\n                    /^\\d{4}-\\d{2}-\\d{2}$/.test(data.frequency)\n                      ? data.frequency\n                      : filterDate\n                  }\n                  onChange={(e) => {\n                    handleDateChange(e.target.value);\n                    setFilterDate(e.target.value);\n                  }}\n                />\n              </div>\n            )}\n          </>\n        )}\n        <div className={styles.inputGroup}>\n          <label>Repeat Interval (hours)</label>\n          <input\n            type=\"number\"\n            min={1}\n            max={12}\n            step={1}\n            value={parseInt(data.repeat) || \"\"}\n            onChange={(e) => {\n              const h = parseInt(e.target.value);\n              handleSet(\"repeat\", h === 1 ? \"1 hour\" : `${h} hours`);\n            }}\n            placeholder=\"No Repeat\"\n          />\n        </div>\n        <div className={styles.buttonGroup}>\n          <button type=\"submit\" className={styles.saveBtn}>\n            {editId ? \"Update Reminder\" : \"Add Reminder\"}\n          </button>\n          <button type=\"button\" onClick={onClose} className={styles.cancelBtn}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nAlertForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleSet: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  editId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"AlertsPage_cont__Bn-of\",\"leftSideCont\":\"AlertsPage_leftSideCont__uvpyK\",\"rightSideCont\":\"AlertsPage_rightSideCont__HCF89\",\"title\":\"AlertsPage_title__vqj0-\",\"rightSideTitle\":\"AlertsPage_rightSideTitle__uQTtz\",\"headerBox\":\"AlertsPage_headerBox__3iOMH\",\"addBtn\":\"AlertsPage_addBtn__b3wO3\",\"main\":\"AlertsPage_main__KHw-R\",\"calendarBox\":\"AlertsPage_calendarBox__iSP3z\",\"calendar\":\"AlertsPage_calendar__vOV+q\",\"rbc-today\":\"AlertsPage_rbc-today__P2l6q\",\"rbc-time-slot\":\"AlertsPage_rbc-time-slot__k-Hoo\",\"rbc-event\":\"AlertsPage_rbc-event__7F-kq\",\"remindersList\":\"AlertsPage_remindersList__BaT+d\",\"reminderItem\":\"AlertsPage_reminderItem__bQ515\",\"reminderItemDetailsCont\":\"AlertsPage_reminderItemDetailsCont__cSW7q\",\"actions\":\"AlertsPage_actions__ExvCf\",\"link\":\"AlertsPage_link__VK0R7\",\"stopBtn\":\"AlertsPage_stopBtn__J2o1J\",\"goBtn\":\"AlertsPage_goBtn__SGJ0k\",\"startBtn\":\"AlertsPage_startBtn__+8rI4\",\"doneBtn\":\"AlertsPage_doneBtn__SHS9V\",\"editBtn\":\"AlertsPage_editBtn__a6MAw\",\"doneLabel\":\"AlertsPage_doneLabel__G7cIv\"};","import { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport createEventFromReminder from \"../../Utils/createEventFromReminder\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport AlertForm from \"../../components/AlertForm/AlertForm\";\n\nimport clsx from \"clsx\";\n\nimport styles from \"./AlertsPage.module.css\";\n\nconst localizer = momentLocalizer(moment);\n\nexport default function AlertsPage() {\n  const [events, setEvents] = useState([]);\n\n  const [reminders, setReminders] = useState([\n    {\n      id: 1,\n      text: \"Take breakfast\",\n      time: \"06:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"10:00\",\n      type: \"meal\",\n      active: false,\n      done: false,\n    },\n    {\n      id: 2,\n      text: \"Take lunch\",\n      time: \"12:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"14:00\",\n      type: \"meal\",\n      active: false,\n      done: false,\n    },\n    {\n      id: 3,\n      text: \"Take dinner\",\n      time: \"17:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"19:00\",\n      type: \"meal\",\n      active: false,\n      done: false,\n    },\n    {\n      id: 4,\n      text: \"Go to sleep\",\n      time: \"20:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"00:00\",\n      type: \"sleep\",\n      active: false,\n      done: false,\n    },\n    {\n      id: 5,\n      text: \"Wake up\",\n      time: \"06:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"07:00\",\n      type: \"sleep\",\n      active: false,\n      done: false,\n    },\n    {\n      id: 6,\n      text: \"Do physical activities\",\n      time: \"09:00\",\n      frequency: \"Mo,We,Fri\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"alert\",\n      active: false,\n      done: false,\n    },\n    {\n      id: 7,\n      text: \"Record Breakfast meal\",\n      time: \"10:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"meal\",\n      active: false,\n      done: false,\n      link: \"/diary\",\n    },\n    {\n      id: 8,\n      text: \"Record Lunch meal\",\n      time: \"13:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"meal\",\n      active: false,\n      done: false,\n      link: \"/diary\",\n    },\n    {\n      id: 9,\n      text: \"Record Dinner meal\",\n      time: \"19:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"meal\",\n      active: false,\n      done: false,\n      link: \"/diary\",\n    },\n    {\n      id: 10,\n      text: \"Record Sleep period\",\n      time: \"19:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"sleep\",\n      active: false,\n      done: false,\n      link: \"/sleep\",\n    },\n    {\n      id: 11,\n      text: \"Record Health metrics\",\n      time: \"08:00\",\n      frequency: \"15 monthly\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"alert\",\n      active: false,\n      done: false,\n      link: \"/metrix\",\n    },\n    {\n      id: 12,\n      text: \"Record Exercise period\",\n      time: \"18:00\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"exercise\",\n      active: false,\n      done: false,\n      link: \"/physical\",\n    },\n    {\n      id: 13,\n      text: \"Drink water\",\n      time: \"06:00\",\n      frequency: \"daily\",\n      repeat: \"2 hours\",\n      end: \"23:00\",\n      type: \"alert\",\n      active: false,\n      done: false,\n    },\n  ]);\n\n  const [showForm, setShowForm] = useState(false);\n\n  const [editId, setEditId] = useState(null);\n\n  const [formData, setFormData] = useState({\n    text: \"\",\n    time: \"\",\n    frequency: \"daily\",\n    repeat: \"noRepeat\",\n    end: \"23:00\",\n    type: \"alert\",\n    active: false,\n    done: false,\n  });\n\n  useEffect(() => {\n    console.log(\"events :\", events);\n    console.log(\"editId :\", editId);\n    console.log(\"formData :\", formData);\n  }, [events, editId, formData]);\n\n  const handleGo = (id) => {\n    setReminders((prev) =>\n      prev.map((r) => (r.id === id ? { ...r, done: true } : r))\n    );\n  };\n\n  useEffect(() => {\n    const newEvents = reminders\n      .filter((r) => r.active)\n      .flatMap((r) => createEventFromReminder(r));\n    setEvents(newEvents);\n  }, [reminders]);\n\n  const handleDone = (id) => {\n    setReminders((prev) =>\n      prev.map((r) => (r.id === id ? { ...r, done: true } : r))\n    );\n  };\n\n  const handleActiveTrue = (id) => {\n    setReminders((prev) =>\n      prev.map((r) => (r.id === id ? { ...r, active: true } : r))\n    );\n  };\n\n  const handleActiveFalse = (id) => {\n    setReminders((prev) =>\n      prev.map((r) => (r.id === id ? { ...r, active: false } : r))\n    );\n  };\n\n  function handleCloseFormModal() {\n    setShowForm(false);\n\n    setFormData({\n      text: \"\",\n      time: \"\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"alert\",\n      active: false,\n      done: false,\n    });\n\n    setEditId(null);\n  }\n\n  const handleSubmitFormReminder = (e) => {\n    e.preventDefault(); // prevenim refresh\n\n    if (!formData.text || !formData.time) {\n      alert(\"Please enter a reminder text and time.\");\n      return;\n    }\n    setReminders((prev) => {\n      if (formData.id) {\n        // Edit\n        return prev.map((r) => (r.id === formData.id ? { ...formData } : r));\n      }\n      // Add\n      return [...prev, { ...formData, id: Date.now() }];\n    });\n\n    setFormData({\n      text: \"\",\n      time: \"\",\n      frequency: \"daily\",\n      repeat: \"noRepeat\",\n      end: \"23:00\",\n      type: \"alert\",\n      active: false,\n      done: false,\n    });\n\n    setEditId(null);\n\n    setShowForm(false);\n  };\n\n  const handleSetData = (field, value) => {\n    setFormData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  return (\n    <div className={styles.cont}>\n      {showForm && (\n        <AlertForm\n          onClose={handleCloseFormModal}\n          handleSubmit={handleSubmitFormReminder}\n          data={formData}\n          handleSet={handleSetData}\n          editId={editId}\n        />\n      )}\n      <div className={styles.leftSideCont}>\n        <div className={styles.headerBox}>\n          <h1 className={styles.title}>Calendar</h1>\n          <button\n            onClick={() => {\n              setShowForm(true);\n            }}\n            className={styles.addBtn}\n          >\n            + Add Reminder\n          </button>\n        </div>\n        <div className={styles.calendarBox}>\n          <Calendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            className={styles.calendar}\n            defaultView=\"week\"\n            defaultDate={new Date()} // data curentă\n            min={new Date()}\n          />\n        </div>\n      </div>\n\n      {/* Reminders section */}\n      <div className={styles.rightSideCont}>\n        <h1 className={clsx(styles.title, styles.rightSideTitle)}>Reminders</h1>\n        <ul className={styles.remindersList}>\n          {reminders.map((rem) => (\n            <li key={`alerts-${rem.id}`} className={styles.reminderItem}>\n              <div className={styles.reminderItemDetailsCont}>\n                <span className={styles.text}>{rem.text} :</span>\n                <div className={styles.timeCont}>\n                  <span className={styles.time}>{rem.time}</span>/\n                  <span className={styles.repeat}>{rem.frequency}</span>\n                  {rem.repeat !== \"noRepeat\" && (\n                    <span className={styles.repeat}>/{rem.repeat}</span>\n                  )}\n                </div>\n              </div>\n              <div className={styles.actions}>\n                {rem.active ? (\n                  <button\n                    className={styles.stopBtn}\n                    onClick={() => handleActiveFalse(rem.id)}\n                  >\n                    Stop\n                  </button>\n                ) : (\n                  <button\n                    className={styles.startBtn}\n                    onClick={() => handleActiveTrue(rem.id)}\n                  >\n                    Start\n                  </button>\n                )}\n\n                {rem.link && rem.active && !rem.done && (\n                  <Link className={styles.link} to={rem.link}>\n                    <button\n                      className={styles.goBtn}\n                      onClick={() => handleGo(rem.id)}\n                    >\n                      Go\n                    </button>\n                  </Link>\n                )}\n\n                {rem.active && !rem.done && (\n                  <button\n                    className={styles.doneBtn}\n                    onClick={() => handleDone(rem.id)}\n                  >\n                    Done\n                  </button>\n                )}\n\n                {rem.active && rem.done && (\n                  <span className={styles.doneLabel}>✓ Done</span>\n                )}\n\n                <button\n                  className={styles.editBtn}\n                  onClick={() => {\n                    setShowForm(true);\n                    setFormData({ ...rem });\n                    setEditId(rem.id);\n                  }}\n                >\n                  Edit\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import AlertsPage from \"./AlertsPage\";\n\nexport default AlertsPage;\n","// Funcție helper pentru a genera date pentru calendar\nexport default function createEventFromReminder(rem) {\n  if (!rem.active) return []; // doar active\n  if (rem.done) return [];\n\n  const [hour, minute] = rem.time.split(\":\").map(Number);\n  const [endHour, endMinute] = rem.end\n    ? rem.end.split(\":\").map(Number)\n    : [hour + 1, minute];\n\n  const today = new Date();\n  const events = [];\n\n  switch (rem.frequency) {\n    case \"daily\":\n      {\n        const start = new Date(today);\n        start.setHours(hour, minute, 0, 0);\n        const end = new Date(today);\n        end.setHours(endHour, endMinute, 0, 0);\n        events.push({ id: rem.id, title: rem.text, start, end });\n      }\n      break;\n\n    case \"weekly\":\n      {\n        const daysMap = { Mo: 1, Tu: 2, We: 3, Th: 4, Fr: 5, Sa: 6, Su: 0 };\n        const days = rem.frequency.split(\",\");\n        days.forEach((day) => {\n          const start = new Date(today);\n          start.setDate(\n            today.getDate() + ((7 + daysMap[day] - today.getDay()) % 7)\n          );\n          start.setHours(hour, minute, 0, 0);\n          const end = new Date(start);\n          end.setHours(endHour, endMinute, 0, 0);\n          events.push({ id: `${rem.id}-${day}`, title: rem.text, start, end });\n        });\n      }\n      break;\n\n    default:\n      // monthly\n      if (rem.frequency.includes(\"monthly\")) {\n        const dayOfMonth = parseInt(rem.frequency);\n        const start = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          dayOfMonth,\n          hour,\n          minute\n        );\n        const end = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          dayOfMonth,\n          endHour,\n          endMinute\n        );\n        events.push({ id: rem.id, title: rem.text, start, end });\n      } else if (/^\\d{4}-\\d{2}-\\d{2}$/.test(rem.frequency)) {\n        const [y, m, d] = rem.frequency.split(\"-\").map(Number);\n        const start = new Date(y, m - 1, d, hour, minute);\n        const end = new Date(y, m - 1, d, endHour, endMinute);\n        events.push({ id: rem.id, title: rem.text, start, end });\n      }\n      break;\n  }\n\n  return events;\n}\n"],"names":["daysOfWeek","now","Date","today","concat","getFullYear","String","getMonth","padStart","getDate","AlertForm","_ref","onClose","handleSubmit","data","handleSet","editId","modalRef","useRef","filterDate","setFilterDate","useState","useEffect","document","body","style","overflow","addCloseEvent","event","key","addEventListener","removeEventListener","freqType","setFreqType","frequency","includes","match","alertCondition","type","_jsx","ref","onClick","currentTarget","target","className","styles","children","_jsxs","onSubmit","placeholder","value","text","onChange","e","required","time","_Fragment","map","day","checked","split","selected","filter","d","push","length","join","handleWeeklyChange","min","max","step","parseInt","handleMonthlyChange","color","fontWeight","test","dateStr","repeat","h","localizer","momentLocalizer","moment","events","setEvents","reminders","setReminders","id","end","active","done","link","showForm","setShowForm","setEditId","formData","setFormData","console","log","newEvents","r","flatMap","rem","hour","minute","Number","endHour","endMinute","start","setHours","title","daysMap","Mo","Tu","We","Th","Fr","Sa","Su","forEach","setDate","getDay","dayOfMonth","y","m","createEventFromReminder","cont","preventDefault","prev","_objectSpread","alert","handleSetData","field","leftSideCont","headerBox","addBtn","calendarBox","Calendar","startAccessor","endAccessor","calendar","defaultView","defaultDate","rightSideCont","clsx","rightSideTitle","remindersList","reminderItem","reminderItemDetailsCont","timeCont","actions","stopBtn","handleActiveFalse","startBtn","handleActiveTrue","Link","to","goBtn","handleGo","doneBtn","handleDone","doneLabel","editBtn"],"sourceRoot":""}