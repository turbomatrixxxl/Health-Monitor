{"version":3,"file":"static/js/101.a6561651.chunk.js","mappings":"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","sources":["hooks/useFormValidation.js","webpack://health-monitor/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/validateLogin.js","webpack://health-monitor/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://health-monitor/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx","hooks/useFormTouched.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst useFormValidation = (initialState, validateFn) => {\n  const [fields, setFields] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const validateFields = () => {\n    const newErrors = validateFn(fields);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return {\n    fields,\n    setFields,\n    errors,\n    validateFields,\n  };\n};\n\nexport default useFormValidation;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  min = 0,\n  step,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        step={step}\n        min={min}\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  min: PropTypes.number,\n  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","const validateLogin = (fields) => {\n    const errors = {};\n    if (!fields.email) {\n        errors.email = \"Email is required\";\n    }\n    if (!fields.password) {\n        errors.password = \"Password is required\";\n    }\n    return errors;\n};\n\nexport default validateLogin;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"inputIcon\":\"LoginForm_inputIcon__GDKJZ\",\"inputError\":\"LoginForm_inputError__cPf0D\",\"eyeIcon\":\"LoginForm_eyeIcon__UzGhv\",\"errorCont\":\"LoginForm_errorCont__MHL+1\",\"error\":\"LoginForm_error__012y+\",\"buttonsContainer\":\"LoginForm_buttonsContainer__bkTpy\",\"button\":\"LoginForm_button__LodJg\",\"navLink\":\"LoginForm_navLink__gt1T+\"};","import React, { useState } from \"react\";\nimport { logIn } from \"../../redux/auth/operationsAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\nimport useToggle from \"../../hooks/useToggle\";\nimport useFormValidation from \"../../hooks/useFormValidation\";\nimport validateLogin from \"../../hooks/validateLogin\";\nimport useFormTouched from \"../../hooks/useFormTouched\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport clsx from \"clsx\";\n\nimport { toast } from \"react-toastify\";\n\nimport styles from \"./LoginForm.module.css\";\n\nfunction LoginForm() {\n  const { fields, setFields, validateFields } = useFormValidation(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    validateLogin\n  );\n\n  const { user, isLoggedIn } = useAuth();\n  const { touched, handleBlur } = useFormTouched(fields);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [isPasswordVisible, togglePasswordVisible] = useToggle(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateFields()) return;\n\n    try {\n      await dispatch(logIn(fields)).unwrap();\n      toast.success(\"Login successful!\");\n    } catch (error) {\n      setErrorMessage(\"You have entered an invalid username or password.\");\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faEnvelope} className={styles.inputIcon} />\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type=\"email\"\n              value={fields.email}\n              handleChange={(e) => {\n                setFields({ ...fields, email: e.target.value });\n              }}\n              handleBlur={handleBlur(\"email\")}\n              placeholder=\"Email *\"\n              required={true}\n            />\n          </div>\n          {touched.email && !fields.email && (\n            <p className={styles.inputError}>Required</p>\n          )}\n        </div>\n\n        {/* Password input */}\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\n\n            {isPasswordVisible ? (\n              <VscEyeClosed\n                onClick={() => {\n                  togglePasswordVisible();\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            ) : (\n              <VscEye\n                onClick={() => {\n                  togglePasswordVisible();\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type={isPasswordVisible ? \"text\" : \"password\"}\n              value={fields.password}\n              handleChange={(e) => {\n                setFields({ ...fields, password: e.target.value });\n              }}\n              handleBlur={handleBlur(\"password\")}\n              placeholder=\"Password\"\n              required={true}\n            />\n          </div>\n          {touched.password && fields.password.length < 6 && (\n            <p className={styles.inputError}>\n              Password must be at least 6 characters!\n            </p>\n          )}\n        </div>\n\n        {/* Buttons */}\n        <div className={styles.buttonsContainer}>\n          <Button variant=\"colored\" type=\"submit\">\n            Log in\n          </Button>\n          <Link to=\"/register\" className={styles.navLink}>\n            <Button className={styles.button} type=\"button\">\n              Register\n            </Button>\n          </Link>\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n        </div>\n\n        {/* Email not verified warning */}\n        {user !== null && !isLoggedIn && (\n          <div className={styles.errorCont}>\n            <p className={styles.error}>\n              It seems that your email is not verified! Please click the Verify\n              button to be redirected to verify email page !\n            </p>\n            <Button>\n              <Link\n                to=\"/verify-email\"\n                className={clsx(styles.navLink, styles.link)}\n              >\n                Verify\n              </Link>\n            </Button>\n          </div>\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__pqfrr\",\"title\":\"LoginPage_title__RBt-o\",\"errorMessage\":\"LoginPage_errorMessage__PaVZ1\"};","import React, { useEffect } from \"react\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n\nimport { toast } from \"react-toastify\";\n\nimport styles from \"./LoginPage.module.css\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\nimport { useDispatch } from \"react-redux\";\nimport { resetPrivateFormError } from \"../../redux/private/privateSlice\";\n\nexport default function LoginPage() {\n  const { isLoggedIn, user, errorAuth } = useAuth();\n  const { error } = usePrivate();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn || user?.verify) {\n      toast.success(\"Login successful!\");\n    }\n  }, [isLoggedIn, user?.verify]);\n\n  useEffect(() => {\n    if (error === \"Not authorized\") {\n      setTimeout(() => {\n        dispatch(resetPrivateFormError());\n      }, 5000);\n    }\n    return () => {\n      clearTimeout();\n    };\n  }, [dispatch, error]);\n\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>Log In</h2>\n\n      {(error === \"Not authorized\" || errorAuth) && (\n        <div className={styles.errorMessage}>\n          <p>\n            For reasons of personal data security, your authorization has\n            expired. If you want to continue, please log in again. Thank you for\n            understanding!\n          </p>\n        </div>\n      )}\n\n      <LoginForm />\n    </section>\n  );\n}\n","import { useState } from \"react\";\n\nconst useFormTouched = (initialState = {}) => {\n  const [touched, setTouched] = useState(\n    Object.keys(initialState).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {})\n  );\n\n  const handleBlur = (field) => () => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  return {\n    touched,\n    handleBlur,\n  };\n};\n\nexport default useFormTouched;\n"],"names":["useFormValidation","initialState","validateFn","fields","setFields","useState","errors","setErrors","validateFields","newErrors","Object","keys","length","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","min","step","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","email","password","validateLogin","user","isLoggedIn","useAuth","touched","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","isPasswordVisible","togglePasswordVisible","useToggle","_Fragment","_jsxs","onSubmit","async","e","preventDefault","logIn","unwrap","toast","success","error","form","inputWrapper","FontAwesomeIcon","icon","faEnvelope","inputIcon","_objectSpread","target","inputError","faLock","VscEyeClosed","onClick","size","eyeIcon","VscEye","buttonsContainer","Button","Link","to","navLink","button","errorCont","link","LoginPage","errorAuth","usePrivate","useEffect","verify","setTimeout","resetPrivateFormError","clearTimeout","section","title","LoginForm","arguments","undefined","setTouched","reduce","acc","key","field","prev"],"sourceRoot":""}