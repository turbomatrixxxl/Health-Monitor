{"version":3,"file":"static/js/948.a04531f8.chunk.js","mappings":"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","sources":["webpack://health-monitor/./src/components/DiaryAddForm/DiaryAddForm.module.css?e0d3","components/DiaryAddForm/DiaryAddForm.jsx","webpack://health-monitor/./src/pages/DiaryPage/DiaryPage.module.css?a519","pages/DiaryPage/DiaryPage.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js","webpack://health-monitor/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputsContainer\":\"DiaryAddForm_inputsContainer__MnraY\",\"input\":\"DiaryAddForm_input__z2hq8\",\"name\":\"DiaryAddForm_name__ocIyW\",\"quantity\":\"DiaryAddForm_quantity__s0RLX\"};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport styles from \"./DiaryAddForm.module.css\";\nimport Button from \"../commonComponents/Button\";\nimport clsx from \"clsx\";\nimport { usePublic } from \"../../hooks/usePublic\";\nimport { fetchProducts } from \"../../redux/public/operationsPublic\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nfunction DiaryAddForm({\n  searchTerm,\n  setSearchTerm,\n  filteredProducts,\n  quantity,\n  setQuantity,\n  handleAddProduct,\n  handleProductsForSelectedDate,\n  date,\n}) {\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\n  const { dispatch } = usePublic();\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.inputsContainer}>\n      <input\n        className={clsx(styles.input, styles.name)}\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        list=\"productList\"\n        placeholder=\"Search product name *\"\n      />\n      <datalist id=\"productList\">\n        {filteredProducts.map((product) => (\n          <option key={product._id} value={product.title}>\n            {\" \"}\n            {/* Use the title */}\n            {product.title}\n          </option>\n        ))}\n      </datalist>\n\n      <input\n        className={clsx(styles.input, styles.quantity)}\n        type=\"number\"\n        min=\"0\"\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value)}\n        placeholder=\"Grams *\"\n        step={50}\n      />\n\n      {!isMobile && (\n        <Button\n          variant=\"plusButton\"\n          handleClick={() => {\n            handleAddProduct();\n            handleProductsForSelectedDate(date);\n          }}\n          disabled={!date || !searchTerm || !quantity}\n        >\n          +\n        </Button>\n      )}\n    </div>\n  );\n}\n\nDiaryAddForm.propTypes = {\n  searchTerm: PropTypes.string,\n  setSearchTerm: PropTypes.func,\n  filteredProducts: PropTypes.array,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  setQuantity: PropTypes.func,\n  handleAddProduct: PropTypes.func,\n  handleProductsForSelectedDate: PropTypes.func,\n  date: PropTypes.string,\n};\n\nexport default DiaryAddForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"closeButton\":\"DiaryPage_closeButton__8Wsmh\",\"closeModal\":\"DiaryPage_closeModal__ukIqj\",\"mobileHeaderCont\":\"DiaryPage_mobileHeaderCont__a7iJL\",\"modalHeader\":\"DiaryPage_modalHeader__dhYqf\",\"logoHeaderContainer\":\"DiaryPage_logoHeaderContainer__2c1f2\",\"mobileSubHeaderCont\":\"DiaryPage_mobileSubHeaderCont__F4J6z\",\"modalLogoutActionCenter\":\"DiaryPage_modalLogoutActionCenter__+SKlj\",\"modalUserLogoutCont\":\"DiaryPage_modalUserLogoutCont__cr6RX\",\"section\":\"DiaryPage_section__oJsWR\",\"calculatorCont\":\"DiaryPage_calculatorCont__Y2AJw\",\"diaryPage\":\"DiaryPage_diaryPage__pKsQy\",\"datePicker\":\"DiaryPage_datePicker__-j9YO\",\"icon\":\"DiaryPage_icon__fwz+6\",\"productList\":\"DiaryPage_productList__6fCMg\",\"productRow\":\"DiaryPage_productRow__OcvNk\",\"right\":\"DiaryPage_right__K-opd\",\"name\":\"DiaryPage_name__+-5vy\",\"quantity\":\"DiaryPage_quantity__41yoN\",\"calories\":\"DiaryPage_calories__i54n4\",\"delete\":\"DiaryPage_delete__pdpiB\",\"noProducts\":\"DiaryPage_noProducts__53aBB\",\"plusButton\":\"DiaryPage_plusButton__StqeW\",\"errorMessage\":\"DiaryPage_errorMessage__BqUBO\",\"leftCont\":\"DiaryPage_leftCont__yMOEt\"};","import React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { fetchProducts } from \"../../redux/public/operationsPublic\";\nimport {\n  addConsumedProductForSpecificDay,\n  deleteConsumedProductForSpecificDay,\n  fetchConsumedProductsForSpecificDay,\n} from \"../../redux/private/operationsPrivate\";\n\nimport { usePublic } from \"../../hooks/usePublic\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport LoginStatistics from \"../../components/LoginStatistics/LoginStatistics\";\nimport Logo from \"../../components/Logo/Logo\";\n\nimport NavLinks from \"../../components/NavLinks/NavLinks\";\n\nimport { FiCalendar } from \"react-icons/fi\";\n\nimport DiaryAddForm from \"../../components/DiaryAddForm/DiaryAddForm\";\nimport Button from \"../../components/commonComponents/Button\";\n\nimport useToggle from \"../../hooks/useToggle\";\nimport Modal from \"../../components/commonComponents/Modal/Modal\";\nimport UserLogout from \"../../components/UserLogout/UserLogout\";\nimport UpdateUser from \"../../components/UpdateUser\";\n\nimport styles from \"./DiaryPage.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nexport default function DiaryPage() {\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n  const { products, dispatch } = usePublic();\n  const { privateDispatch, consumedProducts } = usePrivate();\n\n  const [isDiaryMobileModalVisible, toggleisDiaryMobileModalVisible] =\n    useToggle(false);\n  // console.log(\"consumedProducts:\", consumedProducts);\n\n  useEffect(() => {\n    if (isDiaryMobileModalVisible) {\n      document.body.classList.add(styles.noScroll);\n    } else {\n      document.body.classList.remove(styles.noScroll);\n    }\n\n    const handleEscapeKey = (event) => {\n      if (event.key === \"Escape\") toggleisDiaryMobileModalVisible();\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeKey);\n\n    return () => {\n      document.body.classList.remove(styles.noScroll);\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [isDiaryMobileModalVisible, toggleisDiaryMobileModalVisible]);\n\n  function handleOpenModal() {\n    toggleisDiaryMobileModalVisible();\n  }\n\n  const today = new Date().toISOString().split(\"T\")[0];\n\n  const [date, setDate] = useState(today);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  // console.log(\"date:\", date);\n  // console.log(\"quantity:\", quantity);\n  // console.log(\"searchTerm:\", searchTerm);\n\n  const [userUpdateShown, setUserUpdateShown] = useState(false);\n\n  useEffect(() => {\n    if (products.length === 0) {\n      dispatch(fetchProducts());\n    }\n  }, [dispatch, products]);\n\n  useEffect(() => {\n    privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n  }, [privateDispatch, date]);\n\n  const allProducts = Array.isArray(products.data) ? products.data.flat() : [];\n  const filteredProducts = allProducts.filter((product) =>\n    product.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  // console.log(\"products:\", products);\n\n  // console.log(\"allProducts:\", allProducts);\n\n  // console.log(\"filteredProducts:\", filteredProducts);\n\n  const handleAddProduct = () => {\n    if (searchTerm && quantity) {\n      privateDispatch(\n        addConsumedProductForSpecificDay({\n          product: searchTerm,\n          date,\n          quantity,\n        })\n      );\n      setSearchTerm(\"\");\n      setQuantity(\"\");\n    }\n  };\n\n  const handleDeleteProduct = (product, date) => {\n    const productId = (productTitle) => {\n      const foundProduct = allProducts.find(\n        (item) => item.title === productTitle\n      );\n      // console.log(\"Found product:\", foundProduct);\n\n      if (foundProduct) {\n        // console.log(\"found\");\n        // console.log(foundProduct._id);\n\n        return foundProduct._id; // Return the product's ID\n      }\n      // console.log(\"not found\");\n\n      return null;\n    };\n\n    // console.log('delete');\n\n    const id = productId(product);\n    // console.log(id);\n\n    privateDispatch(\n      deleteConsumedProductForSpecificDay({ productId: id, date })\n    );\n    handleProductsForSelectedDate(date);\n  };\n\n  function handleProductsForSelectedDate(date) {\n    setTimeout(() => {\n      privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n    }, 1000);\n  }\n\n  function formatToDisplayDate(date) {\n    const [year, month, day] = date.split(\"-\");\n    return `${day}.${month}.${year}`;\n  }\n\n  const handleUpdateUser = () => {\n    setUserUpdateShown(true);\n  };\n\n  return (\n    <section className={styles.section}>\n      {isDiaryMobileModalVisible && isMobile && (\n        <div className={styles.modalOverlay}>\n          <div className={styles.modalContent}>\n            <Modal\n              closeButton={styles.closeButton}\n              handleModalClose={toggleisDiaryMobileModalVisible}\n              isModalVisible={isDiaryMobileModalVisible}\n            >\n              {isMobile && (\n                <div className={styles.mobileHeaderCont}>\n                  {userUpdateShown && (\n                    <UpdateUser\n                      theme={\"light\"}\n                      onClose={() => setUserUpdateShown(false)}\n                    />\n                  )}\n                  <header className={styles.modalHeader}>\n                    <Logo className={styles.logoHeaderContainer} />\n                    <NavLinks />\n                  </header>\n                  <div className={styles.mobileSubHeaderCont}>\n                    <button\n                      onClick={toggleisDiaryMobileModalVisible}\n                      className={styles.mobileHeaderExitButton}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"15\"\n                        height=\"9\"\n                        viewBox=\"0 0 15 9\"\n                        fill=\"none\"\n                      >\n                        <path\n                          d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\"\n                          stroke=\"black\"\n                          strokeWidth=\"2\"\n                        />\n                      </svg>\n                    </button>\n                    <div className={styles.modalUserLogoutCont}>\n                      <UserLogout handleUpdateUserClick={handleUpdateUser} />\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div className={styles.modalLogoutActionCenter}>\n                <DiaryAddForm\n                  searchTerm={searchTerm}\n                  setSearchTerm={setSearchTerm}\n                  filteredProducts={filteredProducts}\n                  quantity={quantity}\n                  setQuantity={setQuantity}\n                  handleAddProduct={handleAddProduct}\n                  handleProductsForSelectedDate={handleProductsForSelectedDate}\n                  date={date}\n                />\n\n                <Button\n                  id=\"closeModal\"\n                  handleClick={() => {\n                    toggleisDiaryMobileModalVisible();\n                    handleAddProduct();\n                    handleProductsForSelectedDate(date);\n                  }}\n                >\n                  Add\n                </Button>\n              </div>\n            </Modal>\n          </div>\n        </div>\n      )}\n\n      <div className={styles.calculatorCont}>\n        {isDesktop && (\n          <div className={styles.leftCont}>\n            <Logo />\n            <NavLinks />\n          </div>\n        )}\n\n        <div className={styles.diaryPage}>\n          <div className={styles.datePicker}>\n            <input\n              type=\"date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              placeholder=\"Select Date\"\n              max={new Date().toISOString().split(\"T\")[0]}\n              className=\"custom-date-picker\"\n            />\n            <FiCalendar className={styles.icon} />\n          </div>\n\n          {!isMobile && (\n            <DiaryAddForm\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              filteredProducts={filteredProducts}\n              quantity={quantity}\n              setQuantity={setQuantity}\n              handleAddProduct={handleAddProduct}\n              handleProductsForSelectedDate={handleProductsForSelectedDate}\n              date={date}\n            />\n          )}\n\n          <ul className={styles.productList}>\n            {consumedProducts.length > 0 ? (\n              consumedProducts.map((product, index) => (\n                <li key={index} className={styles.productRow}>\n                  <span className={styles.name}>\n                    {product?.productName\n                      ? product?.productName\n                      : product.product}\n                  </span>\n                  <div className={styles.right}>\n                    <span className={styles.quantity}>{product.quantity}g</span>\n                    <span className={styles.calories}>\n                      {product.calories}\n                      kcal\n                    </span>\n                    <button\n                      className={styles.delete}\n                      onClick={() => {\n                        handleDeleteProduct(product.product, date);\n                      }}\n                    >\n                      X\n                    </button>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <p className={styles.noProducts}>\n                There are no products consumed on the selected date !\n              </p>\n            )}\n          </ul>\n\n          {isMobile && (\n            <Button\n              handleClick={handleOpenModal}\n              className={styles.plusButton}\n              variant=\"plusButton\"\n            >\n              +\n            </Button>\n          )}\n        </div>\n      </div>\n\n      <LoginStatistics day={formatToDisplayDate(date)} />\n    </section>\n  );\n}\n","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n  [selectPublicCalculatorState],\n  (publicCalculatorSlice) => ({\n    height: publicCalculatorSlice.height,\n    age: publicCalculatorSlice.age,\n    currentWeight: publicCalculatorSlice.currentWeight,\n    desiredWeight: publicCalculatorSlice.desiredWeight,\n    bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n  })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectError,\n  selectFormData,\n  selectLoading,\n  selectResult,\n  selectProducts,\n  selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n  const dispatch = useDispatch(); // Add dispatch for triggering actions\n  const formData = useSelector(selectFormData);\n  const isLoading = useSelector(selectLoading);\n  const errorPublic = useSelector(selectError);\n  const result = useSelector(selectResult);\n  const products = useSelector(selectProducts);\n  const product = useSelector(selectProduct);\n\n  return {\n    formData,\n    isLoading,\n    errorPublic,\n    result,\n    products,\n    product,\n    dispatch, // Include dispatch in the returned object\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__bSZ00\",\"statisticCont\":\"LoginStatistics_statisticCont__W4sUJ\",\"resultsToday\":\"LoginStatistics_resultsToday__5XOvn\",\"statisticList\":\"LoginStatistics_statisticList__-K1dG\",\"statisticListItem\":\"LoginStatistics_statisticListItem__jwFY5\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__5hv5z\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__AujTB\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__xTGyK\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__H-Mel\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__2+pc3\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__yyZZY\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__0vXlq\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport UpdateUser from \"../UpdateUser\";\nimport UserLogout from \"../UserLogout/UserLogout\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport styles from \"./LoginStatistics.module.css\";\n\nconst breakpoints = {\n  mobile: \"(max-width: 767px)\",\n  tablet: \"(min-width:768px)\",\n  desktop: \"(min-width:1024px)\",\n};\n\nfunction LoginStatistics({ day }) {\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n  const { user } = useAuth();\n  const { dailyCalorieSummary } = usePrivate();\n\n  const [userUpdateShown, setUserUpdateShown] = useState(false);\n\n  // Validate the format dd-mm-yyyy\n  const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\n  if (!isValidDate) {\n    console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\n  }\n\n  const handleUpdateUser = () => {\n    setUserUpdateShown(true);\n    console.log(\"click !!!\");\n  };\n\n  return (\n    <div className={styles.resultsCont}>\n      {userUpdateShown && (\n        <UpdateUser theme={\"light\"} onClose={() => setUserUpdateShown(false)} />\n      )}\n      {isDesktop && <UserLogout handleUpdateUserClick={handleUpdateUser} />}\n      <div className={styles.statisticSuperCont}>\n        <div className={styles.statisticCont}>\n          <p className={styles.resultsToday}>Summary for {day}</p>\n          <ul className={styles.statisticList}>\n            <li key=\"left\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Left</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.remainingCalories !== 0\n                  ? dailyCalorieSummary.remainingCalories\n                  : \"000\"}{\" \"}\n                kcal\n              </span>\n            </li>\n            <li key=\"consumed\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Consumed</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.totalCaloriesConsumed > 0\n                  ? dailyCalorieSummary.totalCaloriesConsumed\n                  : \"000\"}{\" \"}\n                kcal\n              </span>\n            </li>\n            <li key=\"daily\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>Daily rate</span>\n              <span className={styles.statisticListItemSpan}>\n                {dailyCalorieSummary?.dailyCalorieIntake > 0\n                  ? dailyCalorieSummary.dailyCalorieIntake\n                  : \"000\"}{\" \"}\n                kcal\n              </span>{\" \"}\n            </li>\n            <li key=\"normal\" className={styles.statisticListItem}>\n              <span className={styles.statisticListItemSpan}>n% of normal</span>\n              <span\n                style={{ marginBottom: \"4px\" }}\n                className={styles.statisticListItemSpan}\n              >\n                {dailyCalorieSummary?.percentageCaloriesConsumed > 0\n                  ? dailyCalorieSummary.percentageCaloriesConsumed\n                  : \"0\"}{\" \"}\n                %\n              </span>{\" \"}\n            </li>\n          </ul>\n        </div>\n        <div className={styles.notRecommendedCont}>\n          <p className={styles.notRecommendedTitle}>Food not recommended</p>\n          {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n            <ul className={styles.notRecommendedList}>\n              {user.dietaryInfo.restrictedAliments.map((aliment) => (\n                <li\n                  key={aliment?._id}\n                  className={styles.notRecommendedListItem}\n                >\n                  {aliment.title}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className={styles.notRecommendedEmpty}>\n              Your diet will be displayed here\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLoginStatistics.propTypes = {\n  day: PropTypes.string.isRequired,\n};\n\nexport default LoginStatistics;\n"],"names":["breakpoints","_ref","searchTerm","setSearchTerm","filteredProducts","quantity","setQuantity","handleAddProduct","handleProductsForSelectedDate","date","isMobile","useMediaQuery","query","dispatch","usePublic","useEffect","fetchProducts","_jsxs","className","styles","children","_jsx","clsx","type","value","onChange","e","target","list","placeholder","id","map","product","title","_id","min","step","Button","variant","handleClick","disabled","mobile","tablet","desktop","DiaryPage","isDesktop","products","privateDispatch","consumedProducts","usePrivate","isDiaryMobileModalVisible","toggleisDiaryMobileModalVisible","useToggle","document","body","classList","add","noScroll","remove","handleEscapeKey","event","key","addEventListener","removeEventListener","today","Date","toISOString","split","setDate","useState","userUpdateShown","setUserUpdateShown","length","fetchConsumedProductsForSpecificDay","allProducts","Array","isArray","data","flat","filter","toLowerCase","includes","addConsumedProductForSpecificDay","setTimeout","section","modalOverlay","modalContent","Modal","closeButton","handleModalClose","isModalVisible","mobileHeaderCont","UpdateUser","theme","onClose","modalHeader","Logo","logoHeaderContainer","NavLinks","mobileSubHeaderCont","onClick","mobileHeaderExitButton","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","modalUserLogoutCont","UserLogout","handleUpdateUserClick","handleUpdateUser","modalLogoutActionCenter","DiaryAddForm","calculatorCont","leftCont","diaryPage","datePicker","max","FiCalendar","icon","productList","index","productRow","name","productName","right","calories","delete","handleDeleteProduct","productTitle","foundProduct","find","item","productId","deleteConsumedProductForSpecificDay","noProducts","plusButton","LoginStatistics","day","year","month","concat","formatToDisplayDate","selectFormData","createSelector","state","publicCalculatorSlice","age","currentWeight","desiredWeight","bloodGroupIndex","selectResult","result","selectLoading","loading","selectError","error","selectProducts","selectProduct","useDispatch","formData","useSelector","isLoading","errorPublic","_user$dietaryInfo","_user$dietaryInfo$res","user","useAuth","dailyCalorieSummary","test","console","log","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","style","marginBottom","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","aliment"],"sourceRoot":""}