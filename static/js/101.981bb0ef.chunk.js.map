{"version":3,"file":"static/js/101.981bb0ef.chunk.js","mappings":"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","sources":["hooks/useFormValidation.js","webpack://health-monitor/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/validateLogin.js","webpack://health-monitor/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://health-monitor/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst useFormValidation = (initialState, validateFn) => {\n  const [fields, setFields] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const validateFields = () => {\n    const newErrors = validateFn(fields);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return {\n    fields,\n    setFields,\n    errors,\n    validateFields,\n  };\n};\n\nexport default useFormValidation;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n  min = 0,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        min={min}\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  min: PropTypes.number,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { useState } from \"react\";\n\nconst useFormTouched = (initialState = {}) => {\n  const [touched, setTouched] = useState(\n    Object.keys(initialState).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {})\n  );\n\n  const handleBlur = (field) => () => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  return {\n    touched,\n    handleBlur,\n  };\n};\n\nexport default useFormTouched;\n","const validateLogin = (fields) => {\n    const errors = {};\n    if (!fields.email) {\n        errors.email = \"Email is required\";\n    }\n    if (!fields.password) {\n        errors.password = \"Password is required\";\n    }\n    return errors;\n};\n\nexport default validateLogin;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"inputIcon\":\"LoginForm_inputIcon__GDKJZ\",\"inputError\":\"LoginForm_inputError__cPf0D\",\"eyeIcon\":\"LoginForm_eyeIcon__UzGhv\",\"errorCont\":\"LoginForm_errorCont__MHL+1\",\"error\":\"LoginForm_error__012y+\",\"buttonsContainer\":\"LoginForm_buttonsContainer__bkTpy\",\"button\":\"LoginForm_button__LodJg\",\"navLink\":\"LoginForm_navLink__gt1T+\"};","import React, { useState } from \"react\";\nimport { logIn } from \"../../redux/auth/operationsAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\nimport useToggle from \"../../hooks/useToggle\";\nimport useFormValidation from \"../../hooks/useFormValidation\";\nimport validateLogin from \"../../hooks/validateLogin\";\nimport useFormTouched from \"../../hooks/useFormTouched\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport clsx from \"clsx\";\n\nimport { toast } from \"react-toastify\";\n\nimport styles from \"./LoginForm.module.css\";\n\nfunction LoginForm() {\n  const { fields, setFields, validateFields } = useFormValidation(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    validateLogin\n  );\n\n  const { user, isLoggedIn } = useAuth();\n\n  const { touched, handleBlur } = useFormTouched(fields);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [type, setType] = useState(\"password\");\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateFields()) return;\n\n    try {\n      await dispatch(logIn(fields)).unwrap();\n\n      toast.success(\"Login successful!\");\n    } catch (error) {\n      setFields((prevFields) => ({\n        ...prevFields,\n        errorMessage: setErrorMessage(\n          \"You have entered an invalid username or password.\"\n        ),\n      }));\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faEnvelope} className={styles.inputIcon} />\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type=\"email\"\n              value={fields.email}\n              handleChange={(e) => {\n                setFields({ ...fields, email: e.target.value });\n              }}\n              handleBlur={handleBlur(\"email\")}\n              placeholder=\"Email *\"\n              required={true}\n            />\n          </div>\n          {touched.email && !fields.email && (\n            <p className={styles.inputError}>Required</p>\n          )}\n        </div>\n        <div styles={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\n\n            {eyeVisible && (\n              <VscEye\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"text\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            {closedEyeVisible && (\n              <VscEyeClosed\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"password\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type={type}\n              value={fields.password}\n              handleChange={(e) => {\n                setFields({ ...fields, password: e.target.value });\n              }}\n              handleBlur={handleBlur(\"password\")}\n              placeholder=\"Password\"\n              required={true}\n            />\n          </div>\n          {touched.password && fields.password.length < 6 && (\n            <p className={styles.inputError}>\n              Password must be at least 6 characters!\n            </p>\n          )}\n        </div>\n        <div className={styles.buttonsContainer}>\n          <Button variant=\"colored\" type=\"submit\">\n            Log in\n          </Button>\n          {/* {errorMessage && <p className={styles.error}>{errorMessage}</p>} */}\n          <Link to=\"/register\" className={styles.navLink}>\n            <Button className={styles.button} type=\"button\">\n              Register\n            </Button>\n          </Link>{\" \"}\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n        </div>\n        {user !== null && !isLoggedIn && (\n          <div className={styles.errorCont}>\n            <p className={styles.error}>\n              It seems that your email is not verified! Please click the Verify\n              button to be redirected to verify email page !\n            </p>\n            <Button>\n              <Link\n                to=\"/verify-email\"\n                className={clsx(styles.navLink, styles.link)}\n              >\n                Verify\n              </Link>\n            </Button>\n          </div>\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__pqfrr\",\"title\":\"LoginPage_title__RBt-o\",\"errorMessage\":\"LoginPage_errorMessage__PaVZ1\"};","import React, { useEffect } from \"react\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport styles from \"./LoginPage.module.css\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\nimport { useDispatch } from \"react-redux\";\nimport { resetPrivateFormError } from \"../../redux/private/privateSlice\";\n\nexport default function LoginPage() {\n  const { isLoggedIn, user, errorAuth } = useAuth();\n  const { error } = usePrivate();\n\n  const dispatch = useDispatch();\n\n  // Show a toast notification when login is successful\n  useEffect(() => {\n    if (isLoggedIn || user?.verify) {\n      toast.success(\"Login successful!\");\n    }\n  }, [isLoggedIn, user?.verify]); // Dependency array ensures the effect runs when these values change.\n\n  useEffect(() => {\n    if (error === \"Not authorized\") {\n      setTimeout(() => {\n        dispatch(resetPrivateFormError());\n      }, 5000);\n    }\n    return () => {\n      clearTimeout();\n    };\n  }, [dispatch, error]);\n\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>Log In</h2>\n\n      {(error === \"Not authorized\" || errorAuth) && (\n        <div className={styles.errorMessage}>\n          <p>\n            For reasons of personal data security, your authorization has\n            expired. If you want to continue, please log in again. Thank you for\n            understanding!\n          </p>\n        </div>\n      )}\n\n      <LoginForm />\n      <ToastContainer />\n    </section>\n  );\n}\n"],"names":["useFormValidation","initialState","validateFn","fields","setFields","useState","errors","setErrors","validateFields","newErrors","Object","keys","length","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","min","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","arguments","undefined","touched","setTouched","reduce","acc","key","field","prev","_objectSpread","email","password","validateLogin","user","isLoggedIn","useAuth","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","_Fragment","_jsxs","onSubmit","async","e","preventDefault","logIn","unwrap","toast","success","error","prevFields","form","inputWrapper","FontAwesomeIcon","icon","faEnvelope","inputIcon","target","inputError","faLock","VscEye","onClick","size","eyeIcon","VscEyeClosed","buttonsContainer","Button","Link","to","navLink","button","errorCont","link","LoginPage","errorAuth","usePrivate","useEffect","verify","setTimeout","resetPrivateFormError","clearTimeout","section","title","LoginForm","ToastContainer"],"sourceRoot":""}