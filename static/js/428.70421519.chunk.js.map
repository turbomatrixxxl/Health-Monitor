{"version":3,"file":"static/js/428.70421519.chunk.js","mappings":"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","sources":["Utils/calculateNominalBPAndPulse.js","Utils/calculateIdealWeight.js","images/icons/weight-svgrepo-com.svg","images/icons/sphygmomanometer-blood-pressure-gauge-svgrepo-com.svg","images/icons/gen-heart-rate-svgrepo-com.svg","webpack://health-monitor/./src/pages/HealthMetricsPage/HealthMetricsPage.module.css?541e","pages/HealthMetricsPage/index.js","pages/HealthMetricsPage/HealthMetricsPage.jsx"],"sourcesContent":["/**\n * Calculate nominal heart rate and blood pressure with age- and weight-adjusted limits\n * @param {number} age - age in years\n * @param {number} weight - weight in kg\n * @returns {object} - { heartRate, heartRateMin, heartRateMax, systolic, systolicMin, systolicMax, diastolic, diastolicMin, diastolicMax }\n */\nexport default function calculateNominalBPAndPulse(age, weight) {\n  if (!age) {\n    return 0;\n  }\n\n  // Puls nominal: 70 ± 10, ajustat cu varsta\n  const heartRate = Math.round(70 + (age - 30) * 0.3);\n  const heartRateMin = Math.round(heartRate - 10);\n  const heartRateMax = Math.round(heartRate + 10);\n\n  // Tensiune arterială nominală: sistolic 110 ± 10, diastolic 70 ± 5, ajustate cu vârsta\n  const systolic = Math.round(110 + age * 0.5);\n  const systolicMin = Math.round(systolic - 10);\n  const systolicMax = Math.round(systolic + 10);\n\n  const diastolic = Math.round(70 + age * 0.2);\n  const diastolicMin = Math.round(diastolic - 5);\n  const diastolicMax = Math.round(diastolic + 5);\n\n  // Ajustare ușoară în funcție de greutate\n  let hr = heartRate,\n    hrMin = heartRateMin,\n    hrMax = heartRateMax;\n  let sys = systolic,\n    sysMin = systolicMin,\n    sysMax = systolicMax;\n  let dia = diastolic,\n    diaMin = diastolicMin,\n    diaMax = diastolicMax;\n\n  if (weight) {\n    if (weight > 80) {\n      hr += 2;\n      hrMin += 2;\n      hrMax += 2;\n      sys += 3;\n      sysMin += 3;\n      sysMax += 3;\n      dia += 2;\n      diaMin += 2;\n      diaMax += 2;\n    } else if (weight < 60) {\n      hr -= 2;\n      hrMin -= 2;\n      hrMax -= 2;\n      sys -= 3;\n      sysMin -= 3;\n      sysMax -= 3;\n      dia -= 2;\n      diaMin -= 2;\n      diaMax -= 2;\n    }\n  }\n\n  return {\n    heartRate: hr,\n    heartRateMin: hrMin,\n    heartRateMax: hrMax,\n    systolic: sys,\n    systolicMin: sysMin,\n    systolicMax: sysMax,\n    diastolic: dia,\n    diastolicMin: diaMin,\n    diastolicMax: diaMax,\n  };\n}\n\n// const noAge = calculateBPAndPulse();\n// console.log(\"noAge :\", noAge);\n","// calculateIdealWeight.js\nexport default function calculateIdealWeight(age, height) {\n  if (!age || !height || height <= 0) {\n    return \"Invalid input\";\n  }\n\n  const heightM = height / 100;\n\n  // Maxim sănătos (IMC = 24.9)\n  const maxWeight = 24.9 * (heightM * heightM);\n\n  return Number(maxWeight.toFixed(1)); // rotunjit la o zecimală\n}\n","var _path, _path2, _path3;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgWeightSvgrepoCom(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M11.7839 40L36.216 40C37.2775 40 38.1541 39.1708 38.213 38.1109L39.7685 10.1109C39.8322 8.96454 38.9198 8 37.7716 8L10.2284 8C9.08021 8 8.16778 8.96454 8.23146 10.1109L9.78702 38.1109C9.8459 39.1708 10.7225 40 11.7839 40ZM36.216 42C38.339 42 40.0921 40.3415 40.2099 38.2219L41.7654 10.2219C41.8928 7.92908 40.0679 6 37.7716 6L10.2284 6C7.93204 6 6.10717 7.92907 6.23455 10.2219L7.7901 38.2219C7.90786 40.3415 9.661 42 11.7839 42L36.216 42Z\",\n    fill: \"#333333\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M34.1955 17.4057C33.1476 16.2921 31.9212 15.3544 30.5625 14.6334C28.611 13.5977 26.442 13.0387 24.2329 13.0019C22.0239 12.9652 19.8375 13.4518 17.8526 14.4219C16.4707 15.0973 15.2137 15.9937 14.1293 17.0718L18.7665 20.5603C18.7816 20.5652 18.8205 20.5727 18.8976 20.5657C19.0544 20.5516 19.2744 20.4796 19.4875 20.3354C19.799 20.1244 20.1259 19.935 20.4658 19.7688C21.607 19.2111 22.8639 18.9314 24.1339 18.9525C25.4039 18.9736 26.6509 19.295 27.7728 19.8904C28.1071 20.0678 28.4274 20.268 28.7318 20.4892C28.9399 20.6405 29.1574 20.7198 29.3137 20.739C29.3905 20.7485 29.4297 20.7423 29.4448 20.7379L34.1955 17.4057ZM29.4525 20.7347C29.4527 20.7349 29.4506 20.7362 29.4455 20.7377C29.4498 20.7352 29.4523 20.7344 29.4525 20.7347ZM18.759 20.5567C18.7592 20.5565 18.7617 20.5574 18.766 20.5601C18.7609 20.5583 18.7587 20.557 18.759 20.5567ZM35.8512 16.2506C36.5933 17.0688 36.3659 18.3263 35.4616 18.9606L30.5893 22.3781C29.685 23.0124 28.4495 22.7564 27.556 22.1071C27.3273 21.9408 27.0865 21.7904 26.8353 21.6571C25.9921 21.2096 25.055 20.9681 24.1006 20.9522C23.1462 20.9363 22.2016 21.1466 21.344 21.5657C21.0885 21.6906 20.8429 21.8329 20.6088 21.9915C19.6942 22.6108 18.4508 22.8255 17.5682 22.1615L12.8123 18.5837C11.9296 17.9197 11.7441 16.6553 12.513 15.8623C13.7981 14.5369 15.3066 13.4401 16.9744 12.625C19.2429 11.5163 21.7416 10.9602 24.2662 11.0022C26.7908 11.0442 29.2697 11.6831 31.5 12.8667C33.1397 13.7368 34.6109 14.8832 35.8512 16.2506Z\",\n    fill: \"#333333\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.1821 15.5719C27.5446 15.1552 28.1762 15.1112 28.5929 15.4736C29.0097 15.8361 29.0537 16.4677 28.6912 16.8844L25.9448 20.0423C25.5824 20.459 24.9507 20.503 24.534 20.1406C24.1173 19.7781 24.0733 19.1465 24.4357 18.7298L27.1821 15.5719Z\",\n    fill: \"#333333\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgWeightSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/weight-svgrepo-com.2e40d712dfce323eb57b469f1671e07a.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path0, _path1, _path10, _path11, _path12, _path13;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgSphygmomanometerBloodPressureGaugeSvgrepoCom(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 507.6 507.6\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFD54F\"\n    },\n    d: \"M313.8,360.8H371c34.8,0,64,30,64,66.4c0,34-28.4,62.4-62.4,62.4c-34.4,0-62.8-28-62.8-62V268.8h-12 v158.8c0,40.8,33.6,74,74.8,74c40.4,0,74.8-33.6,74.8-74.4c0-42.8-34.4-78.4-75.2-78.4h-58.4V360.8z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#BCAAA4\"\n    },\n    d: \"M329.8,260v-6.8h-52v6.8c0,3.2,4.8,9.2,8,9.2h10h16h10.8C325.8,269.2,329.8,263.6,329.8,260z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#BCAAA4\"\n    },\n    d: \"M118.6,298c-32,0-58,26-58,58s26,58,58,58s58-26,58-58S150.2,298,118.6,298z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FF7043\"\n    },\n    d: \"M112.2,97.6h-4.4c-12.4,24-35.6,75.2-35.6,92.8c0,24.4,18.8,44,42,44s42-19.6,42-44 c0-16.8-15.2-64.8-28.8-92.8h-1.6C126.2,97.6,112.2,97.6,112.2,97.6z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M106.2,78c0-2.4,0-4.8,0.4-7.2C106.2,73.6,106.2,75.6,106.2,78z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M107,68.4c0-0.8,0.4-1.6,0.4-2.8C107.4,66.4,107,67.6,107,68.4z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFD54F\"\n    },\n    d: \"M236.6,5.6h-48.8c-42.8,0-78,32-78,72.4v16.4h12V78c0-34,29.6-60.4,66-60.4h48.8 c37.6,0,63.6,31.6,63.6,59.6v0.4h12C311.8,37.6,276.6,5.6,236.6,5.6z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M108.2,96.4L108.2,96.4L108.2,96.4L108.2,96.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M106.2,94.4v1.2v-0.4C106.2,94.8,106.2,94.8,106.2,94.4z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 110.2,\n    y: 90.4,\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    width: 12,\n    height: 2.8\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M108.2,96.4L108.2,96.4c-0.8,0-1.2-0.4-1.6-1.2v0.4v0.8L108.2,96.4L108.2,96.4z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#EEEEEE\"\n    },\n    d: \"M341.8,81.6h-78c-7.2,0-12.8,4-13.6,16h107.2C355.4,85.6,349.4,81.6,341.8,81.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M245.8,234v2c0,8.8,7.2,16.8,16,16.8h2C254.2,253.2,245.8,244,245.8,234z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#B2DFDB\"\n    },\n    d: \"M331.8,247.2c1.2,0,2-2,2,2h10c7.2,0,12.8-4,13.6-16H250.2c0.8,12,6.8,16,13.6,16h10c0-4,0.8-2,2-2 s2-2,2,2h52C329.8,245.2,330.6,247.2,331.8,247.2z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 249.8,\n    y: 97.6,\n    style: {\n      fill: \"#E0F2F1\"\n    },\n    width: 107.6,\n    height: 135.6\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M331.8,246c-1.2,0-2,0.8-2,2h4C333.8,247.2,333,246,331.8,246z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M275.8,246c-1.2,0-2,0.8-2,2h4C277.8,247.2,277,246,275.8,246z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#E0E0E0\"\n    },\n    d: \"M134.2,321.6c-4.8-2.4-10.4-3.6-15.6-3.6C97.8,318,81,334.8,81,355.6s16.8,37.6,37.6,37.6 s37.6-16.8,37.6-37.6c0-5.2-1.2-10.4-3.2-14.8c-0.4-0.8,0-1.6,0.4-2.4l-17.2-17.6C135.8,322,135,322,134.2,321.6z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 181.8,\n    y: 348.8,\n    style: {\n      fill: \"#F9A825\"\n    },\n    width: 111.6,\n    height: 12\n  }), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M372.6,507.6c-44.4,0-80.8-36-80.8-80V268.8c0-2.4,1.6-4,4-4s4,1.6,4,4v158.8c0,39.6,32.8,72,72.8,72 c39.2,0,72.8-33.2,72.8-72.4c0-42-32.8-76.4-73.2-76.4h-58.4c-2.4,0-4-1.6-4-4s1.6-4,4-4h58c44.8,0,81.2,38,81.2,84.4 C453,471.6,417,507.6,372.6,507.6z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M372.6,491.6c-35.2,0-65.2-29.2-65.2-64V268.8c0-2.4,1.6-4,4-4s4,1.6,4,4v90H371c35.6,0,65.6,31.2,65.6,68.4 C437,462.8,408.2,491.6,372.6,491.6z M315.8,366.8v60.8c0,30.4,26,56,57.2,56c30.4,0,56.4-25.6,56.4-56.4 c0-32.8-26.4-60.4-57.6-60.4H315.8z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M293.8,350.8h-116c-2.4,0-4-1.6-4-4s1.6-4,4-4h115.6c2.4,0,4,1.6,4,4S295.8,350.8,293.8,350.8z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M293.8,366.8h-116c-2.4,0-4-1.6-4-4s1.6-4,4-4h115.6c2.4,0,4,1.6,4,4S295.8,366.8,293.8,366.8z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.6,420c-35.2,0-64-28.8-64-64s28.8-64,64-64s64,28.8,64,64C182.2,391.2,153.8,420,118.6,420z M118.6,300 c-30.8,0-56,25.2-56,56s25.2,56,56,56s56-25.2,56-56C174.2,325.2,149.4,300,118.6,300z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.6,240c-26.4,0-48-22.4-48-50.4c0-19.2,22.8-67.6,36.4-94.8c0.8-2,3.2-2.8,5.2-1.6c2,0.8,2.8,3.2,1.6,5.2 C87,143.6,74.2,177.2,74.2,190c0,23.2,18,42.4,40,42.4s40-18.8,40-42.4c0-12.8-12.8-46-35.6-91.6c-0.8-2,0-4.4,1.6-5.2 c2-0.8,4.4,0,5.2,1.6c13.6,27.2,36.4,76,36.4,94.8C162.6,217.6,141,240,114.6,240z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M124.2,99.6h-16c-2.4,0-4-1.6-4-4V78.4c0-43.2,37.6-78.4,84-78.4H237c43.6,0,81.6,36.4,81.6,78c0,2.4-1.6,4-4,4s-4-1.6-4-4 c0-37.2-34.4-70-73.6-70h-48.8c-42,0-76,31.6-76,70.4v13.2h8V78.4c0-34.4,30.4-62.4,68-62.4H237c38.8,0,65.6,32.4,65.6,61.2 c0,2.4-1.6,4-4,4s-4-1.6-4-4C294.6,52,269.8,24,237,24h-48.8c-33.2,0-60,24.4-60,54.4v17.2C128.2,97.6,126.2,99.6,124.2,99.6z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M343.8,255.2h-80c-11.2,0-20-8.8-20-20V95.6c0-11.2,8.8-20,20-20h80c11.2,0,20,8.8,20,20v139.6 C363.8,246,354.6,255.2,343.8,255.2z M263.8,83.6c-6.4,0-12,5.2-12,12v139.6c0,6.4,5.2,12,12,12h80c6.4,0,12-5.2,12-12V95.6 c0-6.4-5.2-12-12-12H263.8z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M324.2,271.2h-42.4c-6.4,0-10-4-10-11.2v-6.8c0-2.4,1.6-4,4-4s4,1.6,4,4v6.8c0,3.2,0.8,3.2,2,3.2h42.4 c3.2,0,3.2-1.6,3.2-3.2v-6.8c0-2.4,1.6-4,4-4s4,1.6,4,4v6.8C335.8,266.4,331,271.2,324.2,271.2z\"\n  })), _path0 || (_path0 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.6,399.6C94.6,399.6,75,380,75,356s19.6-43.6,43.6-43.6c6.4,0,12.4,1.2,18,4c2,0.8,2.8,3.2,2,5.2s-3.2,2.8-5.2,2 c-4.8-2-9.6-3.2-14.8-3.2C99,320.4,83,336.4,83,356s16,35.6,35.6,35.6s35.6-16,35.6-35.6c0-4.8-0.8-9.6-2.8-14c-0.8-2,0-4.4,2-5.2 c2-0.8,4.4,0,5.2,2c2.4,5.6,3.6,11.2,3.6,17.2C162.2,380,142.6,399.6,118.6,399.6z\"\n  })), _path1 || (_path1 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.2,372.8c-2.4,0-4-1.6-4-4v-24c0-2.4,1.6-4,4-4s4,1.6,4,4v24C124.2,371.2,122.2,372.8,120.2,372.8z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M321.8,99.6h-72c-2.4,0-4-1.6-4-4s1.6-4,4-4h72c2.4,0,4,1.6,4,4S323.8,99.6,321.8,99.6z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.8,99.6h-4c-2.4,0-4-1.6-4-4s1.6-4,4-4h4c2.4,0,4,1.6,4,4S359.8,99.6,357.8,99.6z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M321.8,239.2h-72c-2.4,0-4-1.6-4-4s1.6-4,4-4h72c2.4,0,4,1.6,4,4S323.8,239.2,321.8,239.2z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.8,239.2h-8c-2.4,0-4-1.6-4-4s1.6-4,4-4h8c2.4,0,4,1.6,4,4S359.8,239.2,357.8,239.2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSphygmomanometerBloodPressureGaugeSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/sphygmomanometer-blood-pressure-gauge-svgrepo-com.45c6a7337dede783fddd033e1618b145.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgGenHeartRateSvgrepoCom(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 64 64\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"gen-heart-rate\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"General\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SLICES-64px\",\n    transform: \"translate(-180.000000, 0.000000)\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ICONS\",\n    transform: \"translate(-175.000000, 5.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"gen-heart-rate\",\n    transform: \"translate(180.000000, 6.000000)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0001,5.9995 L28.1011,4.1005 C33.5671,-1.3665 42.4331,-1.3665 47.8991,4.1005 C53.3671,9.5685 53.3661,18.4325 47.8991,23.8985 L26.0001,45.9995 L4.1011,23.8985 C-1.3659,18.4325 -1.3669,9.5685 4.1011,4.1005 C9.5671,-1.3665 18.4331,-1.3665 23.8991,4.1005 L26.0001,5.9995 Z\",\n    id: \"Fill-249\",\n    fill: \"#F16963\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0001,5.9995 L28.1011,4.1005 C33.5671,-1.3665 42.4331,-1.3665 47.8991,4.1005 C53.3671,9.5685 53.3661,18.4325 47.8991,23.8985 L26.0001,45.9995 L4.1011,23.8985 C-1.3659,18.4325 -1.3669,9.5685 4.1011,4.1005 C9.5671,-1.3665 18.4331,-1.3665 23.8991,4.1005 L26.0001,5.9995 Z\",\n    id: \"Stroke-250\",\n    stroke: \"#BE3A37\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    id: \"Stroke-251\",\n    stroke: \"#BE3A37\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    points: \"16.0001 23.9995 23.0001 23.9995 26.0001 11.9995 31.0001 33.9995 35.0001 19.9995 37.0001 23.9995 52.0001 23.9995\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGenHeartRateSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/gen-heart-rate-svgrepo-com.69a828d7c44136d6ae22f649a97feaf9.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"HealthMetricsPage_cont__f60gW\",\"leftSideCont\":\"HealthMetricsPage_leftSideCont__0hGRW\",\"rightSideCont\":\"HealthMetricsPage_rightSideCont__8e2W0\",\"leftSideElementsCont\":\"HealthMetricsPage_leftSideElementsCont__rHCZs\",\"title\":\"HealthMetricsPage_title__dQJc4\",\"leftSideElementCont\":\"HealthMetricsPage_leftSideElementCont__StRoL\",\"iconContainer\":\"HealthMetricsPage_iconContainer__X-Bjn\",\"icon\":\"HealthMetricsPage_icon__ooQJi\",\"weightIcon\":\"HealthMetricsPage_weightIcon__fE0uz\",\"bloodIcon\":\"HealthMetricsPage_bloodIcon__DAcZF\",\"heartIcon\":\"HealthMetricsPage_heartIcon__ZvtWT\",\"iconName\":\"HealthMetricsPage_iconName__ONm-7\",\"iconData\":\"HealthMetricsPage_iconData__usMrg\",\"hasData\":\"HealthMetricsPage_hasData__I4cf7\",\"leftSideNormalMetrixCont\":\"HealthMetricsPage_leftSideNormalMetrixCont__ZAfdd\",\"metrixTitle\":\"HealthMetricsPage_metrixTitle__FVGPo\",\"addSleepCont\":\"HealthMetricsPage_addSleepCont__ZNu3D\",\"rightSideDate\":\"HealthMetricsPage_rightSideDate__uxZMp\",\"dateWrapper\":\"HealthMetricsPage_dateWrapper__nHd2o\",\"paramInput\":\"HealthMetricsPage_paramInput__z5vXu\",\"rightSideDateP\":\"HealthMetricsPage_rightSideDateP__sZxXg\",\"fromToCont\":\"HealthMetricsPage_fromToCont__-CAVX\",\"fromToTitle\":\"HealthMetricsPage_fromToTitle__HwJ1W\",\"fromExercise\":\"HealthMetricsPage_fromExercise__jsrEU\",\"from\":\"HealthMetricsPage_from__1M4u9\",\"rem\":\"HealthMetricsPage_rem__BH+ZQ\",\"lineRowCont\":\"HealthMetricsPage_lineRowCont__pFotU\",\"lineRow\":\"HealthMetricsPage_lineRow__3TQvs\",\"minutes\":\"HealthMetricsPage_minutes__TbpSo\",\"date\":\"HealthMetricsPage_date__puXPm\",\"timeInput\":\"HealthMetricsPage_timeInput__32kvw\",\"removeBtn\":\"HealthMetricsPage_removeBtn__NbIan\",\"dash\":\"HealthMetricsPage_dash__4omDs\"};","import HealthMetricsPage from \"./HealthMetricsPage\";\n\nexport default HealthMetricsPage;\n","import React, { useState } from \"react\";\n\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport calculateIdealWeight from \"../../Utils/calculateIdealWeight\";\nimport calculateNominalBPAndPulse from \"../../Utils/calculateNominalBPAndPulse\";\n\nimport clsx from \"clsx\";\n\nimport weightSvg from \"../../images/icons/weight-svgrepo-com.svg\";\nimport bloodPressureSvg2 from \"../../images/icons/sphygmomanometer-blood-pressure-gauge-svgrepo-com.svg\";\nimport heartRateSvg from \"../../images/icons/gen-heart-rate-svgrepo-com.svg\";\n\nimport styles from \"./HealthMetricsPage.module.css\";\nimport { setPrivateFormData } from \"../../redux/private/privateSlice\";\n\nimport { fetchPrivateCalculationData } from \"../../redux/private/operationsPrivate\";\n\nexport default function HealthMetricsPage() {\n  const { user, privateFormData = {}, privateDispatch } = usePrivate();\n\n  // useEffect(() => {\n  //   console.log(\"privateFormData has changed:\", privateFormData);\n  // }, [privateFormData]);\n\n  const name = user?.username ?? user?.name ?? \"User\";\n  const age = user?.age ?? 0;\n  const height = user?.height ?? 0;\n  const weightPrivate = user?.weight ?? 0;\n\n  const condition = age > 0 && height > 0 && weightPrivate > 0;\n\n  const heartsMetrics = calculateNominalBPAndPulse(age, weightPrivate);\n  const {\n    heartRate,\n    systolic,\n    diastolic,\n    heartRateMin,\n    heartRateMax,\n    systolicMin,\n    systolicMax,\n    diastolicMin,\n    diastolicMax,\n  } = heartsMetrics;\n\n  const now = new Date();\n  const today = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(\n    2,\n    \"0\"\n  )}-${String(now.getDate()).padStart(2, \"0\")}`;\n\n  const [filterDate, setFilterDate] = useState(today);\n\n  const nowTime = now.toTimeString().slice(0, 8);\n  const nowDate = now.toLocaleDateString(\"en-GB\", {\n    day: \"2-digit\",\n    month: \"short\", // prescurtat: Jan, Feb, Mar\n    year: \"numeric\",\n  });\n  // console.log(\"nowDate :\", nowDate);\n  // console.log(\"nowTime :\", nowTime);\n\n  const [line, setLine] = useState({\n    date: nowDate,\n    hour: nowTime,\n    weight: weightPrivate ?? 0,\n    systolic: 0,\n    diastolic: 0,\n    heartRate: 0,\n  });\n\n  const sysHi = line?.systolic > systolicMax;\n  const sysLo = line?.systolic < systolicMin;\n  const diaHi = line?.diastolic > diastolicMax;\n  const diaLo = line?.diastolic < diastolicMin;\n  const pulseHi = line?.heartRate > heartRateMax;\n  const pulseLo = line?.heartRate < heartRateMin;\n\n  // console.log(\"line :\", line);\n\n  const updateLine = (field, value) => {\n    const newLine = { ...line };\n    newLine[field] = value;\n\n    setLine(newLine);\n  };\n\n  //  const [lineRecords, setLineRecords] = useState({\n  //    date: nowDate,\n  //    hour: nowTime,\n  //    weight: weight ?? 0,\n  //    systolic: 0,\n  //    diastolic: 0,\n  //    heartRate: 0,\n  //  });\n\n  const lineRecords = {\n    date: nowDate,\n    hour: nowTime,\n    weight: weightPrivate ?? 0,\n    systolic: 0,\n    diastolic: 0,\n    heartRate: 0,\n  };\n\n  //  const handleSubmit = (formData) => {\n  //     privateDispatch(fetchPrivateCalculationData(formData));\n  //   };\n\n  function handleSet(value) {\n    setLine({ ...line, date: nowDate, hour: nowTime });\n    const newWeight = line?.weight;\n    // console.log(\"newWeight :\", newWeight);\n\n    privateDispatch(setPrivateFormData({ name: \"currentWeight\", value }));\n\n    privateDispatch(\n      fetchPrivateCalculationData({\n        ...privateFormData,\n        currentWeight: newWeight,\n      })\n    );\n  }\n\n  return (\n    <div className={styles.cont}>\n      <div className={styles.leftSideCont}>\n        <h1 className={styles.title}>Health Metrics</h1>\n        <div className={styles.leftSideElementsCont}>\n          <div className={clsx(styles.leftSideElementCont, styles.weightIcon)}>\n            <div className={styles.iconContainer}>\n              <img\n                src={weightSvg}\n                alt=\"Weight Icon\"\n                className={clsx(styles.icon)}\n              />\n              <h2 style={{ color: \"blue\" }} className={clsx(styles.iconName)}>\n                Weight\n              </h2>\n            </div>\n            <p\n              className={clsx(\n                styles.iconData,\n                user?.weight ? styles.hasData : null\n              )}\n            >\n              {line?.weight ? `${line.weight} kg` : \"No data !\"}\n            </p>\n          </div>\n          <div className={clsx(styles.leftSideElementCont, styles.bloodIcon)}>\n            <div className={styles.iconContainer}>\n              <img\n                src={bloodPressureSvg2}\n                alt=\"Blood pressure Icon\"\n                className={clsx(styles.icon)}\n              />\n              <h2\n                style={{ color: \"forestgreen\" }}\n                className={clsx(styles.iconName)}\n              >\n                Blood Pressure\n              </h2>\n            </div>\n            <p\n              className={clsx(\n                styles.iconData,\n                line?.systolic && line?.diastolic ? styles.hasData : null\n              )}\n            >\n              {line?.systolic && line?.diastolic\n                ? `${line?.systolic}/${line?.diastolic} mmHg`\n                : \"No data !\"}\n            </p>\n          </div>\n          <div className={clsx(styles.leftSideElementCont, styles.heartIcon)}>\n            <div className={styles.iconContainer}>\n              <img\n                src={heartRateSvg}\n                alt=\"Heart rate Icon\"\n                className={clsx(styles.icon)}\n              />\n              <h2 style={{ color: \"red\" }} className={clsx(styles.iconName)}>\n                Heart Rate\n              </h2>\n            </div>\n            <p\n              className={clsx(\n                styles.iconData,\n                line?.heartRate ? styles.hasData : null\n              )}\n            >\n              {line?.heartRate ? `${line?.heartRate} bpm` : \"No data !\"}\n            </p>\n          </div>\n        </div>\n\n        <div className={styles.leftSideNormalMetrixCont}>\n          {condition ? (\n            <p\n              style={{ background: \"var(--Gray-5)\" }}\n              className={styles.metrixTitle}\n            >\n              Dear {name}, based on your personal info :\n            </p>\n          ) : null}\n          {condition ? (\n            <p\n              style={{ color: \"blue\" }}\n              className={clsx(styles.metrixTitle, styles.weightIcon)}\n            >\n              Your ideal weight should be {calculateIdealWeight(age, height)}{\" \"}\n              kg.\n            </p>\n          ) : (\n            <p\n              style={{\n                color: \"red\",\n                background: \"var(--Gray5)\",\n                textAlign: \"left\",\n              }}\n              className={styles.metrixTitle}\n            >\n              It seems that you did not set up your personal info. Please check\n              Diet Calculator page to set things right !\n            </p>\n          )}\n          {condition ? (\n            <p\n              style={{ color: \"forestgreen\" }}\n              className={clsx(styles.metrixTitle, styles.bloodIcon)}\n            >\n              Your ideal Blood Pressure should be {systolic}/{diastolic} mmHg.\n            </p>\n          ) : null}\n          {condition ? (\n            <p\n              style={{ color: \"red\" }}\n              className={clsx(styles.metrixTitle, styles.heartIcon)}\n            >\n              Your ideal Heart Rate should be around {heartRate} bpm.\n            </p>\n          ) : null}\n        </div>\n      </div>\n      <div className={styles.rightSideCont}>\n        <h1 className={styles.title}>Logs</h1>\n\n        <div className={styles.fromToCont}>\n          <div className={styles.addSleepCont}>\n            <p>Add data for Today : {nowDate}</p>\n          </div>\n          <div className={styles.fromToTitle}>\n            <p className={styles.fromExercise}>Time</p>\n            <p className={styles.from}>Weight</p>\n            <p className={styles.from}>Pressure</p>\n            <p className={styles.from}>Pulse</p>\n            <p className={styles.rem}>Set</p>\n          </div>\n          <div className={styles.lineRowCont}>\n            <div className={styles.lineRow}>\n              <div className={clsx(styles.minutes, styles.date)}>{nowTime}</div>\n              <div className={styles.minutes}>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"1\"\n                  value={line?.weight}\n                  onChange={(e) => updateLine(\"weight\", e.target.value)}\n                  className={clsx(styles.timeInput)}\n                />{\" \"}\n                kg\n              </div>\n              <div className={styles.minutes}>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"1\"\n                  value={line?.systolic}\n                  onChange={(e) => updateLine(\"systolic\", e.target.value)}\n                  className={clsx(styles.timeInput)}\n                />\n                /\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"1\"\n                  value={line?.diastolic}\n                  onChange={(e) => updateLine(\"diastolic\", e.target.value)}\n                  className={clsx(styles.timeInput)}\n                />\n              </div>\n              <div className={styles.minutes}>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"1\"\n                  value={line?.heartRate}\n                  onChange={(e) => updateLine(\"heartRate\", e.target.value)}\n                  className={clsx(styles.timeInput)}\n                />\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => handleSet(line?.weight)}\n                className={styles.removeBtn}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n        {(sysHi || sysLo) && (\n          <p\n            style={{\n              color: \"red\",\n              background: \"var(--Gray5)\",\n              textAlign: \"left\",\n              height: \"fit-content\",\n            }}\n            className={styles.metrixTitle}\n          >\n            Your Systolic blood pressure is too {sysHi ? \"high\" : \"low\"}.\n            Please, consult a doctor !\n          </p>\n        )}\n        {(diaHi || diaLo) && (\n          <p\n            style={{\n              color: \"red\",\n              background: \"var(--Gray5)\",\n              textAlign: \"left\",\n              height: \"fit-content\",\n            }}\n            className={styles.metrixTitle}\n          >\n            Your Diastolic blood pressure is too {diaHi ? \"high\" : \"low\"}.\n            Please, consult a doctor !\n          </p>\n        )}\n        {(pulseHi || pulseLo) && (\n          <p\n            style={{\n              color: \"red\",\n              background: \"var(--Gray5)\",\n              textAlign: \"left\",\n              height: \"fit-content\",\n            }}\n            className={styles.metrixTitle}\n          >\n            Your Pulse is too {pulseHi ? \"high\" : \"low\"}. Please, consult a\n            doctor !\n          </p>\n        )}\n        <div className={styles.rightSideDate}>\n          <p className={styles.rightSideDateP}>Choose records date to see :</p>\n          <div className={styles.dateWrapper}>\n            <input\n              max={today}\n              type=\"date\"\n              value={filterDate}\n              onChange={(e) => setFilterDate(e.target.value)}\n              className={styles.paramInput}\n            />\n          </div>\n        </div>\n\n        {today === filterDate ? (\n          <p\n            style={{\n              color: \"red\",\n              background: \"var(--Gray5)\",\n              textAlign: \"left\",\n              height: \"fit-content\",\n            }}\n            className={styles.metrixTitle}\n          >\n            Not records date selected. Please select a past date to see records\n            !\n          </p>\n        ) : (\n          <div className={styles.fromToCont}>\n            <div className={styles.addSleepCont}>\n              <p>Health Records for : {filterDate}</p>\n            </div>\n            <div className={styles.fromToTitle}>\n              <p style={{ width: \"33%\" }} className={styles.from}>\n                Weight\n              </p>\n              <p style={{ width: \"33%\" }} className={styles.from}>\n                Blood Pressure\n              </p>\n              <p style={{ width: \"33%\" }} className={styles.from}>\n                HeartRate\n              </p>\n            </div>\n            <div className={styles.lineRowCont}>\n              <div className={styles.lineRow}>\n                <div style={{ width: \"33%\" }} className={styles.minutes}>\n                  {lineRecords.weight} kg\n                </div>\n                <div style={{ width: \"33%\" }} className={styles.minutes}>\n                  {lineRecords.systolic}/{lineRecords.diastolic} mmHg\n                </div>\n                <div style={{ width: \"33%\" }} className={styles.minutes}>\n                  {lineRecords?.heartRate} bpm\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["calculateNominalBPAndPulse","age","weight","heartRate","Math","round","heartRateMin","heartRateMax","systolic","systolicMin","systolicMax","diastolic","hr","hrMin","hrMax","sys","sysMin","sysMax","dia","diaMin","diaMax","diastolicMin","diastolicMax","calculateIdealWeight","height","heightM","Number","toFixed","_ref","_user$username","_user$age","_user$height","_user$weight","user","privateFormData","privateDispatch","usePrivate","name","username","weightPrivate","condition","heartsMetrics","now","Date","today","concat","getFullYear","String","getMonth","padStart","getDate","filterDate","setFilterDate","useState","nowTime","toTimeString","slice","nowDate","toLocaleDateString","day","month","year","line","setLine","date","hour","sysHi","sysLo","diaHi","diaLo","pulseHi","pulseLo","updateLine","field","value","newLine","_objectSpread","lineRecords","_jsxs","className","styles","children","_jsx","clsx","src","weightSvg","alt","style","color","bloodPressureSvg2","heartRateSvg","background","textAlign","type","min","step","onChange","e","target","onClick","newWeight","setPrivateFormData","fetchPrivateCalculationData","currentWeight","handleSet","max","width"],"sourceRoot":""}