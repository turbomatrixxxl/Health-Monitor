{"version":3,"file":"static/js/775.429806b5.chunk.js","mappings":"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","sources":["Utils/calculateNominalBPAndPulse.js","Utils/calculateIdealWeight.js","images/icons/weight-svgrepo-com.svg","images/icons/sphygmomanometer-blood-pressure-gauge-svgrepo-com.svg","images/icons/gen-heart-rate-svgrepo-com.svg","webpack://health-monitor/./src/pages/HealthMetricsPage/HealthMetricsPage.module.css?541e","webpack://health-monitor/./src/components/HeartMetrixDateSelector/HeartMetrixDateSelector.module.css?032d","components/HeartMetrixDateSelector/HeartMetrixDateSelector.jsx","pages/HealthMetricsPage/index.js","pages/HealthMetricsPage/HealthMetricsPage.jsx","Utils/formatDate.js"],"sourcesContent":["/**\n * Calculate nominal heart rate and blood pressure with age- and weight-adjusted limits\n * @param {number} age - age in years\n * @param {number} weight - weight in kg\n * @returns {object} - { heartRate, heartRateMin, heartRateMax, systolic, systolicMin, systolicMax, diastolic, diastolicMin, diastolicMax }\n */\nexport default function calculateNominalBPAndPulse(age, weight) {\n  if (!age) {\n    return 0;\n  }\n\n  // Puls nominal: 70 ± 10, ajustat cu varsta\n  const heartRate = Math.round(70 + (age - 30) * 0.3);\n  const heartRateMin = Math.round(heartRate - 10);\n  const heartRateMax = Math.round(heartRate + 10);\n\n  // Tensiune arterială nominală: sistolic 110 ± 10, diastolic 70 ± 5, ajustate cu vârsta\n  const systolic = Math.round(110 + age * 0.5);\n  const systolicMin = Math.round(systolic - 10);\n  const systolicMax = Math.round(systolic + 10);\n\n  const diastolic = Math.round(70 + age * 0.2);\n  const diastolicMin = Math.round(diastolic - 5);\n  const diastolicMax = Math.round(diastolic + 5);\n\n  // Ajustare ușoară în funcție de greutate\n  let hr = heartRate,\n    hrMin = heartRateMin,\n    hrMax = heartRateMax;\n  let sys = systolic,\n    sysMin = systolicMin,\n    sysMax = systolicMax;\n  let dia = diastolic,\n    diaMin = diastolicMin,\n    diaMax = diastolicMax;\n\n  if (weight) {\n    if (weight > 80) {\n      hr += 2;\n      hrMin += 2;\n      hrMax += 2;\n      sys += 3;\n      sysMin += 3;\n      sysMax += 3;\n      dia += 2;\n      diaMin += 2;\n      diaMax += 2;\n    } else if (weight < 60) {\n      hr -= 2;\n      hrMin -= 2;\n      hrMax -= 2;\n      sys -= 3;\n      sysMin -= 3;\n      sysMax -= 3;\n      dia -= 2;\n      diaMin -= 2;\n      diaMax -= 2;\n    }\n  }\n\n  return {\n    heartRate: hr,\n    heartRateMin: hrMin,\n    heartRateMax: hrMax,\n    systolic: sys,\n    systolicMin: sysMin,\n    systolicMax: sysMax,\n    diastolic: dia,\n    diastolicMin: diaMin,\n    diastolicMax: diaMax,\n  };\n}\n\n// const noAge = calculateBPAndPulse();\n// console.log(\"noAge :\", noAge);\n","// calculateIdealWeight.js\nexport default function calculateIdealWeight(age, height) {\n  if (!age || !height || height <= 0) {\n    return \"Invalid input\";\n  }\n\n  const heightM = height / 100;\n\n  // Maxim sănătos (IMC = 24.9)\n  const maxWeight = 24.9 * (heightM * heightM);\n\n  return Number(maxWeight.toFixed(1)); // rotunjit la o zecimală\n}\n","var _path, _path2, _path3;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgWeightSvgrepoCom(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M11.7839 40L36.216 40C37.2775 40 38.1541 39.1708 38.213 38.1109L39.7685 10.1109C39.8322 8.96454 38.9198 8 37.7716 8L10.2284 8C9.08021 8 8.16778 8.96454 8.23146 10.1109L9.78702 38.1109C9.8459 39.1708 10.7225 40 11.7839 40ZM36.216 42C38.339 42 40.0921 40.3415 40.2099 38.2219L41.7654 10.2219C41.8928 7.92908 40.0679 6 37.7716 6L10.2284 6C7.93204 6 6.10717 7.92907 6.23455 10.2219L7.7901 38.2219C7.90786 40.3415 9.661 42 11.7839 42L36.216 42Z\",\n    fill: \"#333333\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M34.1955 17.4057C33.1476 16.2921 31.9212 15.3544 30.5625 14.6334C28.611 13.5977 26.442 13.0387 24.2329 13.0019C22.0239 12.9652 19.8375 13.4518 17.8526 14.4219C16.4707 15.0973 15.2137 15.9937 14.1293 17.0718L18.7665 20.5603C18.7816 20.5652 18.8205 20.5727 18.8976 20.5657C19.0544 20.5516 19.2744 20.4796 19.4875 20.3354C19.799 20.1244 20.1259 19.935 20.4658 19.7688C21.607 19.2111 22.8639 18.9314 24.1339 18.9525C25.4039 18.9736 26.6509 19.295 27.7728 19.8904C28.1071 20.0678 28.4274 20.268 28.7318 20.4892C28.9399 20.6405 29.1574 20.7198 29.3137 20.739C29.3905 20.7485 29.4297 20.7423 29.4448 20.7379L34.1955 17.4057ZM29.4525 20.7347C29.4527 20.7349 29.4506 20.7362 29.4455 20.7377C29.4498 20.7352 29.4523 20.7344 29.4525 20.7347ZM18.759 20.5567C18.7592 20.5565 18.7617 20.5574 18.766 20.5601C18.7609 20.5583 18.7587 20.557 18.759 20.5567ZM35.8512 16.2506C36.5933 17.0688 36.3659 18.3263 35.4616 18.9606L30.5893 22.3781C29.685 23.0124 28.4495 22.7564 27.556 22.1071C27.3273 21.9408 27.0865 21.7904 26.8353 21.6571C25.9921 21.2096 25.055 20.9681 24.1006 20.9522C23.1462 20.9363 22.2016 21.1466 21.344 21.5657C21.0885 21.6906 20.8429 21.8329 20.6088 21.9915C19.6942 22.6108 18.4508 22.8255 17.5682 22.1615L12.8123 18.5837C11.9296 17.9197 11.7441 16.6553 12.513 15.8623C13.7981 14.5369 15.3066 13.4401 16.9744 12.625C19.2429 11.5163 21.7416 10.9602 24.2662 11.0022C26.7908 11.0442 29.2697 11.6831 31.5 12.8667C33.1397 13.7368 34.6109 14.8832 35.8512 16.2506Z\",\n    fill: \"#333333\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.1821 15.5719C27.5446 15.1552 28.1762 15.1112 28.5929 15.4736C29.0097 15.8361 29.0537 16.4677 28.6912 16.8844L25.9448 20.0423C25.5824 20.459 24.9507 20.503 24.534 20.1406C24.1173 19.7781 24.0733 19.1465 24.4357 18.7298L27.1821 15.5719Z\",\n    fill: \"#333333\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgWeightSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/weight-svgrepo-com.2e40d712dfce323eb57b469f1671e07a.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path0, _path1, _path10, _path11, _path12, _path13;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgSphygmomanometerBloodPressureGaugeSvgrepoCom(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 507.6 507.6\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFD54F\"\n    },\n    d: \"M313.8,360.8H371c34.8,0,64,30,64,66.4c0,34-28.4,62.4-62.4,62.4c-34.4,0-62.8-28-62.8-62V268.8h-12 v158.8c0,40.8,33.6,74,74.8,74c40.4,0,74.8-33.6,74.8-74.4c0-42.8-34.4-78.4-75.2-78.4h-58.4V360.8z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#BCAAA4\"\n    },\n    d: \"M329.8,260v-6.8h-52v6.8c0,3.2,4.8,9.2,8,9.2h10h16h10.8C325.8,269.2,329.8,263.6,329.8,260z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#BCAAA4\"\n    },\n    d: \"M118.6,298c-32,0-58,26-58,58s26,58,58,58s58-26,58-58S150.2,298,118.6,298z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FF7043\"\n    },\n    d: \"M112.2,97.6h-4.4c-12.4,24-35.6,75.2-35.6,92.8c0,24.4,18.8,44,42,44s42-19.6,42-44 c0-16.8-15.2-64.8-28.8-92.8h-1.6C126.2,97.6,112.2,97.6,112.2,97.6z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M106.2,78c0-2.4,0-4.8,0.4-7.2C106.2,73.6,106.2,75.6,106.2,78z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M107,68.4c0-0.8,0.4-1.6,0.4-2.8C107.4,66.4,107,67.6,107,68.4z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFD54F\"\n    },\n    d: \"M236.6,5.6h-48.8c-42.8,0-78,32-78,72.4v16.4h12V78c0-34,29.6-60.4,66-60.4h48.8 c37.6,0,63.6,31.6,63.6,59.6v0.4h12C311.8,37.6,276.6,5.6,236.6,5.6z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M108.2,96.4L108.2,96.4L108.2,96.4L108.2,96.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M106.2,94.4v1.2v-0.4C106.2,94.8,106.2,94.8,106.2,94.4z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 110.2,\n    y: 90.4,\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    width: 12,\n    height: 2.8\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M108.2,96.4L108.2,96.4c-0.8,0-1.2-0.4-1.6-1.2v0.4v0.8L108.2,96.4L108.2,96.4z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#EEEEEE\"\n    },\n    d: \"M341.8,81.6h-78c-7.2,0-12.8,4-13.6,16h107.2C355.4,85.6,349.4,81.6,341.8,81.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M245.8,234v2c0,8.8,7.2,16.8,16,16.8h2C254.2,253.2,245.8,244,245.8,234z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#B2DFDB\"\n    },\n    d: \"M331.8,247.2c1.2,0,2-2,2,2h10c7.2,0,12.8-4,13.6-16H250.2c0.8,12,6.8,16,13.6,16h10c0-4,0.8-2,2-2 s2-2,2,2h52C329.8,245.2,330.6,247.2,331.8,247.2z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 249.8,\n    y: 97.6,\n    style: {\n      fill: \"#E0F2F1\"\n    },\n    width: 107.6,\n    height: 135.6\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M331.8,246c-1.2,0-2,0.8-2,2h4C333.8,247.2,333,246,331.8,246z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFCDD2\"\n    },\n    d: \"M275.8,246c-1.2,0-2,0.8-2,2h4C277.8,247.2,277,246,275.8,246z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#E0E0E0\"\n    },\n    d: \"M134.2,321.6c-4.8-2.4-10.4-3.6-15.6-3.6C97.8,318,81,334.8,81,355.6s16.8,37.6,37.6,37.6 s37.6-16.8,37.6-37.6c0-5.2-1.2-10.4-3.2-14.8c-0.4-0.8,0-1.6,0.4-2.4l-17.2-17.6C135.8,322,135,322,134.2,321.6z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 181.8,\n    y: 348.8,\n    style: {\n      fill: \"#F9A825\"\n    },\n    width: 111.6,\n    height: 12\n  }), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M372.6,507.6c-44.4,0-80.8-36-80.8-80V268.8c0-2.4,1.6-4,4-4s4,1.6,4,4v158.8c0,39.6,32.8,72,72.8,72 c39.2,0,72.8-33.2,72.8-72.4c0-42-32.8-76.4-73.2-76.4h-58.4c-2.4,0-4-1.6-4-4s1.6-4,4-4h58c44.8,0,81.2,38,81.2,84.4 C453,471.6,417,507.6,372.6,507.6z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M372.6,491.6c-35.2,0-65.2-29.2-65.2-64V268.8c0-2.4,1.6-4,4-4s4,1.6,4,4v90H371c35.6,0,65.6,31.2,65.6,68.4 C437,462.8,408.2,491.6,372.6,491.6z M315.8,366.8v60.8c0,30.4,26,56,57.2,56c30.4,0,56.4-25.6,56.4-56.4 c0-32.8-26.4-60.4-57.6-60.4H315.8z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M293.8,350.8h-116c-2.4,0-4-1.6-4-4s1.6-4,4-4h115.6c2.4,0,4,1.6,4,4S295.8,350.8,293.8,350.8z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M293.8,366.8h-116c-2.4,0-4-1.6-4-4s1.6-4,4-4h115.6c2.4,0,4,1.6,4,4S295.8,366.8,293.8,366.8z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.6,420c-35.2,0-64-28.8-64-64s28.8-64,64-64s64,28.8,64,64C182.2,391.2,153.8,420,118.6,420z M118.6,300 c-30.8,0-56,25.2-56,56s25.2,56,56,56s56-25.2,56-56C174.2,325.2,149.4,300,118.6,300z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.6,240c-26.4,0-48-22.4-48-50.4c0-19.2,22.8-67.6,36.4-94.8c0.8-2,3.2-2.8,5.2-1.6c2,0.8,2.8,3.2,1.6,5.2 C87,143.6,74.2,177.2,74.2,190c0,23.2,18,42.4,40,42.4s40-18.8,40-42.4c0-12.8-12.8-46-35.6-91.6c-0.8-2,0-4.4,1.6-5.2 c2-0.8,4.4,0,5.2,1.6c13.6,27.2,36.4,76,36.4,94.8C162.6,217.6,141,240,114.6,240z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M124.2,99.6h-16c-2.4,0-4-1.6-4-4V78.4c0-43.2,37.6-78.4,84-78.4H237c43.6,0,81.6,36.4,81.6,78c0,2.4-1.6,4-4,4s-4-1.6-4-4 c0-37.2-34.4-70-73.6-70h-48.8c-42,0-76,31.6-76,70.4v13.2h8V78.4c0-34.4,30.4-62.4,68-62.4H237c38.8,0,65.6,32.4,65.6,61.2 c0,2.4-1.6,4-4,4s-4-1.6-4-4C294.6,52,269.8,24,237,24h-48.8c-33.2,0-60,24.4-60,54.4v17.2C128.2,97.6,126.2,99.6,124.2,99.6z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M343.8,255.2h-80c-11.2,0-20-8.8-20-20V95.6c0-11.2,8.8-20,20-20h80c11.2,0,20,8.8,20,20v139.6 C363.8,246,354.6,255.2,343.8,255.2z M263.8,83.6c-6.4,0-12,5.2-12,12v139.6c0,6.4,5.2,12,12,12h80c6.4,0,12-5.2,12-12V95.6 c0-6.4-5.2-12-12-12H263.8z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M324.2,271.2h-42.4c-6.4,0-10-4-10-11.2v-6.8c0-2.4,1.6-4,4-4s4,1.6,4,4v6.8c0,3.2,0.8,3.2,2,3.2h42.4 c3.2,0,3.2-1.6,3.2-3.2v-6.8c0-2.4,1.6-4,4-4s4,1.6,4,4v6.8C335.8,266.4,331,271.2,324.2,271.2z\"\n  })), _path0 || (_path0 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.6,399.6C94.6,399.6,75,380,75,356s19.6-43.6,43.6-43.6c6.4,0,12.4,1.2,18,4c2,0.8,2.8,3.2,2,5.2s-3.2,2.8-5.2,2 c-4.8-2-9.6-3.2-14.8-3.2C99,320.4,83,336.4,83,356s16,35.6,35.6,35.6s35.6-16,35.6-35.6c0-4.8-0.8-9.6-2.8-14c-0.8-2,0-4.4,2-5.2 c2-0.8,4.4,0,5.2,2c2.4,5.6,3.6,11.2,3.6,17.2C162.2,380,142.6,399.6,118.6,399.6z\"\n  })), _path1 || (_path1 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.2,372.8c-2.4,0-4-1.6-4-4v-24c0-2.4,1.6-4,4-4s4,1.6,4,4v24C124.2,371.2,122.2,372.8,120.2,372.8z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M321.8,99.6h-72c-2.4,0-4-1.6-4-4s1.6-4,4-4h72c2.4,0,4,1.6,4,4S323.8,99.6,321.8,99.6z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.8,99.6h-4c-2.4,0-4-1.6-4-4s1.6-4,4-4h4c2.4,0,4,1.6,4,4S359.8,99.6,357.8,99.6z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M321.8,239.2h-72c-2.4,0-4-1.6-4-4s1.6-4,4-4h72c2.4,0,4,1.6,4,4S323.8,239.2,321.8,239.2z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.8,239.2h-8c-2.4,0-4-1.6-4-4s1.6-4,4-4h8c2.4,0,4,1.6,4,4S359.8,239.2,357.8,239.2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSphygmomanometerBloodPressureGaugeSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/sphygmomanometer-blood-pressure-gauge-svgrepo-com.45c6a7337dede783fddd033e1618b145.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgGenHeartRateSvgrepoCom(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 64 64\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"gen-heart-rate\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"General\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SLICES-64px\",\n    transform: \"translate(-180.000000, 0.000000)\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ICONS\",\n    transform: \"translate(-175.000000, 5.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"gen-heart-rate\",\n    transform: \"translate(180.000000, 6.000000)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0001,5.9995 L28.1011,4.1005 C33.5671,-1.3665 42.4331,-1.3665 47.8991,4.1005 C53.3671,9.5685 53.3661,18.4325 47.8991,23.8985 L26.0001,45.9995 L4.1011,23.8985 C-1.3659,18.4325 -1.3669,9.5685 4.1011,4.1005 C9.5671,-1.3665 18.4331,-1.3665 23.8991,4.1005 L26.0001,5.9995 Z\",\n    id: \"Fill-249\",\n    fill: \"#F16963\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0001,5.9995 L28.1011,4.1005 C33.5671,-1.3665 42.4331,-1.3665 47.8991,4.1005 C53.3671,9.5685 53.3661,18.4325 47.8991,23.8985 L26.0001,45.9995 L4.1011,23.8985 C-1.3659,18.4325 -1.3669,9.5685 4.1011,4.1005 C9.5671,-1.3665 18.4331,-1.3665 23.8991,4.1005 L26.0001,5.9995 Z\",\n    id: \"Stroke-250\",\n    stroke: \"#BE3A37\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    id: \"Stroke-251\",\n    stroke: \"#BE3A37\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    points: \"16.0001 23.9995 23.0001 23.9995 26.0001 11.9995 31.0001 33.9995 35.0001 19.9995 37.0001 23.9995 52.0001 23.9995\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGenHeartRateSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/gen-heart-rate-svgrepo-com.69a828d7c44136d6ae22f649a97feaf9.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"HealthMetricsPage_cont__f60gW\",\"leftSideCont\":\"HealthMetricsPage_leftSideCont__0hGRW\",\"rightSideCont\":\"HealthMetricsPage_rightSideCont__8e2W0\",\"rightSideContentCont\":\"HealthMetricsPage_rightSideContentCont__alqSy\",\"leftSideElementsCont\":\"HealthMetricsPage_leftSideElementsCont__rHCZs\",\"title\":\"HealthMetricsPage_title__dQJc4\",\"leftSideElementCont\":\"HealthMetricsPage_leftSideElementCont__StRoL\",\"iconContainer\":\"HealthMetricsPage_iconContainer__X-Bjn\",\"icon\":\"HealthMetricsPage_icon__ooQJi\",\"weightIcon\":\"HealthMetricsPage_weightIcon__fE0uz\",\"bloodIcon\":\"HealthMetricsPage_bloodIcon__DAcZF\",\"heartIcon\":\"HealthMetricsPage_heartIcon__ZvtWT\",\"iconName\":\"HealthMetricsPage_iconName__ONm-7\",\"iconData\":\"HealthMetricsPage_iconData__usMrg\",\"hasData\":\"HealthMetricsPage_hasData__I4cf7\",\"leftSideNormalMetrixCont\":\"HealthMetricsPage_leftSideNormalMetrixCont__ZAfdd\",\"metrixTitle\":\"HealthMetricsPage_metrixTitle__FVGPo\",\"addSleepCont\":\"HealthMetricsPage_addSleepCont__ZNu3D\",\"rightSideSeeRecordsCont\":\"HealthMetricsPage_rightSideSeeRecordsCont__zYlOD\",\"rightSideDate\":\"HealthMetricsPage_rightSideDate__uxZMp\",\"dateWrapper\":\"HealthMetricsPage_dateWrapper__nHd2o\",\"paramInput\":\"HealthMetricsPage_paramInput__z5vXu\",\"rightSideDateP\":\"HealthMetricsPage_rightSideDateP__sZxXg\",\"fromToCont\":\"HealthMetricsPage_fromToCont__-CAVX\",\"fromToTitle\":\"HealthMetricsPage_fromToTitle__HwJ1W\",\"fromExercise\":\"HealthMetricsPage_fromExercise__jsrEU\",\"from\":\"HealthMetricsPage_from__1M4u9\",\"rem\":\"HealthMetricsPage_rem__BH+ZQ\",\"lineRowCont\":\"HealthMetricsPage_lineRowCont__pFotU\",\"lineRow\":\"HealthMetricsPage_lineRow__3TQvs\",\"minutes\":\"HealthMetricsPage_minutes__TbpSo\",\"date\":\"HealthMetricsPage_date__puXPm\",\"timeInput\":\"HealthMetricsPage_timeInput__32kvw\",\"removeBtn\":\"HealthMetricsPage_removeBtn__NbIan\",\"dash\":\"HealthMetricsPage_dash__4omDs\"};","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"HeartMetrixDateSelector_selector__T3GZc\",\"button\":\"HeartMetrixDateSelector_button__LIhfu\",\"span\":\"HeartMetrixDateSelector_span__PSZhh\",\"spanDark\":\"HeartMetrixDateSelector_spanDark__KKS-K\",\"svg\":\"HeartMetrixDateSelector_svg__sz8dF\",\"svgDark\":\"HeartMetrixDateSelector_svgDark__nwopN\",\"options\":\"HeartMetrixDateSelector_options__m-jTC\",\"optionsDark\":\"HeartMetrixDateSelector_optionsDark__VZxAp\",\"optionsViolet\":\"HeartMetrixDateSelector_optionsViolet__33XXR\",\"option\":\"HeartMetrixDateSelector_option__PC2OO\",\"optionDark\":\"HeartMetrixDateSelector_optionDark__iej9a\",\"activeOption\":\"HeartMetrixDateSelector_activeOption__8yRTC\",\"activeOptionViolet\":\"HeartMetrixDateSelector_activeOptionViolet__Eadxi\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\nimport formatDate from \"../../Utils/formatDate\";\n\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\n\nimport styles from \"./HeartMetrixDateSelector.module.css\";\n\nexport default function HeartMetrixDateSelector({ theme, dates, onSelect }) {\n  const reversedDates = [...dates].sort((a, b) => new Date(b) - new Date(a));\n\n  const [dateA, setDateA] = useState(\n    reversedDates.length > 0 ? reversedDates[0] : \"No records yet.\"\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    if (reversedDates.length > 0 && dateA === \"No records yet.\") {\n      setDateA(reversedDates[0]);\n    }\n  }, [reversedDates, dateA]);\n\n  const handleSelect = (selectedDate) => {\n    setDateA(selectedDate);\n    onSelect(selectedDate);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className={styles.selector} ref={dropdownRef}>\n      <button\n        className={styles.button}\n        onClick={() => setIsOpen((prev) => !prev)}\n      >\n        <span\n          className={clsx(\n            styles.span,\n            theme === \"dark\" || theme === \"violet\"\n              ? styles.spanDark\n              : styles.span\n          )}\n        >\n          {formatDate(dateA)}\n        </span>\n        {!isOpen ? (\n          <HiChevronDown\n            className={clsx(\n              styles.svg,\n              theme === \"dark\" || theme === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        ) : (\n          <HiChevronUp\n            className={clsx(\n              styles.svg,\n              theme === \"dark\" || theme === \"violet\"\n                ? styles.svgDark\n                : styles.svg\n            )}\n          />\n        )}\n      </button>\n\n      {/* Dropdown options */}\n      {isOpen && (\n        <ul\n          className={clsx(\n            styles.options,\n            theme === \"dark\" ? styles.optionsDark : styles.options,\n            theme === \"violet\" ? styles.optionsViolet : styles.options\n          )}\n        >\n          {[...reversedDates].map((option) => (\n            <li\n              key={`date-${option}`}\n              className={clsx(\n                styles.option,\n                theme === \"dark\" ? styles.optionDark : styles.option,\n                option === dateA &&\n                  (theme === \"violet\"\n                    ? styles.activeOptionViolet\n                    : styles.activeOption)\n              )}\n              onClick={() => handleSelect(option)}\n            >\n              {formatDate(option)}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nHeartMetrixDateSelector.propTypes = {\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  theme: PropTypes.string,\n  onSelect: PropTypes.func.isRequired,\n};\n","import HealthMetricsPage from \"./HealthMetricsPage\";\n\nexport default HealthMetricsPage;\n","import React, { useEffect, useState } from \"react\";\n\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport calculateIdealWeight from \"../../Utils/calculateIdealWeight\";\nimport calculateNominalBPAndPulse from \"../../Utils/calculateNominalBPAndPulse\";\n\nimport clsx from \"clsx\";\n\nimport weightSvg from \"../../images/icons/weight-svgrepo-com.svg\";\nimport bloodPressureSvg2 from \"../../images/icons/sphygmomanometer-blood-pressure-gauge-svgrepo-com.svg\";\nimport heartRateSvg from \"../../images/icons/gen-heart-rate-svgrepo-com.svg\";\n\nimport styles from \"./HealthMetricsPage.module.css\";\nimport { setPrivateFormData } from \"../../redux/private/privateSlice\";\n\nimport {\n  fetchPrivateCalculationData,\n  setHeartMetrix,\n} from \"../../redux/private/operationsPrivate\";\nimport HeartMetrixDateSelector from \"../../components/HeartMetrixDateSelector/HeartMetrixDateSelector\";\n\nexport default function HealthMetricsPage() {\n  const { user, privateFormData = {}, privateDispatch } = usePrivate();\n\n  // useEffect(() => {\n  //   console.log(\"privateFormData has changed:\", privateFormData);\n  // }, [privateFormData]);\n\n  const name = user?.username ?? user?.name ?? \"User\";\n  const age = user?.age ?? 0;\n  const height = user?.height ?? 0;\n  const weightPrivate = user?.weight ?? 0;\n  const heartMetrix = user?.heart || [];\n\n  const heartMetrixCondition = heartMetrix.length > 0;\n\n  function normalizeDate(date) {\n    const dateToNormalize = new Date(date);\n\n    return `${dateToNormalize.getFullYear()}-${String(\n      dateToNormalize.getMonth() + 1\n    ).padStart(2, \"0\")}-${String(dateToNormalize.getDate()).padStart(2, \"0\")}`;\n  }\n\n  const heartMetrixDates = heartMetrixCondition\n    ? heartMetrix.map((record) => normalizeDate(record.date))\n    : [];\n\n  const lastHeartMetrixRecord =\n    heartMetrix.length > 0 ? heartMetrix[heartMetrix.length - 1] : false;\n\n  const lastHeartMetrixRecordDate = lastHeartMetrixRecord\n    ? lastHeartMetrixRecord.date\n    : false;\n\n  const resetedLastHeartMetrixRecordDate = lastHeartMetrixRecordDate\n    ? new Date(lastHeartMetrixRecordDate).setHours(0, 0, 0, 0)\n    : false;\n\n  // console.log(\n  //   \"resetedLastHeartMetrixRecordDate :\",\n  //   resetedLastHeartMetrixRecordDate\n  // );\n\n  const todayDate = new Date();\n  const resetedtodayDate = todayDate.setHours(0, 0, 0, 0);\n\n  // console.log(\"resetedtodayDate :\", resetedtodayDate);\n\n  const condition = age > 0 && height > 0 && weightPrivate > 0;\n\n  const heartsMetrics = calculateNominalBPAndPulse(age, weightPrivate);\n  const {\n    heartRate,\n    systolic,\n    diastolic,\n    heartRateMin,\n    heartRateMax,\n    systolicMin,\n    systolicMax,\n    diastolicMin,\n    diastolicMax,\n  } = heartsMetrics;\n\n  const now = new Date();\n\n  const today = (day) => {\n    const daytoBe = new Date(day);\n    return daytoBe.toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\", // prescurtat: Jan, Feb, Mar\n      year: \"numeric\",\n    });\n  };\n\n  const nowTime = now.toTimeString().slice(0, 8);\n  const nowDate = now.toLocaleDateString(\"en-GB\", {\n    day: \"2-digit\",\n    month: \"short\", // prescurtat: Jan, Feb, Mar\n    year: \"numeric\",\n  });\n  // console.log(\"nowDate :\", nowDate);\n  // console.log(\"nowTime :\", nowTime);\n\n  const [line, setLine] = useState(\n    resetedLastHeartMetrixRecordDate === resetedtodayDate\n      ? { ...lastHeartMetrixRecord }\n      : {\n          date: nowDate,\n          time: nowTime,\n          weight: weightPrivate ?? 0,\n          systolic: 0,\n          diastolic: 0,\n          pulse: 0,\n        }\n  );\n\n  // console.log(\"line :\", line);\n\n  // console.log(\"line :\", line);\n\n  const updateLine = (field, value) => {\n    const newLine = { ...line };\n    newLine[field] = value;\n\n    setLine(newLine);\n  };\n\n  const [lineRecords, setLineRecords] = useState(\n    resetedLastHeartMetrixRecordDate === resetedtodayDate\n      ? { ...lastHeartMetrixRecord }\n      : {\n          date: nowDate,\n          time: nowTime,\n          weight: weightPrivate ?? 0,\n          systolic: line?.systolic,\n          diastolic: line?.diastolic,\n          pulse: line?.pulse,\n        }\n  );\n\n  const sysHi = lineRecords?.systolic > systolicMax;\n  const sysLo = lineRecords?.systolic < systolicMin;\n  const diaHi = lineRecords?.diastolic > diastolicMax;\n  const diaLo = lineRecords?.diastolic < diastolicMin;\n  const pulseHi = lineRecords?.pulse > heartRateMax;\n  const pulseLo = lineRecords?.pulse < heartRateMin;\n\n  useEffect(() => {\n    if (resetedLastHeartMetrixRecordDate === resetedtodayDate) {\n      setLineRecords({ ...lastHeartMetrixRecord });\n    }\n  }, [\n    resetedLastHeartMetrixRecordDate,\n    resetedtodayDate,\n    lastHeartMetrixRecord,\n  ]);\n\n  console.log(\"lineRecords :\", lineRecords);\n\n  function handleSet(value) {\n    setLine({ ...line, date: nowDate, time: nowTime });\n    const newWeight = line?.weight;\n    // console.log(\"newWeight :\", newWeight);\n\n    privateDispatch(setHeartMetrix({ ...line, time: nowTime }));\n\n    privateDispatch(setPrivateFormData({ name: \"currentWeight\", value }));\n\n    privateDispatch(\n      fetchPrivateCalculationData({\n        ...privateFormData,\n        currentWeight: newWeight,\n      })\n    );\n  }\n\n  return (\n    <div className={styles.cont}>\n      <div className={styles.leftSideCont}>\n        <h1 className={styles.title}>Health Metrics</h1>\n        <div className={styles.leftSideElementsCont}>\n          <div className={clsx(styles.leftSideElementCont, styles.weightIcon)}>\n            <div className={styles.iconContainer}>\n              <img\n                src={weightSvg}\n                alt=\"Weight Icon\"\n                className={clsx(styles.icon)}\n              />\n              <h2 style={{ color: \"blue\" }} className={clsx(styles.iconName)}>\n                Weight\n              </h2>\n            </div>\n            <p\n              className={clsx(\n                styles.iconData,\n                user?.weight ? styles.hasData : null\n              )}\n            >\n              {lineRecords?.weight ? `${lineRecords.weight} kg` : \"No data !\"}\n            </p>\n          </div>\n          <div className={clsx(styles.leftSideElementCont, styles.bloodIcon)}>\n            <div className={styles.iconContainer}>\n              <img\n                src={bloodPressureSvg2}\n                alt=\"Blood pressure Icon\"\n                className={clsx(styles.icon)}\n              />\n              <h2\n                style={{ color: \"forestgreen\" }}\n                className={clsx(styles.iconName)}\n              >\n                Blood Pressure\n              </h2>\n            </div>\n            <p\n              className={clsx(\n                styles.iconData,\n                lineRecords?.systolic && lineRecords?.diastolic\n                  ? styles.hasData\n                  : null\n              )}\n            >\n              {lineRecords?.systolic && lineRecords?.diastolic\n                ? `${lineRecords?.systolic}/${lineRecords?.diastolic} mmHg`\n                : \"No data !\"}\n            </p>\n          </div>\n          <div className={clsx(styles.leftSideElementCont, styles.heartIcon)}>\n            <div className={styles.iconContainer}>\n              <img\n                src={heartRateSvg}\n                alt=\"Heart rate Icon\"\n                className={clsx(styles.icon)}\n              />\n              <h2 style={{ color: \"red\" }} className={clsx(styles.iconName)}>\n                Heart Rate\n              </h2>\n            </div>\n            <p\n              className={clsx(\n                styles.iconData,\n                line?.pulse ? styles.hasData : null\n              )}\n            >\n              {lineRecords?.pulse ? `${lineRecords?.pulse} bpm` : \"No data !\"}\n            </p>\n          </div>\n        </div>\n\n        <div className={styles.leftSideNormalMetrixCont}>\n          {condition ? (\n            <p\n              style={{ background: \"var(--Gray-5)\" }}\n              className={styles.metrixTitle}\n            >\n              Dear {name}, based on your personal info :\n            </p>\n          ) : null}\n          {condition ? (\n            <p\n              style={{ color: \"blue\" }}\n              className={clsx(styles.metrixTitle, styles.weightIcon)}\n            >\n              Your ideal weight should be {calculateIdealWeight(age, height)}{\" \"}\n              kg.\n            </p>\n          ) : (\n            <p\n              style={{\n                color: \"red\",\n                background: \"var(--Gray5)\",\n                textAlign: \"left\",\n              }}\n              className={styles.metrixTitle}\n            >\n              It seems that you did not set up your personal info. Please check\n              Diet Calculator page to set things right !\n            </p>\n          )}\n          {condition ? (\n            <p\n              style={{ color: \"forestgreen\" }}\n              className={clsx(styles.metrixTitle, styles.bloodIcon)}\n            >\n              Your ideal Blood Pressure should be {systolic}/{diastolic} mmHg.\n            </p>\n          ) : null}\n          {condition ? (\n            <p\n              style={{ color: \"red\" }}\n              className={clsx(styles.metrixTitle, styles.heartIcon)}\n            >\n              Your ideal Heart Rate should be around {heartRate} bpm.\n            </p>\n          ) : null}\n        </div>\n      </div>\n      <div className={styles.rightSideCont}>\n        <h1 className={styles.title}>Logs</h1>\n\n        <div className={styles.rightSideContentCont}>\n          <div className={styles.fromToCont}>\n            <div className={styles.addSleepCont}>\n              <p>Add data for Today : {nowDate}</p>\n            </div>\n            <div className={styles.fromToTitle}>\n              <p className={styles.fromExercise}>Time</p>\n              <p className={styles.from}>Weight</p>\n              <p className={styles.from}>Pressure</p>\n              <p className={styles.from}>Pulse</p>\n              <p className={styles.rem}>Set</p>\n            </div>\n            <div className={styles.lineRowCont}>\n              <div className={styles.lineRow}>\n                <div className={clsx(styles.minutes, styles.date)}>\n                  {nowTime}\n                </div>\n                <div className={styles.minutes}>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"1\"\n                    value={line?.weight}\n                    onChange={(e) => updateLine(\"weight\", e.target.value)}\n                    className={clsx(styles.timeInput)}\n                  />{\" \"}\n                  kg\n                </div>\n                <div className={styles.minutes}>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"1\"\n                    value={line?.systolic}\n                    onChange={(e) => updateLine(\"systolic\", e.target.value)}\n                    className={clsx(styles.timeInput)}\n                  />\n                  /\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"1\"\n                    value={line?.diastolic}\n                    onChange={(e) => updateLine(\"diastolic\", e.target.value)}\n                    className={clsx(styles.timeInput)}\n                  />\n                </div>\n                <div className={styles.minutes}>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"1\"\n                    value={line?.pulse}\n                    onChange={(e) => updateLine(\"pulse\", e.target.value)}\n                    className={clsx(styles.timeInput)}\n                  />\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => handleSet(line?.weight)}\n                  className={styles.removeBtn}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n          </div>\n          {heartMetrixCondition ? (\n            <div className={styles.fromToCont}>\n              {(sysHi || sysLo) && (\n                <p\n                  style={{\n                    color: \"red\",\n                    background: \"var(--Gray5)\",\n                    textAlign: \"left\",\n                    height: \"fit-content\",\n                  }}\n                  className={styles.metrixTitle}\n                >\n                  Your Systolic blood pressure is too {sysHi ? \"high\" : \"low\"}.\n                  Please, consult a doctor !\n                </p>\n              )}\n              {(diaHi || diaLo) && (\n                <p\n                  style={{\n                    color: \"red\",\n                    background: \"var(--Gray5)\",\n                    textAlign: \"left\",\n                    height: \"fit-content\",\n                  }}\n                  className={styles.metrixTitle}\n                >\n                  Your Diastolic blood pressure is too {diaHi ? \"high\" : \"low\"}.\n                  Please, consult a doctor !\n                </p>\n              )}\n              {(pulseHi || pulseLo) && (\n                <p\n                  style={{\n                    color: \"red\",\n                    background: \"var(--Gray5)\",\n                    textAlign: \"left\",\n                    height: \"fit-content\",\n                  }}\n                  className={styles.metrixTitle}\n                >\n                  Your Pulse is too {pulseHi ? \"high\" : \"low\"}. Please, consult\n                  a doctor !\n                </p>\n              )}\n            </div>\n          ) : (\n            <p\n              style={{\n                color: \"red\",\n                background: \"var(--Gray5)\",\n                textAlign: \"left\",\n                height: \"fit-content\",\n              }}\n              className={styles.metrixTitle}\n            >\n              No records yet for today!\n            </p>\n          )}\n          <div className={styles.rightSideSeeRecordsCont}>\n            <div className={styles.rightSideDate}>\n              <p className={styles.rightSideDateP}>\n                Choose records date to see :\n              </p>\n              <div className={styles.dateWrapper}>\n                <HeartMetrixDateSelector\n                  theme={\"light\"}\n                  dates={heartMetrixDates}\n                  onSelect={(selectedDate) => {\n                    const selectedRecord = heartMetrix.find(\n                      (r) => normalizeDate(r.date) === selectedDate\n                    );\n                    if (selectedRecord) {\n                      setLineRecords({ ...selectedRecord });\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            {!heartMetrixCondition ? (\n              <p\n                style={{\n                  color: \"red\",\n                  background: \"var(--Gray5)\",\n                  textAlign: \"left\",\n                  height: \"fit-content\",\n                }}\n                className={styles.metrixTitle}\n              >\n                Not heart metrix records yet !\n              </p>\n            ) : (\n              <div className={styles.fromToCont}>\n                <div className={styles.addSleepCont}>\n                  <p>\n                    Health Records for : {today(lineRecords.date)}{\" \"}\n                    {lineRecords?.time.slice(0, 5) ?? \"00:00:00\"}\n                  </p>\n                </div>\n                <div className={styles.fromToTitle}>\n                  <p style={{ width: \"33%\" }} className={styles.from}>\n                    Weight\n                  </p>\n                  <p style={{ width: \"33%\" }} className={styles.from}>\n                    Blood Pressure\n                  </p>\n                  <p style={{ width: \"33%\" }} className={styles.from}>\n                    HeartRate\n                  </p>\n                </div>\n                <div className={styles.lineRowCont}>\n                  <div className={styles.lineRow}>\n                    <div style={{ width: \"33%\" }} className={styles.minutes}>\n                      {lineRecords.weight} kg\n                    </div>\n                    <div style={{ width: \"33%\" }} className={styles.minutes}>\n                      {lineRecords.systolic}/{lineRecords.diastolic} mmHg\n                    </div>\n                    <div style={{ width: \"33%\" }} className={styles.minutes}>\n                      {lineRecords?.pulse} bpm\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function formatDate(inputDate) {\n  const days = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const [year, month, day] = inputDate.split(\"-\").map(Number);\n\n  // creăm obiect Date (lunile sunt 0-based în JS)\n  const dateObj = new Date(year, month - 1, day);\n\n  const dayName = days[dateObj.getDay()];\n  const monthName = months[month - 1];\n\n  return `${dayName}-${String(day).padStart(2, \"0\")}-${monthName}-${year}`;\n}\n"],"names":["calculateNominalBPAndPulse","age","weight","heartRate","Math","round","heartRateMin","heartRateMax","systolic","systolicMin","systolicMax","diastolic","hr","hrMin","hrMax","sys","sysMin","sysMax","dia","diaMin","diaMax","diastolicMin","diastolicMax","calculateIdealWeight","height","heightM","Number","toFixed","HeartMetrixDateSelector","_ref","theme","dates","onSelect","reversedDates","sort","a","b","Date","dateA","setDateA","useState","length","isOpen","setIsOpen","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","styles","ref","children","onClick","prev","_jsx","clsx","formatDate","HiChevronUp","HiChevronDown","map","option","handleSelect","selectedDate","concat","_user$username","_user$age","_user$height","_user$weight","_lineRecords$time$sli","user","privateFormData","privateDispatch","usePrivate","name","username","weightPrivate","heartMetrix","heart","heartMetrixCondition","normalizeDate","date","dateToNormalize","getFullYear","String","getMonth","padStart","getDate","heartMetrixDates","record","lastHeartMetrixRecord","lastHeartMetrixRecordDate","resetedLastHeartMetrixRecordDate","setHours","resetedtodayDate","condition","heartsMetrics","now","nowTime","toTimeString","slice","nowDate","toLocaleDateString","day","month","year","line","setLine","_objectSpread","time","pulse","updateLine","field","value","newLine","lineRecords","setLineRecords","sysHi","sysLo","diaHi","diaLo","pulseHi","pulseLo","console","log","src","weightSvg","alt","style","color","bloodPressureSvg2","heartRateSvg","background","textAlign","type","min","step","onChange","e","newWeight","setHeartMetrix","setPrivateFormData","fetchPrivateCalculationData","currentWeight","handleSet","selectedRecord","find","r","width","inputDate","split","dayName","getDay","monthName"],"sourceRoot":""}